{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/Forms/ItemRequest/ItemRequest.jsx","Components/UI/Modal/Modal.jsx"],"names":["ItemRequest","history","useHistory","Relations","useSelector","state","EmpAuth","AccessControls","EmployeeData","useState","PurchaseRequisitionCode","setPurchaseRequisitionCode","Disabled","setDisabled","DisabledEntity","setDisabledEntity","EditMode","setEditMode","ShowModal","setShowModal","Content","setContent","Index","setIndex","View","setView","Requests","setRequests","Locations","setLocations","Companies","setCompanies","Items","setItems","Comments","setComments","StoreItems","setStoreItems","Logs","setLogs","details","specifications","logs","specificationsStatus","RequestDetails","setRequestDetails","company_code","location_code","request_to","request_by","emp_id","request_date","Date","request_action","Item","setItem","name","required_quantity","reason","Entity","setEntity","useEffect","length","item_id","window","location","href","split","OpenModal","GetItemRequests","socket","on","request_id","GetRequestDetails","parseInt","pop","GetCommnets","GetCompanies","includes","setTimeout","ReactTooltip","rebuild","id","axios","post","then","res","data","objDiv","document","getElementById","scrollTop","scrollHeight","catch","err","console","log","GetLocations","createPRCode","get","sessionStorage","getItem","access","onChangeHandler","e","target","value","val","arr","attributes","record","y","push","company_name","location_name","CCode","LastNum","Year","d","getMonth","getFullYear","toString","substring","code","pr_code","onSubmitForm","url","request","JSON","stringify","itemRequest","itemsDetails","emit","message","Data2","FormData","append","replace","onChangeEntities","key","AddItem","arr2","edited","new_added","SelectItem","index","RemoveItem","filter","i","EditItem","content","className","onSubmit","alert","onChange","required","map","ActRequest","preventDefault","receiver","sender","show","Hide","onClick","$","toggleClass","sender_id","comment","send_date","toDateString","send_time","item_request_id","reset","type","to","option","category","sr","disabled","attr","colSpan","availble_quantity","status","parse","minLength","placeholder","sender_name","receiver_name","style","textTransform","acted_date","log_date","log_time","log_id","wordBreak","shift","remarks","pr_request_generate_date","requisition_name","pr_request_generate_time","delivery_date","delivery_time","OpenRequest","request_time","Modal","props","display","animationDelay"],"mappings":"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","file":"static/js/48.7e33739f.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport './ItemRequest.css';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from '../../../../../../axios';\r\nimport socket from '../../../../../../io';\r\n\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Modal from '../../../../../UI/Modal/Modal';\r\nimport $ from 'jquery';\r\n\r\nconst ItemRequest = () => {\r\n\r\n    const history = useHistory();\r\n    const Relations = useSelector((state) => state.EmpAuth.Relations);\r\n    const AccessControls = useSelector( ( state ) => state.EmpAuth.EmployeeData );\r\n\r\n    const [ PurchaseRequisitionCode, setPurchaseRequisitionCode ] = useState('');\r\n    const [ Disabled, setDisabled ] = useState(true);\r\n    const [ DisabledEntity, setDisabledEntity ] = useState(true);\r\n    const [ EditMode, setEditMode ] = useState(false);\r\n    const [ ShowModal, setShowModal ] = useState(false);\r\n    const [ Content, setContent ] = useState();\r\n    const [ Index, setIndex ] = useState();\r\n    const [ View, setView ] = useState('');\r\n    const [ Requests, setRequests ] = useState([]);\r\n    const [ Locations, setLocations ] = useState([]);\r\n    const [ Companies, setCompanies ] = useState([]);\r\n    const [ Items, setItems ] = useState([]);\r\n    const [ Comments, setComments ] = useState([]);\r\n    const [ StoreItems, setStoreItems ] = useState([]);\r\n    const [ Logs, setLogs ] = useState([]);\r\n    const [ RequestDetails, setRequestDetails ] = useState(\r\n        {\r\n            details: null,\r\n            specifications: [],\r\n            logs: [],\r\n            specificationsStatus: []\r\n        }\r\n    );\r\n    const [ Item, setItem ] = useState(\r\n        {\r\n            company_code: '',\r\n            location_code: '',\r\n            request_to: '',\r\n            request_by: AccessControls.emp_id,\r\n            request_date: new Date(),\r\n            request_action: ''\r\n        }\r\n    );\r\n\r\n    const [ Entity, setEntity ] = useState(\r\n        {\r\n            name: \"\",\r\n            required_quantity: \"\",\r\n            reason: \"\"\r\n        }\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( Items.length === 0 )\r\n            {\r\n                setDisabled( true );\r\n            }else\r\n            if ( Item.company_code === '' )\r\n            {\r\n                setDisabled( true );\r\n            }else\r\n            if ( Item.location_code === '' )\r\n            {\r\n                setDisabled( true );\r\n            }else\r\n            {\r\n                setDisabled( false );\r\n            }\r\n\r\n        }, [ Items.length, Item.company_code, Item.location_code ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( !Entity.item_id )\r\n            {\r\n                setDisabledEntity( true );\r\n            }else\r\n            if ( Entity.name !== '' && Entity.required_quantity !== '' && Entity.reason !== '' )\r\n            {\r\n                setDisabledEntity( false );\r\n            }else\r\n            if ( Entity.reason.length > 20 )\r\n            {\r\n                setDisabledEntity( false );\r\n            }else\r\n            {\r\n                setDisabledEntity( true );\r\n            }\r\n\r\n            if ( window.location.href.split('/')[5] === 'edit' && Entity.name !== '' && Entity.required_quantity !== '' && Entity.reason !== '' )\r\n            {\r\n                OpenModal();\r\n            }\r\n\r\n        }, [ Entity.name, Entity.required_quantity, Entity.reason ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            GetItemRequests();\r\n\r\n            socket.on(\r\n                'somethingchangeinitemrequest', ( request_id ) => {\r\n                    \r\n                    GetItemRequests();\r\n                    if ( request_id )\r\n                    {\r\n                        GetRequestDetails(request_id);\r\n                    }\r\n            \r\n                }\r\n            )\r\n\r\n            socket.on(\r\n                'newitemrequestcomment', ( request_id ) => {\r\n                    \r\n                    if ( parseInt( request_id ) === parseInt( window.location.href.split('/').pop().split('=').pop() ) )\r\n                    {\r\n                        GetCommnets(window.location.href.split('/').pop().split('=').pop());\r\n                    }\r\n            \r\n                }\r\n            )\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, []\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( window.location.href.split('/').pop() === 'new' || window.location.href.split('/')[5] === 'generatepr' )\r\n            {\r\n                GetCompanies();\r\n            }\r\n\r\n            if ( window.location.href.split('/').pop().includes('index') )\r\n            {\r\n                GetRequestDetails(window.location.href.split('/').pop().split('=').pop());\r\n                GetCommnets(window.location.href.split('/').pop().split('=').pop());\r\n            }\r\n            setView( window.location.href.split('/').pop() );\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ window.location.href.split('/').pop() ]\r\n    )\r\n\r\n    setTimeout(() => {\r\n        ReactTooltip.rebuild();\r\n    }, 1000);\r\n\r\n    const GetCommnets = (id) => {\r\n\r\n        axios.post('/getitemrequestcomments', { id: id })\r\n        .then(\r\n            res => \r\n            {\r\n\r\n                setComments( res.data );\r\n                setTimeout(() => {\r\n                    let objDiv = document.getElementById(\"comments_content\");\r\n                    if (objDiv) {\r\n                        objDiv.scrollTop = objDiv.scrollHeight;\r\n                    }\r\n                }, 500);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    const GetRequestDetails = ( id ) => {\r\n\r\n        axios.post('/getitemrequestdetails', { id: id })\r\n        .then(\r\n            res => \r\n            {\r\n\r\n                setItems( res.data[1] );\r\n                setRequestDetails(\r\n                    {\r\n                        details: res.data[0][0],\r\n                        specifications: res.data[1],\r\n                        logs: res.data[2],\r\n                        specificationsStatus: res.data[3]\r\n                    }\r\n                );\r\n\r\n                GetLocations( res.data[0][0].company_code )\r\n                createPRCode( res.data[0][0].company_code );\r\n\r\n                setTimeout(() => {\r\n                    setItem(\r\n                        {\r\n                            ...Item,\r\n                            company_code: res.data[0][0].company_code,\r\n                            location_code: res.data[0][0].location_code\r\n                        }\r\n                    );\r\n                }, 1000);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    const GetStoreItems = ( key ) => {\r\n\r\n        if ( key !== '' )\r\n        {\r\n            axios.post('/getmatchedstoreitems', { key: key })\r\n            .then(\r\n                res => \r\n                {\r\n    \r\n                    setStoreItems(res.data);\r\n    \r\n                }\r\n            ).catch(\r\n                err => {\r\n    \r\n                    console.log(err);\r\n    \r\n                }\r\n            );\r\n        }else\r\n        {\r\n            setStoreItems([]);\r\n        }\r\n\r\n    }\r\n\r\n    const GetCompanies = () => {\r\n\r\n        axios.get('/getallcompanies')\r\n        .then(\r\n            res => \r\n            { //get all companies\r\n                    \r\n                // set companies\r\n                setCompanies(res.data);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    const GetLocations = ( company_code ) => {\r\n\r\n        axios.post('/getcompanylocations',\r\n            {\r\n                company_code: company_code\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setLocations( res.data );\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const GetItemRequests = () => {\r\n\r\n        axios.post(\r\n            '/getallitemrequests',\r\n            {\r\n                emp_id: sessionStorage.getItem('EmpID'),\r\n                access: AccessControls.access\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setRequests( res.data );\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const onChangeHandler = ( e ) => {\r\n\r\n        const { name, value } = e.target;\r\n        const val ={\r\n            ...Item,\r\n            [name]: value\r\n        };\r\n        let arr = Logs;\r\n\r\n        setItem( val );\r\n\r\n        if ( name === 'company_code' )\r\n        {\r\n            GetLocations( value );\r\n            if ( window.location.href.split('/')[5] === 'generatepr' )\r\n            {\r\n                createPRCode( value );\r\n            }\r\n\r\n            if ( e.target.attributes.log )\r\n            {\r\n                let record;\r\n                for ( let y = 0; y < arr.length; y++ )\r\n                {\r\n                    if ( arr[y].includes(\"Request company\") )\r\n                    {\r\n                        record = true;\r\n                    }\r\n                }\r\n\r\n                if ( !record )\r\n                {\r\n                    arr.push(\r\n                        \"Request company (\" + RequestDetails.details.company_name + \") has changed\"\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        if ( name === 'location_code' )\r\n        {\r\n            if ( e.target.attributes.log )\r\n            {\r\n                let record;\r\n                for ( let y = 0; y < arr.length; y++ )\r\n                {\r\n                    if ( arr[y].includes(\"Request location\") )\r\n                    {\r\n                        record = true;\r\n                    }\r\n                }\r\n\r\n                if ( !record )\r\n                {\r\n                    arr.push(\r\n                        \"Request location (\" + RequestDetails.details.location_name + \") has changed\"\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        if ( e.target.attributes.log )\r\n        {\r\n            setLogs( arr );\r\n        }\r\n\r\n    }\r\n\r\n    const createPRCode = ( company_code ) => {\r\n\r\n        let CCode = '';\r\n        let LastNum = '';\r\n        let Year = '';\r\n\r\n        const d = new Date();\r\n        if ( d.getMonth() > 6 )\r\n        {\r\n            Year = d.getFullYear().toString().substring(2,4) + '/' + ( d.getFullYear() + 1 ).toString().substring(2,4);\r\n        }else\r\n        {\r\n            Year = ( d.getFullYear() - 1 ).toString().substring(2,4) + '/' + d.getFullYear().toString().substring(2,4);\r\n        }\r\n\r\n        axios.post('/getshortcompanyname', { company_code: company_code }).then(\r\n            (res) => {\r\n\r\n                if ( res.data.length > 0 )\r\n                {\r\n                    CCode = res.data[0].code;\r\n                }\r\n                axios.post('/getprcode', { company_code: company_code }).then(\r\n                    (res) => {\r\n        \r\n                        if ( res.data.length > 0 )\r\n                        {\r\n                            let code = ( parseInt( res.data[0].pr_code.split('-')[1] ) + 1 ).toString();\r\n                            if ( code.length === 1 )\r\n                            {\r\n                                code = '0' + code;\r\n                            }\r\n                            LastNum = code;\r\n                        }else\r\n                        {\r\n                            LastNum = '01';\r\n                        }\r\n                        setPurchaseRequisitionCode( CCode + '-' + LastNum + '-' + Year );\r\n        \r\n                    }\r\n                ).catch(\r\n                    (err) => {\r\n        \r\n                        console.log(err);\r\n        \r\n                    }\r\n                )\r\n\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const onSubmitForm = (url) => {\r\n\r\n        setDisabled( true );\r\n        axios.post(\r\n            url,\r\n            {\r\n                request: JSON.stringify( Item ),\r\n                specifications: JSON.stringify( Items ),\r\n                pr_code: PurchaseRequisitionCode,\r\n                itemRequest: JSON.stringify( RequestDetails.details ),\r\n                logs: JSON.stringify( Logs ),\r\n                itemsDetails: JSON.stringify( RequestDetails.specificationsStatus )\r\n            }\r\n        ).then(\r\n            () => {\r\n\r\n                socket.emit( 'somethingchangeinitemrequest' );\r\n                \r\n                let message = sessionStorage.getItem('name') + ' has sent your a new item request for approval';\r\n                if ( url === '/generatepronitemrequest' )\r\n                {\r\n                    message = sessionStorage.getItem('name') + ' proceed your item request to purchase requisition';\r\n                }\r\n                const Data2 = new FormData();\r\n                Data2.append('eventID', 3);\r\n                Data2.append('receiverID', Item.request_to);\r\n                Data2.append('senderID', sessionStorage.getItem('EmpID'));\r\n                Data2.append('Title', sessionStorage.getItem('name'));\r\n                Data2.append('NotificationBody', message);\r\n                axios.post('/newnotification', Data2).then(() => {\r\n\r\n                    axios.post('/sendmail', Data2).then(() => {\r\n\r\n\r\n                    })\r\n                })\r\n                history.replace('/item_requests');\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                setDisabled( false );\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const onChangeEntities = ( e ) => {\r\n\r\n        const { name, value } = e.target;\r\n        const val = {\r\n            ...Entity,\r\n            [name]: value\r\n        };\r\n\r\n        setEntity( val );\r\n\r\n        if ( name === 'name' )\r\n        {\r\n            GetStoreItems( value );\r\n        }\r\n\r\n    }\r\n\r\n    const AddItem = ( log ) => {\r\n\r\n        let arr = Items;\r\n        \r\n        if ( window.location.href.split('/')[5] === 'generatepr' )\r\n        {\r\n            if ( log )\r\n            {\r\n                let arr2 = Logs;\r\n                if ( EditMode )\r\n                {\r\n                    if ( parseInt( arr[Index].required_quantity ) !== parseInt( Entity.required_quantity ) )\r\n                    {\r\n                        arr2.push(\r\n                            Entity.name + \"'s required quantity has edited\"\r\n                        )    \r\n                    }\r\n    \r\n                    if ( arr[Index].reason !== Entity.reason )\r\n                    {\r\n                        arr2.push(\r\n                            Entity.name + \"'s reason has edited\"\r\n                        )    \r\n                    }\r\n    \r\n                    if ( arr[Index].name !== Entity.name )\r\n                    {\r\n                        arr2.push(\r\n                            arr[Index].name + \" has changed to a new item \" + Entity.name\r\n                        )    \r\n                    }\r\n                }else\r\n                {\r\n                    arr2.push(\r\n                        'New item ' + Entity.name + \" has added\"\r\n                    )\r\n                }\r\n                setLogs(arr2);\r\n            }\r\n            if ( EditMode )\r\n            {\r\n                arr[Index] = {\r\n                    id: Entity.id,\r\n                    item_id: Entity.item_id,\r\n                    name: Entity.name,\r\n                    required_quantity: Entity.required_quantity,\r\n                    reason: Entity.reason,\r\n                    edited: true\r\n                }\r\n                setEditMode(false);\r\n                setIndex();\r\n            }else\r\n            {\r\n                arr.push(\r\n                    {\r\n                        id: Entity.id,\r\n                        item_id: Entity.item_id,\r\n                        name: Entity.name,\r\n                        required_quantity: Entity.required_quantity,\r\n                        reason: Entity.reason,\r\n                        new_added: true\r\n                    }\r\n                );\r\n            }\r\n        }else\r\n        {\r\n            if ( EditMode )\r\n            {\r\n                arr[Index] = {\r\n                    id: Entity.id,\r\n                    item_id: Entity.item_id,\r\n                    name: Entity.name,\r\n                    required_quantity: Entity.required_quantity,\r\n                    reason: Entity.reason\r\n                }\r\n                setEditMode(false);\r\n                setIndex();\r\n            }else\r\n            {\r\n                arr.push(\r\n                    {\r\n                        id: Entity.id,\r\n                        item_id: Entity.item_id,\r\n                        name: Entity.name,\r\n                        required_quantity: Entity.required_quantity,\r\n                        reason: Entity.reason\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    \r\n        setItems( arr );\r\n        setEntity(\r\n            {\r\n                name: '',\r\n                required_quantity: '',\r\n                reason: ''\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const SelectItem = ( index ) => {\r\n\r\n        const val ={\r\n            ...Entity,\r\n            item_id: StoreItems[index].id,\r\n            name: StoreItems[index].name\r\n        }\r\n\r\n        setEntity( val );\r\n        setStoreItems([]);\r\n\r\n    }\r\n\r\n    const RemoveItem = ( index ) => {\r\n\r\n        let arr = Items.filter(\r\n            (val, i) => {\r\n\r\n                return i !== index\r\n\r\n            }\r\n        );\r\n\r\n        setItems( arr );\r\n\r\n    }\r\n\r\n    const EditItem = ( index ) => {\r\n\r\n        let val = Items[index];\r\n        setEntity(\r\n            {\r\n                id: val.id,\r\n                item_id: val.item_id,\r\n                name: val.name,\r\n                required_quantity: val.required_quantity,\r\n                reason: val.reason\r\n            }\r\n        )\r\n        setEditMode( true );\r\n        setIndex( index );\r\n\r\n    }\r\n\r\n    const OpenRequest = (index) => {\r\n\r\n        history.replace('/item_requests/view/index=' + index);\r\n\r\n    }\r\n\r\n    const onClose = () => {\r\n\r\n        setShowModal( !ShowModal );\r\n\r\n    }\r\n\r\n    const OpenModal = () => {\r\n\r\n        const content = \r\n        <form className=\"w-100\" onSubmit={ ( e ) => alert( \"A\" ) }>\r\n            <small>Item Name</small>\r\n            <div className=\"itemNameContainer\">\r\n                <input onChange={ onChangeEntities } value={ Entity.name } name=\"name\" className=\"form-control form-control-sm\" required />\r\n                <div className=\"list\">\r\n                    {\r\n                        StoreItems.map(\r\n                            val => {\r\n                                return <span>{val.name}</span>\r\n                            }\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            <small>Required Quantity</small>\r\n            <input onChange={ onChangeEntities } value={ Entity.required_quantity } name=\"required_quantity\" className=\"form-control form-control-sm\" required />\r\n            <small>Reason / Details</small> \r\n            <input onChange={ onChangeEntities } value={ Entity.reason } name=\"reason\" className=\"form-control form-control-sm\" required />\r\n            <div className=\"text-right\">\r\n                <button className=\"btn btn-outline-dark btn-sm mt-2\">\r\n                    update\r\n                </button>\r\n            </div>\r\n        </form>\r\n\r\n        setContent( content );\r\n        setShowModal( true );\r\n\r\n    }\r\n\r\n    const PerformAction = () => {\r\n\r\n        let content;\r\n        if ( Item.request_action === 'cancel' )\r\n        {\r\n            content = \r\n            <form className=\"w-100\" onSubmit={ ( e ) => ActRequest( e, '/cancelitemrequest' ) }>\r\n                <p>Do you want to cancel the request?</p>\r\n                <textarea className=\"form-control form-control-sm\" required minLength={10} placeholder=\"Give Reason\" name='remarks'></textarea>\r\n                <div className=\"text-right\">\r\n                    <button className=\"btn btn-outline-dark btn-sm mt-2\">\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        }else\r\n        if ( Item.request_action === 'approve' )\r\n        {\r\n            content = \r\n            <form className=\"w-100\" onSubmit={ ( e ) => ActRequest( e, '/approveitemrequest' ) }>\r\n                <p>Do you want to approve the request?</p>\r\n                <textarea className=\"form-control form-control-sm\" required minLength={10} placeholder=\"Give Remarks\" name='remarks'></textarea>\r\n                <div className=\"text-right\">\r\n                    <button className=\"btn btn-outline-dark btn-sm mt-2\">\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        }else\r\n        if ( Item.request_action === 'reject' )\r\n        {\r\n            content = \r\n            <form className=\"w-100\" onSubmit={ ( e ) => ActRequest( e, '/rejectitemrequest' ) }>\r\n                <p>Do you want to reject the request?</p>\r\n                <textarea className=\"form-control form-control-sm\" required minLength={10} placeholder=\"Give Reason\" name='remarks'></textarea>\r\n                <div className=\"text-right\">\r\n                    <button className=\"btn btn-outline-dark btn-sm mt-2\">\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        }else\r\n        if ( Item.request_action === 'generatepr' )\r\n        {\r\n            content = \r\n            <form className=\"w-100\" onSubmit={ () => history.replace('/item_requests/generatepr/index=' + RequestDetails.details.id) }>\r\n                <p>Do you want to generate purchase requisition of the request?</p>\r\n                <div className=\"text-right\">\r\n                    <button className=\"btn btn-outline-dark btn-sm mt-2\">\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        }else\r\n        if ( Item.request_action === 'deliver' )\r\n        {\r\n            content = \r\n            <form className=\"w-100\" onSubmit={ ( e ) => ActRequest( e, '/deliveritemrequest' ) }>\r\n                <p>Are you going to deliver the items of this request?</p>\r\n                <div className=\"text-right\">\r\n                    <button className=\"btn btn-outline-dark btn-sm mt-2\">\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        }else\r\n        if ( Item.request_action === 'delivered' )\r\n        {\r\n            content = \r\n            <form className=\"w-100\" onSubmit={ ( e ) => ActRequest( e, '/delivereditemrequest' ) }>\r\n                <p>Did you receive your required items?</p>\r\n                <div className=\"text-right\">\r\n                    <button className=\"btn btn-outline-dark btn-sm mt-2\">\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        }\r\n\r\n        setContent( content );\r\n        setShowModal( true );\r\n\r\n    }\r\n\r\n    const ActRequest = ( e, url ) => {\r\n\r\n        e.preventDefault();\r\n        axios.post(\r\n            url,\r\n            {\r\n                request_id: RequestDetails.details.id,\r\n                emp_id: AccessControls.emp_id,\r\n                reason: e.target['remarks'] ? e.target['remarks'].value : null\r\n            }\r\n        ).then(\r\n            () => {\r\n\r\n                socket.emit( 'somethingchangeinitemrequest', RequestDetails.details.id );\r\n                \r\n                let message;\r\n                let receiver;\r\n                let sender;\r\n                if ( url === '/rejectitemrequest' )\r\n                {\r\n                    message = sessionStorage.getItem('name') + ' has reject your item request.';\r\n                    receiver = RequestDetails.details.request_by;\r\n                    sender = sessionStorage.getItem('EmpID');\r\n                }else\r\n                if ( url === '/approveitemrequest' )\r\n                {\r\n                    message = sessionStorage.getItem('name') + ' has approve your item request.';\r\n                    receiver = RequestDetails.details.request_by;\r\n                    sender = sessionStorage.getItem('EmpID');\r\n                }else\r\n                if ( url === '/cancelitemrequest' )\r\n                {\r\n                    message = sessionStorage.getItem('name') + ' has cancel his item request.';\r\n                    receiver = Item.request_to;\r\n                    sender = Item.request_by;\r\n                }else\r\n                if ( url === '/deliveritemrequest' )\r\n                {\r\n                    message = \"Delivery of your required item (s) is in process.\";\r\n                    receiver = RequestDetails.details.request_by;\r\n                    sender = sessionStorage.getItem('EmpID');\r\n                }\r\n                const Data2 = new FormData();\r\n                Data2.append('eventID', 3);\r\n                Data2.append('receiverID', receiver);\r\n                Data2.append('senderID', sender);\r\n                Data2.append('Title', sessionStorage.getItem('name'));\r\n                Data2.append('NotificationBody', message);\r\n                axios.post('/newnotification', Data2).then(() => {\r\n\r\n                    axios.post('/sendmail', Data2).then(() => {\r\n\r\n\r\n                    })\r\n                })\r\n                history.replace('/item_requests');\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const newComment = ( e ) => {\r\n\r\n        e.preventDefault();\r\n        axios.post(\r\n            '/newitemrequestcomment', \r\n            {\r\n                comment: e.target['comment'].value,\r\n                item_request_id: window.location.href.split('/').pop().split('=').pop(),\r\n                sender_id: sessionStorage.getItem(\"EmpID\")\r\n            }\r\n        ).then(\r\n            () => {\r\n\r\n                document.getElementById('commentForm').reset();\r\n                GetCommnets( window.location.href.split('/').pop().split('=').pop() );\r\n                socket.emit( 'newitemrequestcomment', window.location.href.split('/').pop().split('=').pop() );\r\n            \r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={ ShowModal } Hide={ onClose } content={ Content } />\r\n            {\r\n                View.includes('index')\r\n                ?\r\n                <div className='commentBox'>\r\n                    <div className='header' onClick={ () => $('.commentBox').toggleClass('open') }>\r\n                        Comment Section\r\n\r\n                        {\r\n                            Comments.length === 0\r\n                            ?null\r\n                            :\r\n                            <span className='counting'>\r\n                                { Comments.length }\r\n                            </span>\r\n                        }\r\n                    </div>\r\n                    <div className='comments_content' id=\"comments_content\">\r\n\r\n                        {\r\n                            Comments.length === 0\r\n                            ?\r\n                            <div className='text-center'>No Comments</div>\r\n                            :\r\n                            Comments.map(\r\n                                val => {\r\n\r\n                                    return (\r\n                                        <div className={ parseInt( val.sender_id ) === parseInt(sessionStorage.getItem('EmpID')) ? 'comment mine' : 'comment' }>\r\n                                            <small className={ parseInt( val.sender_id ) === parseInt(sessionStorage.getItem('EmpID')) ? 'mine' : '' }> <b>{val.name}</b> </small>\r\n                                            <p className={ parseInt( val.sender_id ) === parseInt(sessionStorage.getItem('EmpID')) ? 'mine' : '' }> {val.comment} </p>\r\n                                            <small className={ parseInt( val.sender_id ) === parseInt(sessionStorage.getItem('EmpID')) ? 'mine' : '' }> { new Date( val.send_date ).toDateString() } at { val.send_time } </small>\r\n                                        </div>\r\n                                    ) \r\n\r\n                                }\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                    <form className='newComment' id=\"commentForm\" onSubmit={ newComment }>\r\n                        <input required type=\"text\" name=\"comment\" />\r\n                        <button><i className=\"las la-paper-plane\"></i></button>\r\n                    </form>\r\n                </div>\r\n                :null\r\n            }\r\n            {\r\n                window.location.href.split('/')[5] === 'generatepr'\r\n                ?\r\n                <div className=\"items_container\">\r\n\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-3\">\r\n\r\n                        <div>\r\n\r\n                            <h5 className='mb-0 font-weight-bold'>Generating Purchase Requisition</h5>\r\n                            {/* {\r\n                                View === 'new'\r\n                                ?\r\n                                :\r\n                                <h5 className='mb-0 font-weight-bold'>Update Existing Store Items</h5>\r\n                            }  */}\r\n\r\n                        </div>\r\n                        <div className=\"d-flex\">\r\n                            <Link to={ '/item_requests/view/index=' + window.location.href.split('/').pop().split('=').pop() } className=\"btn btn-sm cancle\">cancel</Link>\r\n                            {\r\n                                !Disabled\r\n                                ?\r\n                                <>\r\n                                    <select className=\"form-control form-control-sm mx-2\" onChange={ onChangeHandler } name=\"request_to\">\r\n                                        <option value=\"\">Select the option</option>\r\n                                        {\r\n                                            Relations.map(\r\n                                                (val, index) => {\r\n                                                    let option;\r\n                                                    if ( val.category === 'all' || val.category.includes('item_request') )\r\n                                                    {\r\n                                                        option = <option value={val.sr} key={index}> {val.name} </option>;\r\n                                                    }\r\n\r\n                                                    return option;\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                    {\r\n                                        Item.request_to !== ''\r\n                                        ?\r\n                                        <button className=\"btn btn-sm submit\" type=\"button\" onClick={ () => onSubmitForm('/generatepronitemrequest') }> \r\n                                            submit\r\n                                        </button>\r\n                                        :null\r\n                                    }\r\n                                </>\r\n                                :null\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"container-fluid px-0\">\r\n                        <form className=\"p-3 rounded\">\r\n\r\n                            <h6 className='mb-3 font-weight-bold'>Purchase Requisition Form</h6>\r\n                            <div className=\"d-flex w-100\">\r\n                                <div className=\"mr-1 w-50\">\r\n                                    <label className=\"mb-0\"> Company </label>\r\n                                    <select className=\"form-control form-control-sm mb-2\" log='company_code' onChange={ onChangeHandler } name=\"company_code\" value={ Item.company_code }>\r\n                                        <option value=''>Select the option</option>\r\n                                        {\r\n                                            Companies.map(\r\n                                                val => {\r\n\r\n                                                    return <option key={ val.company_code } value={ val.company_code }> { val.company_name } </option>\r\n\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"ml-1 w-50\">\r\n                                    <label className=\"mb-0\"> PR Number </label>\r\n                                    <input type=\"text\" disabled className=\"form-control form-control-sm mb-2\" value={PurchaseRequisitionCode} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex w-100\">\r\n                                <div className=\"mr-1 w-50\">\r\n                                <label className=\"mb-0\"> Delivery / Work Location </label>\r\n                                    <select className=\"form-control form-control-sm mb-2\" log='location_code' onChange={ onChangeHandler } name=\"location_code\" value={ Item.location_code }>\r\n                                        <option value=''>Select the option</option>\r\n                                        {\r\n                                            Locations.map(\r\n                                                val => {\r\n\r\n                                                    return <option key={ val.location_code } value={ val.location_code }> { val.location_name } </option>\r\n\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"ml-1 w-50\">\r\n                                    <label className=\"mb-0\"> Date </label>\r\n                                    <input type=\"text\" disabled className=\"form-control form-control-sm mb-2\" value={new Date().toDateString()} />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <table className=\"table table-sm mt-4\">\r\n                                <tr className=\"bg-light\">\r\n\r\n                                    <th>Sr No.</th>\r\n                                    <th>Status</th>\r\n                                    <th>Item</th>\r\n                                    <th>Quantity</th>\r\n                                    <th>Reason / Details</th>\r\n                                    <th>Availability</th>\r\n                                                                                \r\n                                </tr>\r\n                                {\r\n                                    Items.map(\r\n                                        ( val, index ) => {\r\n\r\n                                            return (\r\n                                                <>\r\n                                                    {\r\n                                                        EditMode && parseInt( Index ) === parseInt( index )\r\n                                                        ?\r\n                                                        <tr>\r\n\r\n                                                            <td> { Index + 1 } </td>\r\n                                                            <td>  </td>\r\n                                                            <td className=\"ItemColumn\">\r\n                                                                <input onChange={ onChangeEntities } value={ Entity.name } attr=\"pr\" name=\"name\" className=\"entities form-control form-control-sm\" />\r\n                                                                {\r\n                                                                    StoreItems.length > 0\r\n                                                                    ?\r\n                                                                    <div className=\"StoreItemsList\">\r\n                                                                        {\r\n                                                                            StoreItems.map(\r\n                                                                                ( val, index ) => {\r\n\r\n                                                                                    return <p key={ index } className=\"StoreItemsListItem\" onClick={ () => SelectItem(index) }>{val.name}</p>\r\n\r\n                                                                                }\r\n                                                                            )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                    :null\r\n                                                                }\r\n                                                            </td>\r\n                                                            <td><input onChange={ onChangeEntities } value={ Entity.required_quantity } attr=\"pr\" name=\"required_quantity\" type=\"number\" className=\"entities form-control form-control-sm\" /></td>\r\n                                                            <td colSpan={2}><input onChange={ onChangeEntities } value={ Entity.reason } attr=\"pr\" name=\"reason\" type=\"text\" className=\"entities form-control form-control-sm\" /></td>\r\n                                                                                                        \r\n                                                        </tr>\r\n                                                        :\r\n                                                        RequestDetails.specificationsStatus.length > 0\r\n                                                        ?\r\n                                                        <tr>\r\n\r\n                                                            <td>{ index + 1 }</td>\r\n                                                            <td>{ val.new_added ? \"new\" : val.edited ? 'edited' : 'default' }</td>\r\n                                                            <td className='underline'>\r\n                                                                { val.name }\r\n                                                                {\r\n                                                                    RequestDetails.specificationsStatus[index]\r\n                                                                    ?\r\n                                                                    <div className='items_specifications details'>\r\n                                                                        <b>Availble Quantity: </b>\r\n                                                                        <span> { RequestDetails.specificationsStatus[index].availble_quantity } </span>\r\n                                                                        <br />\r\n                                                                        <b>Status: </b>\r\n                                                                        <span> { RequestDetails.specificationsStatus[index].status } </span>\r\n                                                                    </div>\r\n                                                                    :null\r\n                                                                }\r\n                                                            </td>\r\n                                                            <td>{ val.required_quantity }</td>\r\n                                                            <td className=\"icons\">\r\n                                                                { val.reason }\r\n                                                                <span>\r\n                                                                    <i onClick={ () => EditItem( index ) } className=\"lar la-edit\"></i>\r\n                                                                    <i onClick={ () => RemoveItem( index ) } className=\"lar la-trash-alt\"></i>\r\n                                                                </span>\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                {\r\n                                                                    RequestDetails.specificationsStatus[index]\r\n                                                                    ?\r\n                                                                    parseInt( val.required_quantity ) > parseInt( RequestDetails.specificationsStatus[index].availble_quantity ) ? \"Not Availble\" : \"Availble\"\r\n                                                                    :null\r\n                                                                }\r\n                                                            </td>\r\n                                                                                                        \r\n                                                        </tr>\r\n                                                        :null\r\n                                                    }\r\n                                                </>\r\n                                            )\r\n\r\n                                        }\r\n                                    )\r\n                                }\r\n                                {\r\n                                    !EditMode\r\n                                    ?\r\n                                    <tr>\r\n\r\n                                        <td> { Items.length + 1 } </td>\r\n                                        <td>  </td>\r\n                                        <td className=\"ItemColumn\">\r\n                                            <input onChange={ onChangeEntities } value={ Entity.name } name=\"name\" className=\"entities form-control form-control-sm\" />\r\n                                            {\r\n                                                StoreItems.length > 0\r\n                                                ?\r\n                                                <div className=\"StoreItemsList\">\r\n                                                    {\r\n                                                        StoreItems.map(\r\n                                                            ( val, index ) => {\r\n\r\n                                                                return <p key={ index } className=\"StoreItemsListItem\" onClick={ () => SelectItem(index) }>{val.name}</p>\r\n\r\n                                                            }\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                                :null\r\n                                            }\r\n                                        </td>\r\n                                        <td><input onChange={ onChangeEntities } value={ Entity.required_quantity } name=\"required_quantity\" type=\"number\" className=\"entities form-control form-control-sm\" /></td>\r\n                                        <td colSpan={2}><input onChange={ onChangeEntities } value={ Entity.reason } name=\"reason\" type=\"text\" className=\"entities form-control form-control-sm\" /></td>\r\n                                                                                    \r\n                                    </tr>\r\n                                    :null\r\n                                }\r\n                            </table>\r\n\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-sm cancle\" onClick={ () => AddItem( 'log' ) } type=\"button\" disabled={ DisabledEntity }> \r\n                                    {\r\n                                        EditMode\r\n                                        ?\r\n                                        \"update item\"\r\n                                        :\r\n                                        \"add item\"\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                :\r\n                View === 'new'\r\n                ?\r\n                <div className=\"items_container\">\r\n\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-3\">\r\n\r\n                        <div>\r\n\r\n                            <h5 className='mb-0 font-weight-bold'>Send New Item Request</h5>\r\n                            {/* {\r\n                                View === 'new'\r\n                                ?\r\n                                :\r\n                                <h5 className='mb-0 font-weight-bold'>Update Existing Store Items</h5>\r\n                            }  */}\r\n\r\n                        </div>\r\n                        <div className=\"d-flex\">\r\n                            <Link to='/item_requests' className=\"btn btn-sm cancle\">cancel</Link>\r\n                            {\r\n                                !Disabled\r\n                                ?\r\n                                <>\r\n                                    <select className=\"form-control form-control-sm mx-2\" onChange={ onChangeHandler } name=\"request_to\">\r\n                                        <option value=\"\">Select the option</option>\r\n                                        {\r\n                                            Relations.map(\r\n                                                (val, index) => {\r\n                                                    let option;\r\n                                                    if ( val.category === 'all' || val.category.includes('item_request') )\r\n                                                    {\r\n                                                        option = <option value={val.sr} key={index}> {val.name} </option>;\r\n                                                    }\r\n\r\n                                                    return option;\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                    {\r\n                                        Item.request_to !== ''\r\n                                        ?\r\n                                        <button className=\"btn btn-sm submit\" type=\"button\" onClick={ () => onSubmitForm('/newitemrequest') }> \r\n                                            submit\r\n                                        </button>\r\n                                        :null\r\n                                    }\r\n                                </>\r\n                                :null\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"container-fluid px-0\">\r\n                        <form className=\"p-3 rounded\">\r\n\r\n                            <h6 className='mb-3 font-weight-bold'>Item Request Form</h6>\r\n                            <div className=\"d-flex w-100\">\r\n                                <div className=\"mr-1 w-50\">\r\n                                    <label className=\"mb-0\"> Company </label>\r\n                                    <select className=\"form-control form-control-sm mb-2\" onChange={ onChangeHandler } name=\"company_code\" value={ Item.company_code }>\r\n                                        <option value=''>Select the option</option>\r\n                                        {\r\n                                            Companies.map(\r\n                                                val => {\r\n\r\n                                                    return <option key={ val.company_code } value={ val.company_code }> { val.company_name } </option>\r\n\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"ml-1 w-50\">\r\n                                    <label className=\"mb-0\"> Date </label>\r\n                                    <input type=\"text\" disabled className=\"form-control form-control-sm mb-2\" value={new Date().toDateString()} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex w-100\">\r\n                                <div className=\"mr-1 w-50\">\r\n                                <label className=\"mb-0\"> Delivery / Work Location </label>\r\n                                    <select className=\"form-control form-control-sm mb-2\" onChange={ onChangeHandler } name=\"location_code\" value={ Item.location_code }>\r\n                                        <option value=''>Select the option</option>\r\n                                        {\r\n                                            Locations.map(\r\n                                                val => {\r\n\r\n                                                    return <option key={ val.location_code } value={ val.location_code }> { val.location_name } </option>\r\n\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"ml-1 w-50\">\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <table className=\"table table-sm mt-4\">\r\n                                <tr className=\"bg-light\">\r\n\r\n                                    <th>Sr No.</th>\r\n                                    <th>Item</th>\r\n                                    <th>Quantity</th>\r\n                                    <th>Reason / Details</th>\r\n                                                                                \r\n                                </tr>\r\n                                {\r\n                                    Items.map(\r\n                                        ( val, index ) => {\r\n\r\n                                            return (\r\n                                                <>\r\n                                                    {\r\n                                                        EditMode && parseInt( Index ) === parseInt( index )\r\n                                                        ?\r\n                                                        <tr>\r\n\r\n                                                            <td> { Index + 1 } </td>\r\n                                                            <td className=\"ItemColumn\">\r\n                                                                <input onChange={ onChangeEntities } value={ Entity.name } name=\"name\" className=\"entities form-control form-control-sm\" />\r\n                                                                {\r\n                                                                    StoreItems.length > 0\r\n                                                                    ?\r\n                                                                    <div className=\"StoreItemsList\">\r\n                                                                        {\r\n                                                                            StoreItems.map(\r\n                                                                                ( val, index ) => {\r\n\r\n                                                                                    return <p key={ index } className=\"StoreItemsListItem\" onClick={ () => SelectItem(index) }>{val.name}</p>\r\n\r\n                                                                                }\r\n                                                                            )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                    :null\r\n                                                                }\r\n                                                            </td>\r\n                                                            <td><input onChange={ onChangeEntities } value={ Entity.required_quantity } name=\"required_quantity\" type=\"number\" className=\"entities form-control form-control-sm\" /></td>\r\n                                                            <td><input onChange={ onChangeEntities } value={ Entity.reason } name=\"reason\" type=\"text\" className=\"entities form-control form-control-sm\" /></td>\r\n                                                                                                        \r\n                                                        </tr>\r\n                                                        :\r\n                                                        <tr>\r\n\r\n                                                            <td>{ index + 1 }</td>\r\n                                                            <td>{ val.name }</td>\r\n                                                            <td>{ val.required_quantity }</td>\r\n                                                            <td className=\"icons\">\r\n                                                                { val.reason }\r\n                                                                <span>\r\n                                                                    <i onClick={ () => EditItem( index ) } className=\"lar la-edit\"></i>\r\n                                                                    <i onClick={ () => RemoveItem( index ) } className=\"lar la-trash-alt\"></i>\r\n                                                                </span>\r\n                                                            </td>\r\n                                                                                                        \r\n                                                        </tr>\r\n                                                    }\r\n                                                </>\r\n                                            )\r\n\r\n                                        }\r\n                                    )\r\n                                }\r\n                                {\r\n                                    !EditMode\r\n                                    ?\r\n                                    <tr>\r\n\r\n                                        <td> { Items.length + 1 } </td>\r\n                                        <td className=\"ItemColumn\">\r\n                                            <input onChange={ onChangeEntities } value={ Entity.name } name=\"name\" className=\"entities form-control form-control-sm\" />\r\n                                            {\r\n                                                StoreItems.length > 0\r\n                                                ?\r\n                                                <div className=\"StoreItemsList\">\r\n                                                    {\r\n                                                        StoreItems.map(\r\n                                                            ( val, index ) => {\r\n\r\n                                                                return <p key={ index } className=\"StoreItemsListItem\" onClick={ () => SelectItem(index) }>{val.name}</p>\r\n\r\n                                                            }\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                                :null\r\n                                            }\r\n                                        </td>\r\n                                        <td><input onChange={ onChangeEntities } value={ Entity.required_quantity } name=\"required_quantity\" type=\"number\" className=\"entities form-control form-control-sm\" /></td>\r\n                                        <td><input onChange={ onChangeEntities } value={ Entity.reason } name=\"reason\" type=\"text\" className=\"entities form-control form-control-sm\" /></td>\r\n                                                                                    \r\n                                    </tr>\r\n                                    :null\r\n                                }\r\n                            </table>\r\n\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-sm cancle\" onClick={ AddItem } type=\"button\" disabled={ DisabledEntity }> \r\n                                    {\r\n                                        EditMode\r\n                                        ?\r\n                                        \"update item\"\r\n                                        :\r\n                                        \"add item\"\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                :\r\n                View.includes('index')\r\n                ?\r\n                <div className=\"items_container\">\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-3\">\r\n\r\n                        <div>\r\n\r\n                            <h5 className='mb-0 font-weight-bold'>Request Details</h5>\r\n\r\n                        </div>\r\n                        <div className=\"d-flex\">\r\n\r\n                            {\r\n                                RequestDetails.details !== null\r\n                                ?\r\n                                <select name=\"request_action\" id=\"\" className='form-control mr-2 form-control-sm request_action' onChange={onChangeHandler}>\r\n                                    <option value=\"\">select</option>\r\n                                    {\r\n                                        RequestDetails.details.status === 'sent' && RequestDetails.details.request_by === AccessControls.emp_id\r\n                                        ?\r\n                                        <option value=\"cancel\">cancel</option>\r\n                                        :null\r\n                                    }\r\n                                    {\r\n                                        RequestDetails.details.status === 'delivery is in process' && RequestDetails.details.request_by === AccessControls.emp_id\r\n                                        ?\r\n                                        <option value=\"delivered\">received</option>\r\n                                        :null\r\n                                    }\r\n                                    {\r\n                                        RequestDetails.details.status === 'sent' && RequestDetails.details.request_by !== AccessControls.emp_id\r\n                                        ?\r\n                                        <>\r\n                                            <option value=\"approve\">approve</option>\r\n                                            <option value=\"reject\">reject</option>\r\n                                        </>\r\n                                        :null\r\n                                    }\r\n                                    {\r\n                                        RequestDetails.details.status === 'approved' && RequestDetails.details.request_by !== AccessControls.emp_id\r\n                                        ?\r\n                                        JSON.parse(AccessControls.access).includes(529) || JSON.parse(AccessControls.access).includes(1)\r\n                                        ?\r\n                                        <>\r\n                                            <option value=\"generatepr\">generate purchase requisition</option>\r\n                                        </>\r\n                                        :null\r\n                                        :null\r\n                                    }\r\n                                    {\r\n                                        RequestDetails.details.request_by !== AccessControls.emp_id\r\n                                        ?\r\n                                        JSON.parse(AccessControls.access).includes(529) || JSON.parse(AccessControls.access).includes(1)\r\n                                        ?\r\n                                        RequestDetails.details.status === 'approved' || RequestDetails.details.status === 'proceed to purchase requisition'\r\n                                        ?\r\n                                        <>\r\n                                            <option value=\"deliver\">deliver</option>\r\n                                        </>\r\n                                        :null\r\n                                        :null\r\n                                        :null\r\n                                    }\r\n                                </select>\r\n                                :null\r\n                            }\r\n                            {\r\n                                Item.request_action === ''\r\n                                ?null\r\n                                :\r\n                                <button onClick={ PerformAction } className=\"btn btn-sm submit mr-2\">next</button>\r\n                            }\r\n                            <Link to='/item_requests' className=\"btn btn-sm newBtn\">close</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    {\r\n                        RequestDetails.details !== null\r\n                        ?\r\n                        <div className=\"container-fluid px-0\">\r\n                            <form>\r\n                                <h5 className='mb-4 font-weight-bold text-center'>Item Request</h5>\r\n\r\n                                <div className=\"d-flex w-100\">\r\n                                    <div className=\"w-50 pr-1\">\r\n                                        <div className=\"d-flex align-items-center\">\r\n\r\n                                            <p className='mb-0 w-50 font-weight-bold'>Requested By: </p>\r\n                                            <p className='mb-0'>{ RequestDetails.details.sender_name }</p>\r\n\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center\">\r\n\r\n                                            <p className='mb-0 w-50 font-weight-bold'>Company: </p>\r\n                                            <p className='mb-0'>{ RequestDetails.details.company_name }</p>\r\n\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center\">\r\n\r\n                                            <p className='mb-0 w-50 font-weight-bold'>Delivery / Work Location: </p>\r\n                                            <p className='mb-0'>{ RequestDetails.details.location_name }</p>\r\n\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center\">\r\n\r\n                                            <p className='mb-0 w-50 font-weight-bold'>Request Date: </p>\r\n                                            <p className='mb-0'>{ new Date( RequestDetails.details.request_date ).toDateString() }</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"w-50 pl-1\">\r\n                                        <div className=\"d-flex align-items-center\">\r\n\r\n                                            <p className='mb-0 w-50 font-weight-bold'>Received By: </p>\r\n                                            <p className='mb-0'>{ RequestDetails.details.receiver_name }</p>\r\n\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center\">\r\n\r\n                                            <p className='mb-0 w-50 font-weight-bold' style={ { textTransform: \"capitalize\" } }>\r\n                                                {\r\n                                                    RequestDetails.details.status === 'canceled'\r\n                                                    ?\r\n                                                    \"Cancelation \"\r\n                                                    :\r\n                                                    RequestDetails.details.status === 'approved'\r\n                                                    ?\r\n                                                    \"Approval \"\r\n                                                    :\r\n                                                    RequestDetails.details.status === 'rejected'\r\n                                                    ?\r\n                                                    \"Rejection \"\r\n                                                    :null\r\n                                                }\r\n                                                Date: \r\n                                            </p>\r\n                                            <p className='mb-0'>{ RequestDetails.details.acted_date === null ? \"Not Approve Yet\" : new Date(RequestDetails.details.acted_date).toDateString() }</p>\r\n\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center\">\r\n\r\n                                            <p className='mb-0 w-50 font-weight-bold'>Request Status: </p>\r\n                                            <p className='mb-0 statusBox'>{ RequestDetails.details.status }</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"my-3 logContainer\">\r\n                                    {\r\n                                        RequestDetails.details.request_by === AccessControls.emp_id\r\n                                        ?null\r\n                                        :\r\n                                        RequestDetails.logs.map(\r\n                                            val => {\r\n                                                return (\r\n                                                    <div key={ val.log_id } className=\"log\"> \r\n                                                        <span>{ val.log }</span>\r\n                                                        <span>{ new Date( val.log_date ).toDateString() } at { val.log_time }</span>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </div>\r\n\r\n                                <table className=\"table table-sm\">\r\n\r\n                                    <tr>\r\n                                        <th>Sr No</th>\r\n                                        <th>Status</th>\r\n                                        <th>Item Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Reason / Details</th>\r\n                                        {/* <th>Availability</th> */}\r\n                                    </tr>\r\n\r\n                                    {\r\n                                        RequestDetails.specifications.map(\r\n                                            (val, index) => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <td>{ index + 1 }</td>\r\n                                                        <td>{ val.new_added ? \"new\" : val.edited ? 'edited' : 'default' }</td>\r\n                                                        {\r\n                                                            JSON.parse(AccessControls.access).includes(529)\r\n                                                            ||\r\n                                                            JSON.parse(AccessControls.access).includes(1)\r\n                                                            ?\r\n                                                            <td className='underline'>\r\n                                                                { val.name }\r\n                                                                {/* {\r\n                                                                    RequestDetails.specificationsStatus[index]\r\n                                                                    ?\r\n                                                                    <div className='items_specifications details'>\r\n                                                                        <b>Availble Quantity: </b>\r\n                                                                        <span> { RequestDetails.specificationsStatus[index].availble_quantity } </span>\r\n                                                                        <br />\r\n                                                                        <b>Status: </b>\r\n                                                                        <span> { RequestDetails.specificationsStatus[index].status } </span>\r\n                                                                    </div>\r\n                                                                    :null\r\n                                                                } */}\r\n                                                            </td>\r\n                                                            :\r\n                                                            <td>{ val.name }</td>\r\n                                                        }\r\n                                                        <td>{ val.required_quantity }</td>\r\n                                                        <td style={ { wordBreak: 'break-all' } }>\r\n                                                            { val.reason }\r\n                                                        </td>\r\n                                                        {/* <td>{ val.availability === null ? \"Not Checked\" : val.availability === 0 ? \"Not Availble\" : \"Availble\" }</td> */}\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n\r\n                                </table>\r\n\r\n                                {\r\n                                    RequestDetails.details.acted_date === null\r\n                                    ?\r\n                                    null\r\n                                    :\r\n                                    <div className=\"border-top pt-3\">\r\n                                        <h5 className='mb-0 font-weight-bold'>Review</h5>\r\n                                        <br />\r\n                                        <div className=\"d-flex\">\r\n\r\n                                            <div className=\"w-50 d-flex\">\r\n                                                <div className=\"w-50 font-weight-bold\">\r\n                                                    From:\r\n                                                </div>\r\n                                                <div className=\"w-50\">\r\n                                                    { RequestDetails.details.sender_name }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"d-flex\">\r\n\r\n                                            <div className=\"w-50 d-flex\">\r\n                                                <div className=\"w-50 font-weight-bold\">\r\n                                                    To:\r\n                                                </div>\r\n                                                <div className=\"w-50\">\r\n                                                    { RequestDetails.details.receiver_name }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"d-flex\">\r\n\r\n                                            <div className=\"w-50 d-flex\">\r\n                                                <div className=\"w-50 font-weight-bold\">\r\n                                                    { RequestDetails.details.receiver_name.split(' ').shift() }'s Remarks:\r\n                                                </div>\r\n                                                <div className=\"w-50\">\r\n                                                    { RequestDetails.details.remarks }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n\r\n                                <br />\r\n\r\n                                {\r\n                                    RequestDetails.details.pr_request_generate_date === null\r\n                                    ?\r\n                                    null\r\n                                    :\r\n                                    <div className=\"border-top pt-3\">\r\n                                        <h5 className='mb-0 font-weight-bold'>Requisition</h5>\r\n                                        <br />\r\n                                        <div className=\"d-flex\">\r\n\r\n                                            <div className=\"w-50 d-flex\">\r\n                                                <div className=\"w-50 font-weight-bold\">\r\n                                                    From:\r\n                                                </div>\r\n                                                <div className=\"w-50\">\r\n                                                    { RequestDetails.details.requisition_name }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"d-flex\">\r\n\r\n                                            <div className=\"w-50 d-flex\">\r\n                                                <div className=\"w-50 font-weight-bold\">\r\n                                                    Requisition Date:\r\n                                                </div>\r\n                                                <div className=\"w-50\">\r\n                                                    { new Date( RequestDetails.details.pr_request_generate_date ).toDateString() }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"d-flex\">\r\n\r\n                                            <div className=\"w-50 d-flex\">\r\n                                                <div className=\"w-50 font-weight-bold\">\r\n                                                    Requisition Time:\r\n                                                </div>\r\n                                                <div className=\"w-50\">\r\n                                                    { RequestDetails.details.pr_request_generate_time }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n\r\n                                <br />\r\n\r\n                                {\r\n                                    RequestDetails.details.delivery_date === null\r\n                                    ?\r\n                                    null\r\n                                    :\r\n                                    <div className=\"border-top pt-3\">\r\n                                        <h5 className='mb-0 font-weight-bold'>Delivery</h5>\r\n                                        <br />\r\n                                        \r\n                                        <div className=\"d-flex\">\r\n\r\n                                            <div className=\"w-50 d-flex\">\r\n                                                <div className=\"w-50 font-weight-bold\">\r\n                                                    Delivery Date:\r\n                                                </div>\r\n                                                <div className=\"w-50\">\r\n                                                    { new Date( RequestDetails.details.delivery_date ).toDateString() }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"d-flex\">\r\n\r\n                                            <div className=\"w-50 d-flex\">\r\n                                                <div className=\"w-50 font-weight-bold\">\r\n                                                    Delivery Time:\r\n                                                </div>\r\n                                                <div className=\"w-50\">\r\n                                                    { RequestDetails.details.delivery_time }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n\r\n                            </form>\r\n                        </div>\r\n                        :null\r\n                    }\r\n                </div>\r\n                :\r\n                <div className=\"items_container\">\r\n\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-3\">\r\n\r\n                        <div>\r\n\r\n                            <h5 className='mb-0 font-weight-bold'>Item Requests</h5>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <Link to='/item_requests/new' className=\"btn btn-sm newBtn\">new</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <table className=\"table table-sm\">\r\n\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th> Request ID </th>\r\n                                <th> Request By </th>\r\n                                <th> Request To </th>\r\n                                <th> Company </th>\r\n                                <th> Date Time </th>\r\n                                <th> Status </th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {\r\n                                Requests.map(\r\n                                    ( val, index ) => {\r\n\r\n                                        const d = new Date(val.request_date);\r\n                                        console.log(val)\r\n\r\n                                        return (\r\n                                            <tr className=\"hover\" key={ index } onClick={ () => OpenRequest(val.id) }>\r\n\r\n                                                <td> { val.id } </td>\r\n                                                <td> { val.sender_name } </td>\r\n                                                <td> { val.receiver_name } </td>\r\n                                                <td> { val.company_name } <br /> { val.location_name } </td>\r\n                                                <td> { d ? d.toDateString() : null } <br /> { val.request_time } </td>\r\n                                                <td> \r\n                                                    <span className=\"statusBox\">{ val.status }</span>\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                        )\r\n\r\n                                    }\r\n                                )\r\n                            }\r\n                        </tbody>\r\n\r\n                    </table>\r\n\r\n                </div>\r\n            }\r\n            <ReactTooltip />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ItemRequest;","import React from 'react'\r\nimport './Modal.css';\r\n\r\nconst Modal = ( props ) =>{\r\n    return (\r\n        <>\r\n            <div className=\"Attandence_Request_Div\" style={ { display: props.show ? 'flex' : 'none'  } }>\r\n                <div className=\"dark\" onClick={ props.Hide }>\r\n                </div>\r\n                <div style={ { animationDelay: ( 0 + '.' + 1 ).toString() + 's' } } className={ props.show ? \"Attandence_Request_Div_Content Attandence_Request_Div_Content2\" : \"Attandence_Request_Div_Content\" }>\r\n                    {\r\n                        props.content\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Modal;"],"sourceRoot":""}