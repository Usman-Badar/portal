{"version":3,"sources":["Components/Inventory/Assets/SubAssets/SubAssets.jsx"],"names":["SubAssets","useState","EditView","setEditView","ShowBtns","setShowBtns","SubAssetsList","setSubAssetsList","asset_id","sub_asset_code","sub_asset_name","created_at","status","CheckedSubAsset","setCheckedSubAsset","OpenForm","setOpenForm","View","setView","AssetID","setAssetID","Form","setForm","useEffect","localStorage","getItem","$","removeClass","addClass","id","parseInt","window","location","href","split","pop","shift","isNaN","allAssets","ReactTooltip","rebuild","ChangeViewType","view","setItem","toggleClass","axios","post","then","res","data","catch","err","console","log","CancleForm","OnCheckHandler","e","target","checked","index","obj","check","className","onClick","class","arr","sub_asset_id","assets","JSON","stringify","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","prop","length","map","val","type","name","to","FormInput","submitAssetsForm","preventDefault","OnChangeHandler","value","date","Date","x","toLocaleLowerCase","alert","date_time","d","count_sub_items","toDateString","props","onSubmit","onChange","required","disabled"],"mappings":"qNAqlBeA,UAxkBG,WAEd,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0CJ,mBAAS,IAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAAgDN,mBAC5C,CACIO,SAAU,GACVC,eAAgB,GAChBC,eAAgB,GAChBC,WAAY,GACZC,OAAQ,KANhB,mBAAQC,EAAR,KAAyBC,EAAzB,KAUA,EAAgCb,oBAAS,GAAzC,mBAAOc,EAAP,KAAiBC,EAAjB,KACA,EAAwBf,mBAAS,QAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KACA,EAA8BjB,mBAAS,GAAvC,mBAAOkB,EAAP,KAAgBC,EAAhB,KAEA,EAAwBnB,mBAAS,CAC7BQ,eAAgB,GAChBC,eAAgB,KAFpB,mBAAOW,EAAP,KAAaC,EAAb,KAKAC,qBACI,WAESC,aAAaC,QAAQ,4BAEtBP,EAAQM,aAAaC,QAAQ,2BAC7BC,IAAE,cAAcC,YAAY,UAC5BD,IAAE,QAAUF,aAAaC,QAAQ,2BAA2BG,SAAS,aAG1E,IAGPL,qBACI,WAEI,IAAIM,EAAKC,SAAUC,OAAOC,SAASC,KAAKC,MAAM,KAAKC,MAAMD,MAAM,MAAME,QAAQF,MAAM,KAAKC,OAElFE,MAAOR,KAETT,EAAYS,GACZS,EAAWT,MAIhB,CAAEE,OAAOC,SAASC,KAAKC,MAAM,KAAKC,QAGzCZ,qBACI,WAEsC,KAA7BV,EAAgBL,SAEjBH,GAAa,IAGbA,GAAa,GACbF,GAAa,IAGjBoC,IAAaC,YAEd,CAAE3B,EAAgBL,WAGzB,IAAMiC,EAAiB,SAACC,GAEpBxB,EAAQwB,GACRlB,aAAamB,QAAQ,yBAA0BD,GAC/ChB,IAAE,2BAA2BkB,YAAY,WAIvCN,EAAY,SAAET,GAEhBgB,IAAMC,KACF,mBACA,CACItC,SAAUqB,GAAUV,IAE1B4B,MACE,SAAAC,GAEIzC,EAAiByC,EAAIC,SAG3BC,OACE,SAAAC,GAEIC,QAAQC,IAAIF,OA+FlBG,EAAa,WAEftC,GAAa,GACbb,GAAa,IAIXoD,EAAiB,SAACC,GAEpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,QAAS7B,EAAjB,EAAiBA,GAEjBuB,QAAQC,IAAKK,GACbN,QAAQC,IAAKxB,GAEb,IAAIoB,EAAO,GACX,GAAIS,EAAS,CAET,IAAIC,EAAQ9B,EAAGK,MAAM,SAASC,MAC1ByB,EAAMtD,EAAcqD,GACxBP,QAAQC,IAAKO,GACbA,EAAIC,MAAQhC,EACZoB,EAAOW,EAGX9C,EAAoBmC,IAkHxB,OAEI,qCACI,cAAC,IAAD,IACA,cAAC,IAAD,IAEA,sBAAKa,UAAU,YAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,qBAAf,SAEI,qBAAKA,UAAU,kBAAf,SACI,mDAKR,sBAAKA,UAAU,sBAAf,UAGI,yBAAQA,UAAU,iBAAiBC,QArPtC,WAEb/C,GAAY,IAmPI,cAAwD,mBAAGgD,MAAM,gBAAjE,IAAoF,wCAGnE,IAAb5D,GAAkD,KAA7BS,EAAgBL,SAErC,sBAAKsD,UAAU,YAAf,UACI,wBAAQ,WAAS,OAAOA,UAAU,YAAYC,QAnFrD,WAEjB5D,GAAa,IAiFW,SAAuE,mBAAG6D,MAAM,kBAChF,wBAAQ,WAAS,SAASF,UAAU,YAAYC,QAzIvD,WAEjB,IAAIE,EAAM,CAAEpD,EAAgBqD,cAE5BrB,IAAMC,KACF,2BACA,CACIqB,OAAQC,KAAKC,UAAWJ,KAE9BlB,MACE,WAEIuB,IAAMC,KAAM,iBAAmB,CAC3BC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEdzC,IACAxB,EACI,CACIN,SAAU,GACVC,eAAgB,GAChBC,eAAgB,GAChBC,WAAY,GACZC,OAAQ,KAIhBc,IAAE,qBAAqBsD,KAAK,WAAW,MAG7C9B,OACE,SAAAC,GAEImB,IAAMC,KAAMpB,EAAK,CACbqB,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,QA4FE,SAAuE,mBAAGf,MAAM,sBAGpF,KAGJ,sBAAKF,UAAU,oBAAf,UACI,wBAAQ,WAAS,YAAYjC,GAAG,OAAOiC,UAAU,mBAAmBC,QAAS,kBAAMtB,EAAe,SAAlG,SAA2G,mBAAGuB,MAAM,qBACpH,wBAAQ,WAAS,WAAWnC,GAAG,MAAMiC,UAAU,YAAYC,QAAS,kBAAMtB,EAAe,QAAzF,SAAiG,mBAAGuB,MAAM,2BAE9G,qBAAKF,UAAU,sBAKnB5D,EAEA,sBAAK4D,UAAU,cAAf,UAEI,8BAGiC,IAAzBxD,EAAc2E,OAEd,oBAAInB,UAAU,cAAd,6BAEA,qCACI,sBAAKA,UAAU,+BAAf,UACI,wBACA,8BAAK,mBAAGA,UAAU,YAAb,kCAILxD,EAAc4E,KACV,SAACC,EAAKxB,GAEF,OACI,sBAAKG,UAAU,oCAAf,UACI,8BAAK,uBAAOsB,KAAK,QAAQC,KAAK,YAAYxD,GAAI,QAAU8B,EAAOI,QAASR,MACxE,cAAC,IAAD,CAAS+B,GAAI,uBAAyBH,EAAIjB,aAAe,UAAYiB,EAAIzE,eAAiB,mBAA1F,SAA8G,mBAAGoD,UAAU,YAAb,SAA0BqB,EAAIzE,qBAFxFiD,WAapF,cAAC4B,EAAD,CACIC,iBAjID,SAAEhC,GAErBA,EAAEiC,iBACF5C,IAAMC,KACF,0BACA,CACIqB,OAAQC,KAAKC,UAAWxD,KAE9BkC,MACE,WAEIuB,IAAMC,KAAM,iBAAmB,CAC3BC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEdzC,IACAxB,EACI,CACIN,SAAU,GACVC,eAAgB,GAChBC,eAAgB,GAChBC,WAAY,GACZC,OAAQ,KAIhBc,IAAE,qBAAqBsD,KAAK,WAAW,MAG7C9B,OACE,SAAAC,GAEImB,IAAMC,KAAMpB,EAAK,CACbqB,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,QAsFFW,gBArOM,SAAClC,GAE3B,MAAwBA,EAAEC,OAAlBkC,EAAR,EAAQA,MAAON,EAAf,EAAeA,KAETF,EAAG,2BACFtE,GADE,kBAEJwE,EAAOM,IAGZ7E,EAAmBqE,IA6NC7B,WAAaA,EAEbjC,KAAOR,EACP+E,KAAO,IAAIC,KAAMhF,EAAgBF,iBAKzCI,EAGI,sBAAK+C,UAAU,cAAf,UAEI,8BAGiC,IAAzBxD,EAAc2E,OAEd,oBAAInB,UAAU,cAAd,6BAEA,qCACI,sBAAKA,UAAU,+BAAf,UACI,wBACA,8BAAK,mBAAGA,UAAU,YAAb,kCAILxD,EAAc4E,KACV,SAACC,EAAKxB,GAEF,OACI,sBAAKG,UAAU,oCAAf,UACI,8BAAK,uBAAOsB,KAAK,QAAQC,KAAK,YAAYxD,GAAI,QAAU8B,EAAOI,QAASR,MACxE,cAAC,IAAD,CAAS+B,GAAI,uBAAyBH,EAAIjB,aAAe,UAAYiB,EAAIzE,eAAiB,mBAA1F,SAA8G,mBAAGoD,UAAU,YAAb,SAA0BqB,EAAIzE,qBAFxFiD,WAapF,cAAC4B,EAAD,CACIC,iBAxVH,SAAChC,GAEtBA,EAAEiC,iBAEF,IAAK,IAAIK,EAAI,EAAGA,EAAIxF,EAAc2E,OAAQa,IACtC,GAAIzE,EAAKX,eAAeqF,sBAAwBzF,EAAcwF,GAAGpF,eAAeqF,qBAAuB1E,EAAKZ,eAAesF,sBAAwBzF,EAAcwF,GAAGrF,eAAesF,oBAE/K,OADAC,MAAM,mCACC,EAIf,IAAMb,EAAM,CACR3E,SAAUW,EACVT,eAAgBW,EAAKX,eACrBD,eAAgBY,EAAKZ,eACrBwF,UAAW,IAAIJ,MAGnBhD,IAAMC,KACF,eACA,CACIG,KAAMmB,KAAKC,UAAUc,KAE3BpC,MACE,WAEIzB,EACI,CACIb,eAAgB,GAChBC,eAAgB,KAIxB4B,IACAgC,IAAMC,KAAM,kBAAoB,CAC5BC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,OAIpB7B,OACE,SAAAC,GAEIC,QAAQC,IAAIF,MAKpBnC,GAAY,IAoSY0E,gBA/RJ,SAAClC,GACrB,MAAwBA,EAAEC,OAAlBkC,EAAR,EAAQA,MAAON,EAAf,EAAeA,KAETF,EAAG,2BACF9D,GADE,kBAEJgE,EAAOM,IAGZrE,EAAQ6D,IAwRgB7B,WAAaA,EAEbjC,KAAOA,EACPuE,KAAO,IAAIC,UAOV,QAAT5E,EAEA,mCAEI,sBAAK6C,UAAU,MAAf,UAGiC,IAAzBxD,EAAc2E,OAEd,oBAAInB,UAAU,cAAd,6BAEA,KAGJ,qBAAKA,UAAU,qBAAf,SAIQxD,EAAc4E,KACV,SAACC,EAAKxB,GAEF,IAAMuC,EAAI,IAAIL,KAAKV,EAAIxE,YAEvB,OACI,mCAEI,eAAC,IAAD,CAAS2E,GAAI,uBAAyBH,EAAIjB,aAAe,UAAYiB,EAAIzE,eAAiB,mBAAoBoD,UAAU,iCAAxH,UAEI,qBAAKA,UAAU,WAAf,SAA0B,uBAAOsB,KAAK,QAAQC,KAAK,YAAYxD,GAAI,QAAU8B,EAAOI,QAASR,MAE7F,sBAAKO,UAAU,sBAAf,UAEI,qBAAKA,UAAU,OAAf,SACI,mBAAGE,MAAM,mBAEb,sBAAKF,UAAU,UAAf,UACI,kDACA,6BAAKqB,EAAIzE,oBAGb,sBAAKoD,UAAU,UAAf,UACI,kDACA,6BAAKqB,EAAI1E,oBAGb,sBAAKqD,UAAU,UAAf,UACI,6CACA,6BAAKqB,EAAIgB,qBAGb,sBAAKrC,UAAU,UAAf,UACI,wCACA,6BAAKoC,EAAIA,EAAEE,eAAiB,eA1BuHzC,eA+C/L,8BAGiC,IAAzBrD,EAAc2E,OAEd,oBAAInB,UAAU,cAAd,6BAEA,qCACI,sBAAKA,UAAU,iBAAf,UACI,wBACA,8BAAK,kDACL,8BAAK,kDACL,8BAAK,4CACL,8BAAK,0CAILxD,EAAc4E,KACV,SAACC,EAAKxB,GAEF,IAAMuC,EAAI,IAAIL,KAAKV,EAAIxE,YAEvB,OACI,sBAAKmD,UAAU,sBAAf,UACI,8BAAK,uBAAOsB,KAAK,QAAQC,KAAK,YAAYxD,GAAI,QAAU8B,EAAOI,QAASR,MACxE,cAAC,IAAD,CAAS+B,GAAI,uBAAyBH,EAAIjB,aAAe,UAAYiB,EAAIzE,eAAiB,mBAA1F,SAA8G,4BAAIyE,EAAIzE,mBACtH,cAAC,IAAD,CAAS4E,GAAI,uBAAyBH,EAAIjB,aAAe,UAAYiB,EAAIzE,eAAiB,mBAA1F,SAA8G,4BAAIyE,EAAI1E,mBACtH,cAAC,IAAD,CAAS6E,GAAI,uBAAyBH,EAAIjB,aAAe,UAAYiB,EAAIzE,eAAiB,mBAA1F,SAA8G,4BAAIyE,EAAIgB,oBACtH,cAAC,IAAD,CAASb,GAAI,uBAAyBH,EAAIjB,aAAe,UAAYiB,EAAIzE,eAAiB,mBAA1F,SAA8G,4BAAIwF,EAAIA,EAAEE,eAAiB,WALnGzC,kBA4B9F,IAAM4B,EAAY,SAAEc,GAEhB,MAA0BpG,mBACtB,CACIS,eAAgB,GAChBD,eAAgB,KAHxB,mBAAQY,EAAR,KAAcC,EAAd,KAoBA,OAbAC,qBACI,WAEID,EACI,CACIZ,eAAgB2F,EAAMhF,KAAKX,eAC3BD,eAAgB4F,EAAMhF,KAAKZ,mBAIpC,CAAE4F,EAAMhF,OAIX,uBAAMyC,UAAU,iBAAiBwC,SAAWD,EAAMb,iBAAuC3D,GAAG,SAA5F,UAEI,oBAAIiC,UAAU,mBAAd,4BAEA,sBAAKA,UAAU,sBAAf,UACI,gCACI,4CACA,uBAAOsB,KAAK,OAAOmB,SAAWF,EAAMX,gBAAkBC,MAAQtE,EAAKX,eAAiBoD,UAAU,gCAAgCuB,KAAK,iBAAiBmB,UAAQ,OAEhK,gCACI,4CACA,uBAAOpB,KAAK,OAAOmB,SAAWF,EAAMX,gBAAkBC,MAAQtE,EAAKZ,eAAiBqD,UAAU,gCAAgCuB,KAAK,iBAAiBmB,UAAQ,OAEhK,gCACI,qCACA,uBAAOpB,KAAK,OAAOqB,UAAQ,EAACd,MAAQU,EAAMT,KAAOS,EAAMT,KAAKQ,eAAiB,KAAOtC,UAAU,uCAItG,qBAAKA,UAAU,wBAAf,SACI,sBAAKA,UAAU,SAAf,UACI,wBAAQA,UAAU,oBAAoBC,QAAU,kBAAMsC,EAAM/C,cAAe8B,KAAK,QAAhF,oBACA,wBAAQtB,UAAU,oBAAoBsB,KAAK,SAA3C,2BAtB+DiB,EAAM1C,S","file":"static/js/98.c05c5b35.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './SubAssets.css';\r\n\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from \"../../../../axios\";\r\nimport $ from 'jquery';\r\n\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst SubAssets = () => {\r\n\r\n    const [EditView, setEditView] = useState(false);\r\n    const [ShowBtns, setShowBtns] = useState(false);\r\n    const [SubAssetsList, setSubAssetsList] = useState([]);\r\n    const [ CheckedSubAsset, setCheckedSubAsset ] = useState(\r\n        {\r\n            asset_id: '',\r\n            sub_asset_code: '',\r\n            sub_asset_name: '',\r\n            created_at: '',\r\n            status: ''\r\n        }\r\n    )\r\n\r\n    const [OpenForm, setOpenForm] = useState(false);\r\n    const [View, setView] = useState('list');\r\n    const [AssetID, setAssetID] = useState(0);\r\n\r\n    const [Form, setForm] = useState({\r\n        sub_asset_code: '',\r\n        sub_asset_name: '',\r\n    });\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( localStorage.getItem('inventorySubAssetsView') )\r\n            {\r\n                setView(localStorage.getItem('inventorySubAssetsView'));\r\n                $('.btn.icon1').removeClass('active');\r\n                $('.btn#' + localStorage.getItem('inventorySubAssetsView')).addClass('active');\r\n            }\r\n\r\n        }, []\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let id = parseInt( window.location.href.split('/').pop().split('&&').shift().split('=').pop() );\r\n\r\n            if ( !isNaN( id ) )\r\n            {\r\n                setAssetID( id );\r\n                allAssets( id );\r\n            }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ window.location.href.split('/').pop() ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n            \r\n            if ( CheckedSubAsset.asset_id !== '' )\r\n            {\r\n                setShowBtns( true );\r\n            }else\r\n            {\r\n                setShowBtns( false );\r\n                setEditView( false );\r\n            }\r\n\r\n            ReactTooltip.rebuild();\r\n\r\n        }, [ CheckedSubAsset.asset_id ]\r\n    )\r\n\r\n    const ChangeViewType = (view) => {\r\n\r\n        setView(view);\r\n        localStorage.setItem('inventorySubAssetsView', view);\r\n        $('.btn-group.actions .btn').toggleClass('active');\r\n\r\n    }\r\n\r\n    const allAssets = ( id ) => {\r\n\r\n        axios.post(\r\n            '/getallsubassets',\r\n            {\r\n                asset_id: id ? id : AssetID\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setSubAssetsList(res.data);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const ShowForm = () => {\r\n\r\n        setOpenForm(true)\r\n\r\n    }\r\n\r\n    const submitAssetsForm = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        for (let x = 0; x < SubAssetsList.length; x++) {\r\n            if (Form.sub_asset_name.toLocaleLowerCase() === SubAssetsList[x].sub_asset_name.toLocaleLowerCase() || Form.sub_asset_code.toLocaleLowerCase() === SubAssetsList[x].sub_asset_code.toLocaleLowerCase()) {\r\n                alert(\"name and code should be unique\");\r\n                return false;\r\n            }\r\n        }\r\n\r\n        const val = {\r\n            asset_id: AssetID,\r\n            sub_asset_name: Form.sub_asset_name,\r\n            sub_asset_code: Form.sub_asset_code,\r\n            date_time: new Date(),\r\n        }\r\n\r\n        axios.post(\r\n            '/newsubasset', \r\n            {\r\n                data: JSON.stringify(val)\r\n            }\r\n        ).then(\r\n            () => {\r\n\r\n                setForm(\r\n                    {\r\n                        sub_asset_code: '',\r\n                        sub_asset_name: '',\r\n                    }\r\n                );\r\n\r\n                allAssets();\r\n                toast.dark( \"New Asset Added\" , {\r\n                    position: 'top-center',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n        setOpenForm(false)\r\n\r\n\r\n    }\r\n\r\n    const OnChangeHandler = (e) => {\r\n        const { value, name } = e.target\r\n\r\n        const val = {\r\n            ...Form,\r\n            [name]: value\r\n        }\r\n\r\n        setForm(val);\r\n    }\r\n\r\n    const OnChangeHandlerInputs = (e) => {\r\n\r\n        const { value, name } = e.target\r\n\r\n        const val = {\r\n            ...CheckedSubAsset,\r\n            [name]: value\r\n        }\r\n\r\n        setCheckedSubAsset(val);\r\n\r\n    }\r\n\r\n    const CancleForm = () => {\r\n\r\n        setOpenForm( false )\r\n        setEditView( false )\r\n\r\n    }\r\n\r\n    const OnCheckHandler = (e) => {\r\n\r\n        const { checked, id } = e.target;\r\n\r\n        console.log( checked );\r\n        console.log( id );\r\n\r\n        let data = {};\r\n        if (checked) {\r\n\r\n            let index = id.split('check').pop();\r\n            let obj = SubAssetsList[index];\r\n            console.log( obj );\r\n            obj.check = id;\r\n            data = obj;\r\n\r\n        }\r\n        setCheckedSubAsset( data );\r\n    }\r\n\r\n    const DeleteAssets = () => {\r\n\r\n        let arr = [ CheckedSubAsset.sub_asset_id ];\r\n\r\n        axios.post(\r\n            '/deleteselectedsubassets',\r\n            {\r\n                assets: JSON.stringify( arr )\r\n            }\r\n        ).then(\r\n            () => {\r\n\r\n                toast.dark( \"Assets Deleted\" , {\r\n                    position: 'top-center',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                allAssets();\r\n                setCheckedSubAsset(\r\n                    {\r\n                        asset_id: '',\r\n                        sub_asset_code: '',\r\n                        sub_asset_name: '',\r\n                        created_at: '',\r\n                        status: ''\r\n                    }\r\n                );\r\n\r\n                $('input[type=radio]').prop('checked', false);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                toast.dark( err, {\r\n                    position: 'top-center',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n            }\r\n        )\r\n        \r\n    }  \r\n\r\n    const OnEditRecord = () => {\r\n\r\n        setEditView( true );\r\n\r\n    }\r\n\r\n    const OnUpdateRecord = ( e ) => {\r\n\r\n        e.preventDefault();\r\n        axios.post(\r\n            '/updateselectedsubasset',\r\n            {\r\n                assets: JSON.stringify( CheckedSubAsset )\r\n            }\r\n        ).then(\r\n            () => {\r\n\r\n                toast.dark( \"Assets Updated\" , {\r\n                    position: 'top-center',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                allAssets();\r\n                setCheckedSubAsset(\r\n                    {\r\n                        asset_id: '',\r\n                        sub_asset_code: '',\r\n                        sub_asset_name: '',\r\n                        created_at: '',\r\n                        status: ''\r\n                    }\r\n                );\r\n\r\n                $('input[type=radio]').prop('checked', false);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                toast.dark( err, {\r\n                    position: 'top-center',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <ReactTooltip />\r\n            <ToastContainer />\r\n\r\n            <div className=\"SubAssets\">\r\n                <div className=\"SubAssets_Top\" >\r\n                    <div className=\"SubAssets_Top_left\">\r\n\r\n                        <div className=\"dropdown_filter\">\r\n                            <p>All Sub Assets</p>\r\n                            {/* <i class=\"las la-caret-down\"></i> */}\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"SubAssets_Top_right\">\r\n\r\n                        {/* <button className=\"btn setting_button\"><i class=\"las la-cog\"></i></button> */}\r\n                        <button className=\"btn New_button\" onClick={ShowForm} > <i class=\"las la-plus\"></i> <p>New</p></button>\r\n\r\n                        {\r\n                            ShowBtns === true || CheckedSubAsset.asset_id !== ''\r\n                            ?\r\n                            <div className=\"btn-group\">\r\n                                <button data-tip=\"Edit\" className=\"btn icon1\" onClick={ OnEditRecord }><i class=\"las la-edit\"></i></button>\r\n                                <button data-tip=\"Delete\" className=\"btn icon1\" onClick={DeleteAssets}><i class=\"las la-trash\"></i></button>\r\n                            </div>\r\n                            :\r\n                            null\r\n                        }\r\n\r\n                        <div className=\"btn-group actions\">\r\n                            <button data-tip=\"List View\" id=\"list\" className=\"btn icon1 active\" onClick={() => ChangeViewType('list')}><i class=\"las la-list-ul\"></i></button>\r\n                            <button data-tip=\"Box View\" id=\"box\" className=\"btn icon1\" onClick={() => ChangeViewType('box')}><i class=\"las la-border-all\"></i></button>\r\n                        </div>\r\n                        <div className=\"list_button\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    EditView\r\n                    ?\r\n                    <div className='grid_parent'>\r\n\r\n                        <div>\r\n\r\n                            {\r\n                                SubAssetsList.length === 0\r\n                                ?\r\n                                <h4 className=\"text-center\">No Record Found</h4>\r\n                                :\r\n                                <>\r\n                                    <div className=\"SubAssets_Grid changeOnCLick\">\r\n                                        <div></div>\r\n                                        <div><p className=\"text-left\">Sub Assets Name</p></div>\r\n                                    </div>\r\n\r\n                                    {\r\n                                        SubAssetsList.map(\r\n                                            (val, index) => {\r\n\r\n                                                return (\r\n                                                    <div className=\"SubAssets_Grid_list changeOnCLick\" key={index}>\r\n                                                        <div><input type=\"radio\" name=\"selection\" id={'check' + index} onClick={OnCheckHandler} /></div>\r\n                                                        <NavLink to={'/inventory/asset/id=' + val.sub_asset_id + '&&name=' + val.sub_asset_name + '&&view=sub_items'}><p className=\"text-left\">{val.sub_asset_name}</p></NavLink>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        <FormInput \r\n                            submitAssetsForm={ OnUpdateRecord }\r\n                            OnChangeHandler={ OnChangeHandlerInputs }\r\n                            CancleForm={ CancleForm }\r\n\r\n                            Form={ CheckedSubAsset }\r\n                            date={ new Date( CheckedSubAsset.created_at ) }\r\n                        />\r\n\r\n                    </div>\r\n                    :\r\n                    OpenForm\r\n                        ?\r\n\r\n                        <div className='grid_parent'>\r\n\r\n                            <div>\r\n\r\n                                {\r\n                                    SubAssetsList.length === 0\r\n                                    ?\r\n                                    <h4 className=\"text-center\">No Record Found</h4>\r\n                                    :\r\n                                    <>\r\n                                        <div className=\"SubAssets_Grid changeOnCLick\">\r\n                                            <div></div>\r\n                                            <div><p className=\"text-left\">Sub Assets Name</p></div>\r\n                                        </div>\r\n\r\n                                        {\r\n                                            SubAssetsList.map(\r\n                                                (val, index) => {\r\n\r\n                                                    return (\r\n                                                        <div className=\"SubAssets_Grid_list changeOnCLick\" key={index}>\r\n                                                            <div><input type=\"radio\" name=\"selection\" id={'check' + index} onClick={OnCheckHandler} /></div>\r\n                                                            <NavLink to={'/inventory/asset/id=' + val.sub_asset_id + '&&name=' + val.sub_asset_name + '&&view=sub_items'}><p className=\"text-left\">{val.sub_asset_name}</p></NavLink>\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </>\r\n                                }\r\n\r\n                            </div>\r\n\r\n                            <FormInput \r\n                                submitAssetsForm={ submitAssetsForm }\r\n                                OnChangeHandler={ OnChangeHandler }\r\n                                CancleForm={ CancleForm }\r\n\r\n                                Form={ Form }\r\n                                date={ new Date() }\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        :\r\n\r\n                        View === 'box'\r\n                        ?\r\n                        <>\r\n\r\n                            <div className=\"Box\">\r\n\r\n                                {\r\n                                    SubAssetsList.length === 0\r\n                                    ?\r\n                                    <h4 className=\"text-center\">No Record Found</h4>\r\n                                    :\r\n                                    null\r\n                                }\r\n\r\n                                <div className=\"SubAssets_Grid_box\">\r\n\r\n\r\n                                    {\r\n                                        SubAssetsList.map(\r\n                                            (val, index) => {\r\n\r\n                                                const d = new Date(val.created_at);\r\n\r\n                                                return (\r\n                                                    <>\r\n\r\n                                                        <NavLink to={'/inventory/asset/id=' + val.sub_asset_id + '&&name=' + val.sub_asset_name + '&&view=sub_items'} className=\"Grid_box_div shadow-sm rounded\" key={ index }>\r\n\r\n                                                            <div className=\"CheckBox\"><input type=\"radio\" name=\"selection\" id={'check' + index} onClick={OnCheckHandler}  /></div>\r\n\r\n                                                            <div className=\"Grid_box_div_center\">\r\n\r\n                                                                <div className=\"Icon\">\r\n                                                                    <i class=\"las la-image\"></i>\r\n                                                                </div>\r\n                                                                <div className=\"details\">\r\n                                                                    <p>Sub Asset Name : </p>\r\n                                                                    <h6>{val.sub_asset_name}</h6>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"details\">\r\n                                                                    <p>Sub Asset Code : </p>\r\n                                                                    <h6>{val.sub_asset_code}</h6>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"details\">\r\n                                                                    <p>Sub Items : </p>\r\n                                                                    <h6>{val.count_sub_items}</h6>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"details\">\r\n                                                                    <p>Date : </p>\r\n                                                                    <h6>{d ? d.toDateString() : null}</h6>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </NavLink>\r\n\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </>\r\n\r\n                        :\r\n\r\n                        <div>\r\n\r\n                            {\r\n                                SubAssetsList.length === 0\r\n                                ?\r\n                                <h4 className=\"text-center\">No Record Found</h4>\r\n                                :\r\n                                <>\r\n                                    <div className=\"SubAssets_Grid\">\r\n                                        <div></div>\r\n                                        <div><p>Sub Assets Name</p></div>\r\n                                        <div><p>Sub Assets Code</p></div>\r\n                                        <div><p>Sub Items</p></div>\r\n                                        <div><p>Date</p></div>\r\n                                    </div>\r\n\r\n                                    {\r\n                                        SubAssetsList.map(\r\n                                            (val, index) => {\r\n\r\n                                                const d = new Date(val.created_at);\r\n\r\n                                                return (\r\n                                                    <div className=\"SubAssets_Grid_list\" key={index}>\r\n                                                        <div><input type=\"radio\" name=\"selection\" id={'check' + index} onClick={OnCheckHandler} /></div>\r\n                                                        <NavLink to={'/inventory/asset/id=' + val.sub_asset_id + '&&name=' + val.sub_asset_name + '&&view=sub_items'}><p>{val.sub_asset_name}</p></NavLink>\r\n                                                        <NavLink to={'/inventory/asset/id=' + val.sub_asset_id + '&&name=' + val.sub_asset_name + '&&view=sub_items'}><p>{val.sub_asset_code}</p></NavLink>\r\n                                                        <NavLink to={'/inventory/asset/id=' + val.sub_asset_id + '&&name=' + val.sub_asset_name + '&&view=sub_items'}><p>{val.count_sub_items}</p></NavLink>\r\n                                                        <NavLink to={'/inventory/asset/id=' + val.sub_asset_id + '&&name=' + val.sub_asset_name + '&&view=sub_items'}><p>{d ? d.toDateString() : null}</p></NavLink>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                }\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SubAssets;\r\n\r\nconst FormInput = ( props ) => {\r\n\r\n    const [ Form, setForm ] = useState(\r\n        {\r\n            sub_asset_name: '',\r\n            sub_asset_code: ''\r\n        }\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setForm(\r\n                {\r\n                    sub_asset_name: props.Form.sub_asset_name,\r\n                    sub_asset_code: props.Form.sub_asset_code\r\n                }\r\n            )\r\n\r\n        }, [ props.Form ]\r\n    )\r\n\r\n    return (\r\n        <form className=\"SubAssets_form\" onSubmit={ props.submitAssetsForm } key={ props.index } id=\"myForm\">\r\n\r\n            <h5 className=\"font-weight-bold\">Add New Assets</h5>\r\n\r\n            <div className=\"SubAssets_form_grid\">\r\n                <div>\r\n                    <p>Assets Name</p>\r\n                    <input type=\"text\" onChange={ props.OnChangeHandler } value={ Form.sub_asset_name } className=\" form-control form-control-sm\" name='sub_asset_name' required />\r\n                </div>\r\n                <div>\r\n                    <p>Assets Code</p>\r\n                    <input type=\"text\" onChange={ props.OnChangeHandler } value={ Form.sub_asset_code } className=\" form-control form-control-sm\" name=\"sub_asset_code\" required />\r\n                </div>\r\n                <div>\r\n                    <p>Date</p>\r\n                    <input type=\"text\" disabled value={ props.date ? props.date.toDateString() : null } className=\"form-control form-control-sm\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"SubAssets_form_button\" >\r\n                <div className=\"d-flex\">\r\n                    <button className=\"btn btn-sm cancle\" onClick={ () => props.CancleForm() } type=\"reset\">Cancle</button>\r\n                    <button className=\"btn btn-sm submit\" type=\"submit\">Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n\r\n}"],"sourceRoot":""}