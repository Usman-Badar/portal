{"version":3,"sources":["Components/UI/Menu/Menu.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseRequisition/Home/Home.jsx","Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseRequisition/Employee_Requisition.jsx","Components/UI/Modal/Modal.jsx"],"names":["Menu","props","useEffect","$","slideToggle","className","data","length","map","val","index","txt","link","to","href","onClick","func","hasClass","removeClass","addClass","class","icon","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Home","CanvasJS","CanvasJSReact","CanvasJSChart","useState","DataSet","setDataSet","count","rejected","approved","waiting","sent","viewed","x","CountStatus","push","y","label","ReactTooltip","rebuild","addColorSet","options","exportEnabled","animationEnabled","title","text","colorSet","type","startAngle","toolTipContent","showInLegend","legendText","indexLabelFontSize","indexLabel","dataPoints","CountRequests","Discussions","lazy","Form","PreviousRequest","Employee_Requisition","Employees","setEmployees","Submitted","setSubmitted","ModalShow","setModalShow","MenuData","setMenuData","ViewRequest","setViewRequest","Tweets","setTweets","tweet","reply","Tweet","setTweet","Companies","setCompanies","Locations","setLocations","emp_id","name","company","company_code","company_name","location","location_code","location_name","RequestingPerson","setRequestingPerson","Items","setItems","Amount","setAmount","Total","setTotal","Index","setIndex","EditMode","setEditMode","PRCode","setPRCode","PurchaseRequisitionCode","setPurchaseRequisitionCode","description","reason","price","quantity","Item","setItem","setCountStatus","RequestedBy","setRequestedBy","Data","useSelector","state","EmpAuth","EmployeeData","GetCompanyLocations","socket","on","AllPr","GetPRID","selectEmp","JSON","parse","access","includes","HideModelFunction","show","hide","window","split","pop","css","GetDiscussions","pr_id","axios","post","then","res","setTimeout","objDiv","document","getElementById","scrollTop","scrollHeight","catch","err","console","log","onTweetboxChange","e","target","value","parseInt","onTweet","id","preventDefault","d","Date","body","date","toString","emit","createPRCode","CCode","LastNum","Year","getMonth","getFullYear","substring","code","pr_code","FormData","append","status","AddItem","keyCode","i","speed","typeWriter","charAt","html","cart","amount","t","blur","focus","onChnageHandler","onCompanyChange","Company","filter","onLocationChange","Location","get","ShowNotification","note","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","OnEdit","toggleClass","onDelete","AttachDrive","createEvent","CollapseRequests","toggle","Modal","Hide","content","placeholder","onChange","style","cursor","transition","onMouseOver","onMouseOut","employee","response","EmployeeSelected","src","emp_image","width","height","alt","designation_name","department_name","request_date","bgColor","forward_by","backgroundColor","fontSize","toDateString","total","toLocaleString","exact","path","render","EmpData","items","stringify","sender","behalfOf","dateTime","Data3","Data2","sessionStorage","getItem","display","animationDelay"],"mappings":"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","file":"static/js/30.b6690133.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport './Menu.css';\r\nimport $ from \"jquery\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Menu = (props) => {\r\n\r\n    useEffect(\r\n        () => {\r\n            $('.Speeddail_Grid').slideToggle(0);\r\n        }, []\r\n\r\n    )\r\n    const ShowMenuGrid = () => {\r\n        $('.Menu_Speeddail .Speeddail_Grid').slideToggle(200);\r\n        \r\n        if ( $('.Menu_Speeddail .Menu_Speeddail_circle .las').hasClass('la-bars') )\r\n        {\r\n            $('.Menu_Speeddail .Menu_Speeddail_circle .las').removeClass('la-bars');\r\n            $('.Menu_Speeddail .Menu_Speeddail_circle .las').addClass('la-times');\r\n        }else\r\n        {\r\n            $('.Menu_Speeddail .Menu_Speeddail_circle .las').removeClass('la-times');\r\n            $('.Menu_Speeddail .Menu_Speeddail_circle .las').addClass('la-bars');      \r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"Menu\">\r\n                {\r\n                    props.data.length > 0\r\n                        ?\r\n                        <>\r\n                            <div className=\"Menu_Grid\">\r\n                                {\r\n                                        props.data.map(\r\n                                            (val, index) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                            val.txt\r\n                                                            ?\r\n                                                            val.link ?\r\n                                                                <Link to={val.href}>\r\n                                                                    <button><p className=\"font-weight-bolder mb-0\">{val.txt}</p></button>\r\n                                                                </Link>\r\n                                                            :\r\n                                                                <button onClick={ () => val.func() }><p className=\"font-weight-bolder mb-0\">{val.txt}</p></button>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                            </div>\r\n                            <div className=\"Menu_Speeddail\">\r\n                                <div className=\"Menu_Speeddail_circle\" onClick={ShowMenuGrid}>\r\n                                    <i class=\"las la-times\"></i>\r\n                                </div>\r\n                                <div className=\"Speeddail_Grid\">\r\n                                    {\r\n                                        props.data.map(\r\n                                            (val, index) => {\r\n\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                            val.txt\r\n                                                            ?\r\n                                                            val.link ?\r\n                                                                <Link to={val.href}>\r\n                                                                    <div key={index}>\r\n                                                                        <div className={ \"mb-1 Speeddail_Grid1 divs\" + index }><i className={val.icon}></i></div>\r\n                                                                        <p>{val.txt}</p>\r\n                                                                    </div>\r\n                                                                </Link>\r\n                                                                :\r\n                                                                <div className=\"clicks\" key={index} onClick={ () => val.func() }>\r\n                                                                    <div className={ \"mb-1 Speeddail_Grid1 divs\" + index }><i className={val.icon}></i></div>\r\n                                                                    <p>{val.txt}</p>\r\n                                                                </div>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        null\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Menu;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport './Home.css';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport CanvasJSReact from '../../../../../../../canvasjs.react';\r\n\r\nconst Home = (props) => {\r\n\r\n    const CanvasJS = CanvasJSReact.CanvasJS;\r\n    const CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n    const [DataSet, setDataSet] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            // IMPORTANT VARIABLES\r\n            let count = [];\r\n            let rejected = 0;\r\n            let approved = 0;\r\n            let waiting = 0;\r\n            let sent = 0;\r\n            let viewed = 0;\r\n\r\n            // FOR REJECTED\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Rejected') {\r\n                    rejected = rejected + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR APPROVED\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Approved') {\r\n                    approved = approved + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR WAITING\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Waiting For Approval') {\r\n                    waiting = waiting + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR SENT\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Sent') {\r\n                    sent = sent + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR VIEWED\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Viewed') {\r\n                    viewed = viewed + 1;\r\n                }\r\n\r\n            }\r\n\r\n            count.push(\r\n                { y: rejected, label: 'rejected' },\r\n                { y: approved, label: 'approved' },\r\n                { y: waiting, label: 'waiting' },\r\n                { y: sent, label: 'sent' },\r\n                { y: viewed, label: 'viewed' }\r\n            )\r\n            setDataSet( count );\r\n\r\n\r\n        }, [props.CountStatus]\r\n    );\r\n\r\n    // useEffect(\r\n    //     () => {\r\n\r\n    //         let total = 0.00;\r\n    //         for( let x = 0; x < props.ViewRequest.length; x++ )\r\n    //         {\r\n\r\n    //             total = total + parseFloat( props.ViewRequest[x].total );\r\n\r\n    //         }\r\n\r\n    //         setTotalValue( total );\r\n\r\n    //     }, [ props.ViewRequest ]\r\n    // )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            ReactTooltip.rebuild();\r\n\r\n        }\r\n    )\r\n\r\n    CanvasJS.addColorSet(\r\n        \"customShades\",\r\n        [//colorSet Array\r\n\r\n        \"#E7604A\",\r\n        \"#56CC82\",\r\n        \"#29C7CA\",\r\n        \"#5C6E9C\",\r\n        \"#5C6E9C\"            \r\n        ]\r\n    );\r\n\r\n    const options = {\r\n        exportEnabled: false,\r\n        animationEnabled: true,\r\n        title: {\r\n            text: \"Summery\"\r\n        },\r\n        colorSet: \"customShades\",\r\n        data: [{\r\n            type: \"pie\",\r\n            startAngle: 75,\r\n            toolTipContent: \"<b>{label}</b>: {y}%\",\r\n            showInLegend: \"true\",\r\n            legendText: \"{label}\",\r\n            indexLabelFontSize: 10,\r\n            indexLabel: \"{label} - {y}%\",\r\n            dataPoints: DataSet\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <ReactTooltip />\r\n            <div className=\"three\">\r\n                <div className=\"Calculate px-4\">\r\n                    <small className=\"text-secondary\">Total Requests</small>\r\n                    <h1 className=\"font-weight-bolder\">\r\n                        {props.CountRequests} <small className=\"text-secondary\">Sent</small>\r\n                    </h1>\r\n                </div>\r\n                <div className=\"RequestStatusChart\">\r\n                    <CanvasJSChart options = {options}\r\n                        /* onRef={ref => this.chart = ref} */\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, lazy, Suspense } from \"react\";\r\nimport './Employee_Requisition.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\nimport axios from \"../../../../../../axios\";\r\nimport $ from 'jquery';\r\n\r\nimport Modal from '../../../../../UI/Modal/Modal';\r\n\r\nimport Menu from \"../../../../../UI/Menu/Menu\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport socket from '../../../../../../io';\r\nimport Home from \"./Home/Home\";\r\n\r\n\r\nconst Discussions = lazy( () => import (\"./Discussions/Discussions\") );\r\nconst Form = lazy( () => import (\"./Form/Form\") );\r\nconst PreviousRequest = lazy( () => import (\"./PreviousRequest/PreviousRequest\") );\r\n\r\nconst Employee_Requisition = () => {\r\n\r\n    const [Employees, setEmployees] = useState([]);\r\n    const [Submitted, setSubmitted] = useState(false);\r\n\r\n    const [ModalShow, setModalShow] = useState(false);\r\n\r\n    const [MenuData, setMenuData] = useState([]);\r\n    \r\n    const [ViewRequest, setViewRequest] = useState([]);\r\n\r\n    const [Tweets, setTweets] = useState([]);\r\n    const [ Tweet, setTweet ] = useState(\r\n        {\r\n            tweet: '',\r\n            reply: 0\r\n        }\r\n    );\r\n\r\n    const [Companies, setCompanies] = useState([]);\r\n    const [Locations, setLocations] = useState([]);\r\n    const [RequestingPerson, setRequestingPerson] = useState(\r\n        {\r\n            emp_id: 0,\r\n            name: '',\r\n            company: {\r\n                company_code: 0,\r\n                company_name: ''\r\n            },\r\n            location: {\r\n                location_code: 0,\r\n                location_name: ''\r\n            }\r\n        }\r\n    );\r\n\r\n    const [Items, setItems] = useState([]);\r\n    const [Amount, setAmount] = useState(0.0);\r\n    const [Total, setTotal] = useState(0.0);\r\n    const [Index, setIndex] = useState();\r\n\r\n    const [EditMode, setEditMode] = useState(false);\r\n    const [PRCode, setPRCode] = useState('');\r\n    const [PurchaseRequisitionCode, setPurchaseRequisitionCode] = useState('');\r\n\r\n    const [Item, setItem] = useState({\r\n        description: \"\",\r\n        reason: \"\",\r\n        price: 0,\r\n        quantity: 1,\r\n    });\r\n    \r\n    const [CountStatus, setCountStatus] = useState([]);\r\n    const [RequestedBy, setRequestedBy] = useState('');\r\n\r\n    const Data = useSelector( ( state ) => state.EmpAuth.EmployeeData ); // CURRENT EMPLOYEE DATA\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( Data.company_code ) {\r\n\r\n                GetCompanyLocations(Data.company_code);\r\n\r\n                socket.on(\r\n                    'newpurchaserequision', () => {\r\n                        \r\n                        AllPr( Data.emp_id );\r\n                \r\n                    }\r\n                )\r\n\r\n                AllPr( Data.emp_id );\r\n                GetPRID( Data.company_code );\r\n\r\n                let selectEmp = {};\r\n                if ( JSON.parse(Data.access).includes(510) || JSON.parse(Data.access).includes(1) )\r\n                {\r\n                    selectEmp = {\r\n                        icon: 'las la-street-view',\r\n                        txt: 'Select Employee',\r\n                        link: false,\r\n                        func: () => HideModelFunction()\r\n                    }\r\n                }\r\n                setMenuData(\r\n                    [\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Dashboard',\r\n                            link: true,\r\n                            href: \"/purchaserequisition/view=home\"\r\n                        },\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Purchase Requisition',\r\n                            link: true,\r\n                            href: \"/purchaserequisition/view=form\"\r\n                        },\r\n                        selectEmp\r\n                    ]\r\n                )\r\n            }\r\n\r\n            $('.PurchaseRequisition').show();\r\n            $('.Discussion').hide(0);\r\n\r\n\r\n\r\n        }, [ Data.company_code, Submitted ]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let selectEmp = {};\r\n            if ( JSON.parse(Data.access).includes(510) || JSON.parse(Data.access).includes(1) )\r\n            {\r\n                selectEmp = {\r\n                    icon: 'las la-street-view',\r\n                    txt: 'Select Employee',\r\n                    link: false,\r\n                    func: () => HideModelFunction()\r\n                }\r\n            }\r\n            if ( window.location.href.split('/')[ window.location.href.split('/').length - 2 ].split('=').pop() === 'previousrequests' )\r\n            {\r\n\r\n                setMenuData(\r\n                    [\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Dashboard',\r\n                            link: true,\r\n                            href: \"/purchaserequisition/view=home\"\r\n                        },\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Purchase Requisition',\r\n                            link: true,\r\n                            href: \"/purchaserequisition/view=form\"\r\n                        },\r\n                        {\r\n                            icon: 'las la-comments',\r\n                            txt: 'Discussion',\r\n                            link: true,\r\n                            href: '/purchaserequisition/view=discussion/' + window.location.href.split('/').pop()\r\n                        },\r\n                        selectEmp\r\n                    ]\r\n                )\r\n                $('.Employee_Requisitions .Employee_Requisition_Left').css('background', '#fff');\r\n\r\n            }else\r\n            if ( window.location.href.split('/')[ window.location.href.split('/').length - 2 ].split('=').pop() === 'discussion' )\r\n            {\r\n\r\n                setMenuData(\r\n                    [\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Dashboard',\r\n                            link: true,\r\n                            href: \"/purchaserequisition/view=home\"\r\n                        },\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Purchase Requisition',\r\n                            link: true,\r\n                            href: \"/purchaserequisition/view=form\"\r\n                        },\r\n                        {\r\n                            icon: 'las la-comments',\r\n                            txt: 'Discussion',\r\n                            link: true,\r\n                            href: '/purchaserequisition/view=discussion/' + window.location.href.split('/').pop()\r\n                        },\r\n                        selectEmp\r\n                    ]\r\n                )\r\n\r\n                socket.on('prdiscussions', () => {\r\n                    GetDiscussions( window.location.href.split('/').pop() );\r\n                });\r\n                GetDiscussions( window.location.href.split('/').pop() );\r\n                $('.Employee_Requisitions .Employee_Requisition_Left').css('background', 'none');\r\n\r\n            }else\r\n            {\r\n                setMenuData(\r\n                    [\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Dashboard',\r\n                            link: true,\r\n                            href: \"/purchaserequisition/view=home\"\r\n                        },\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Purchase Requisition',\r\n                            link: true,\r\n                            href: \"/purchaserequisition/view=form\"\r\n                        },\r\n                        selectEmp\r\n                    ]\r\n                )\r\n                $('.Employee_Requisitions .Employee_Requisition_Left').css('background', 'none');\r\n            }\r\n\r\n        }, [ window.location.href ]\r\n    );\r\n\r\n    const GetDiscussions = ( pr_id ) => {\r\n\r\n        axios.post(\r\n            '/getprdiscussion',\r\n            {\r\n                pr_id: pr_id\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setTweets( res.data );\r\n                setTimeout(() => {\r\n                    var objDiv = document.getElementById(\"TweetContainer\");\r\n                    if ( objDiv )\r\n                    {\r\n                        objDiv.scrollTop = objDiv.scrollHeight;\r\n                    }\r\n                }, 300);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const onTweetboxChange = ( e ) => {\r\n\r\n        const { name, value } = e.target;\r\n\r\n        if ( name === 'tweet' )\r\n        {\r\n            setTweet(\r\n                {\r\n                    tweet: value,\r\n                    reply: 0\r\n                }\r\n            )\r\n        }else\r\n        {\r\n            setTweet(\r\n                {\r\n                    tweet: value,\r\n                    reply: parseInt( name )\r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const onTweet = ( e, txt, id ) => {\r\n\r\n        e.preventDefault();\r\n        const d = new Date();\r\n\r\n        axios.post(\r\n            '/prdiscussion',\r\n            {\r\n                pr_id: parseInt( window.location.href.split('/').pop() ),\r\n                emp_id: Data.emp_id,\r\n                body: txt ? txt : Tweet.tweet,\r\n                reply: id ? id : Tweet.reply,\r\n                date: d.toString()\r\n            }\r\n        ).then(\r\n            () => {\r\n\r\n                $(\"textarea\").val('');\r\n                setTweet(\r\n                    {\r\n                        tweet: '',\r\n                        reply: 0\r\n                    }\r\n                )\r\n                if ( id )\r\n                {\r\n                    socket.emit('prsubdiscussions', id);\r\n                }else\r\n                {\r\n                    if ( Tweet.reply === 0 )\r\n                    {\r\n                        socket.emit('prdiscussions');   \r\n                    }else\r\n                    {\r\n                        socket.emit('prsubdiscussions', Tweet.reply);\r\n                    }\r\n                }\r\n                GetDiscussions( window.location.href.split('/').pop() );\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const createPRCode = ( company_code ) => {\r\n\r\n        let CCode = '';\r\n        let LastNum = '';\r\n        let Year = '';\r\n\r\n        const d = new Date();\r\n        if ( d.getMonth() > 6 )\r\n        {\r\n            Year = d.getFullYear().toString().substring(2,4) + '/' + ( d.getFullYear() + 1 ).toString().substring(2,4);\r\n        }else\r\n        {\r\n            Year = ( d.getFullYear() - 1 ).toString().substring(2,4) + '/' + d.getFullYear().toString().substring(2,4);\r\n        }\r\n\r\n        axios.post('/getshortcompanyname', { company_code: company_code }).then(\r\n            (res) => {\r\n\r\n                if ( res.data.length > 0 )\r\n                {\r\n                    CCode = res.data[0].code;\r\n                }\r\n                axios.post('/getprcode', { company_code: company_code }).then(\r\n                    (res) => {\r\n        \r\n                        if ( res.data.length > 0 )\r\n                        {\r\n                            let code = ( parseInt( res.data[0].pr_code.split('-')[1] ) + 1 ).toString();\r\n                            if ( code.length === 1 )\r\n                            {\r\n                                code = '0' + code;\r\n                            }\r\n                            LastNum = code;\r\n                        }else\r\n                        {\r\n                            LastNum = '01';\r\n                        }\r\n                        setPurchaseRequisitionCode( CCode + '-' + LastNum + '-' + Year );\r\n        \r\n                    }\r\n                ).catch(\r\n                    (err) => {\r\n        \r\n                        console.log(err);\r\n        \r\n                    }\r\n                )\r\n\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const GetPRID = ( company_code ) => {\r\n\r\n        axios.post('/getprcode', { company_code: company_code }).then(\r\n            (res) => {\r\n\r\n                setPRCode( res.data[0].pr_code );\r\n\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const AllPr = ( id ) => {\r\n\r\n        const Data = new FormData();\r\n        Data.append('empID', id);\r\n        axios.post('/getthatempinvtryrequests', Data).then(\r\n            (res) => {\r\n\r\n                setViewRequest( res.data );\r\n                let arr = [];\r\n                for( let x = 0; x < res.data.length; x++ )\r\n                {\r\n    \r\n                    arr.push(res.data[x].status)\r\n    \r\n                }\r\n                setCountStatus( arr );\r\n\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const AddItem = (e) => {\r\n        if (\r\n            Item.description !== ''\r\n            &&\r\n            Item.reason !== ''\r\n            &&\r\n            Item.quantity > 0\r\n            &&\r\n            e.keyCode === 13\r\n        ) {\r\n\r\n            if (Item.reason.length < 20) {\r\n\r\n                let val = $(\".err_reason\").val();\r\n\r\n                let i = 0;\r\n                let txt = \"Reason must contain 20 characters minimum!!!\";\r\n                let speed = 50;\r\n                val = '';\r\n\r\n                function typeWriter() {\r\n                    if (i < txt.length) {\r\n                        val += txt.charAt(i);\r\n                        $(\".err_reason\").html(val);\r\n                        i++;\r\n                        setTimeout(typeWriter, speed);\r\n                    }\r\n                }\r\n\r\n                typeWriter();\r\n\r\n                setTimeout(() => {\r\n                    $(\".err_reason\").html('');\r\n                }, 5000);\r\n\r\n            } else {\r\n\r\n                if (!EditMode) {\r\n                    let cart = {\r\n                        description: Item.description,\r\n                        reason: Item.reason,\r\n                        price: Item.price,\r\n                        quantity: Item.quantity,\r\n                        amount: Amount,\r\n                    };\r\n                    setItems([...Items, cart]);\r\n\r\n                    setAmount(0.0);\r\n                    setItem({\r\n                        description: \"\",\r\n                        reason: \"\",\r\n                        price: 0,\r\n                        quantity: 1,\r\n                    });\r\n                    let t = Total;\r\n\r\n                    t = t + Amount;\r\n                    setTotal(t);\r\n\r\n                    var objDiv = document.getElementById(\"ItemsLIst\");\r\n                    if (objDiv !== null) {\r\n                        objDiv.scrollTop = objDiv.scrollHeight;\r\n                    }\r\n\r\n                } else {\r\n                    let arr = Items;\r\n                    let cart = {};\r\n                    if (Item.id) {\r\n                        cart = {\r\n                            id: Item.id,\r\n                            pr_id: Item.pr_id,\r\n                            description: Item.description,\r\n                            reason: Item.reason,\r\n                            price: Item.price,\r\n                            quantity: Item.quantity,\r\n                            amount: Amount,\r\n                        };\r\n                    } else {\r\n                        cart = {\r\n                            description: Item.description,\r\n                            reason: Item.reason,\r\n                            price: Item.price,\r\n                            quantity: Item.quantity,\r\n                            amount: Amount,\r\n                        };\r\n                    }\r\n                    setTotal(Total - arr[Index].amount + Amount);\r\n\r\n                    arr[Index] = cart;\r\n                    setItems(arr);\r\n\r\n                    setAmount(0.0);\r\n                    setItem({\r\n                        description: \"\",\r\n                        reason: \"\",\r\n                        price: 0,\r\n                        quantity: 1,\r\n                    });\r\n                    setIndex();\r\n                    setEditMode(false);\r\n                    $(\".PR_printUI .PR_printUI_Middle .PR_printUI_Grid.MyItems\").removeClass(\"d-none\");\r\n                }\r\n                \r\n                $('textarea, input, select').blur();\r\n                $('textarea[name=description]').focus();\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const onChnageHandler = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        const val = {\r\n            ...Item,\r\n            [name]: value,\r\n        };\r\n\r\n        setItem(val);\r\n\r\n        if (name === \"price\") {\r\n            let amount = value * Item.quantity;\r\n            setAmount(amount);\r\n        }\r\n\r\n        if (name === \"quantity\") {\r\n            let amount = value * Item.price;\r\n            setAmount(amount);\r\n        }\r\n    };\r\n\r\n    const onCompanyChange = (company_code) => {\r\n\r\n        axios.post('/getcompanylocations',\r\n            {\r\n                company_code: company_code ? company_code : Data.company_code\r\n            }\r\n        ).then(res => {\r\n\r\n            setLocations(res.data);\r\n            let Company = Companies.filter(\r\n                (val) => {\r\n\r\n                    return val.company_code === parseInt(company_code)\r\n\r\n                }\r\n            )\r\n\r\n            setRequestingPerson(\r\n                {\r\n                    ...RequestingPerson,\r\n                    company: {\r\n                        company_code: Company[0].company_code,\r\n                        company_name: Company[0].company_name\r\n                    }\r\n                }\r\n            );\r\n            createPRCode( company_code );\r\n\r\n        }).catch(err => {\r\n\r\n            console.log(err);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    const onLocationChange = ( location_code ) => {\r\n\r\n        let Location = Locations.filter(\r\n            (val) => {\r\n\r\n                return val.location_code === parseInt(location_code)\r\n\r\n            }\r\n        )\r\n\r\n        setRequestingPerson(\r\n            {\r\n                ...RequestingPerson,\r\n                location: {\r\n                    location_code: Location[0].location_code,\r\n                    location_name: Location[0].location_name\r\n                }\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    const GetCompanyLocations = (company_code) => {\r\n\r\n        axios.post('/getcompanylocations',\r\n            {\r\n                company_code: company_code ? company_code : Data.company_code\r\n            }\r\n        ).then(res => {\r\n\r\n            axios.get('/getallcompanies').then(res => { //get all companies\r\n                \r\n                // set companies\r\n                setCompanies(res.data);\r\n    \r\n            }).catch(err => {\r\n    \r\n                ShowNotification(err);\r\n    \r\n            });\r\n\r\n            // setCompanies(\r\n            //     [\r\n            //         {\r\n            //             company_code: Data.company_code,\r\n            //             company_name: Data.company_name\r\n            //         }\r\n            //     ]\r\n            // )\r\n\r\n            setRequestingPerson(\r\n                {\r\n                    emp_id: Data.emp_id,\r\n                    name: Data.name,\r\n                    company: {\r\n                        company_code: Data.company_code,\r\n                        company_name: Data.company_name\r\n                    },\r\n                    location: {\r\n                        location_code: Data.location_code,\r\n                        location_name: Data.location_name\r\n                    }\r\n                }\r\n            )\r\n\r\n            createPRCode( Data.company_code );\r\n            setLocations(res.data);\r\n\r\n        }).catch(err => {\r\n\r\n            console.log(err);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    const SearchEmployees = (e) => {\r\n\r\n        const { value } = e.target;\r\n\r\n        const Data = new FormData();\r\n        if (value === '') {\r\n\r\n            setEmployees([]);\r\n\r\n        } else {\r\n\r\n            Data.append('key', value);\r\n            axios.post('/getinvtryemployees', Data).then(res => {\r\n\r\n                setEmployees(res.data);\r\n\r\n            }).catch(err => {\r\n\r\n                ShowNotification(err);\r\n\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const HideModelFunction = () => {\r\n\r\n        setModalShow(!ModalShow);\r\n\r\n    }\r\n\r\n    // if employee is been selected\r\n    const EmployeeSelected = (index) => {\r\n\r\n        let employee = Employees[index];\r\n        const Data = new FormData();\r\n        Data.append('company_code', employee.company_code)\r\n        axios.post('/getcompanylocations', Data).then(response => { // get all locations regarding to company code\r\n\r\n            // set modal to hide/show\r\n            HideModelFunction();\r\n            // set locations\r\n            setLocations(response.data);\r\n\r\n            // set data to request summary\r\n            setRequestingPerson(\r\n                {\r\n                    emp_id: employee.emp_id,\r\n                    name: employee.name,\r\n                    company: {\r\n                        company_code: employee.company_code,\r\n                        company_name: employee.company_name\r\n                    },\r\n                    location: {\r\n                        location_code: employee.location_code,\r\n                        location_name: employee.location_name\r\n                    }\r\n                }\r\n            );\r\n\r\n            setRequestedBy( employee.name );\r\n\r\n            createPRCode( employee.company_code );\r\n\r\n        }).catch(err => {\r\n\r\n            ShowNotification(err);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    // popup the toast\r\n    const ShowNotification = (note) => {\r\n\r\n        toast.dark(note.toString(), {\r\n            position: 'top-right',\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n\r\n    }\r\n\r\n    const OnEdit = (index) => {\r\n        setEditMode(true);\r\n        setIndex(index);\r\n\r\n        setAmount(Items[index].amount);\r\n        setItem({\r\n            description: Items[index].description,\r\n            reason: Items[index].reason,\r\n            price: Items[index].price,\r\n            quantity: Items[index].quantity,\r\n        });\r\n\r\n        $(\".PR_printUI #Item\" + index).toggleClass(\"d-none\");\r\n    };\r\n\r\n    const onDelete = (id) => {\r\n\r\n        setItems(\r\n            Items.filter((val, index) => {\r\n                return index !== id;\r\n            })\r\n        );\r\n\r\n        setTotal(Total - Items[id].amount);\r\n    };\r\n\r\n    const SubmitPR = () => {\r\n\r\n        if ( Items.length === 0 )\r\n        {\r\n            ShowNotification( 'Minimum 1 item is required' );\r\n        }else\r\n        if ( $('select[name=EmployeeCompany]').val() === '' )\r\n        {\r\n            ShowNotification( 'No company selected' );\r\n        }else\r\n        if ( $('select[name=EmployeeLocation]').val() === '' )\r\n        {\r\n            ShowNotification( 'No location selected' );\r\n        }else\r\n        {\r\n            const d = new Date();\r\n            let val = {\r\n                items: JSON.stringify( Items ),\r\n                sender: {\r\n                    emp_id: Data.emp_id\r\n                },\r\n                behalfOf: {\r\n                    emp_id: RequestingPerson.emp_id,\r\n                    company_code: RequestingPerson.company.company_code,\r\n                    location_code: RequestingPerson.location.location_code\r\n                },\r\n                dateTime: d.toString()\r\n            }\r\n            axios.post('/purchaserequision', val).then(response => {\r\n\r\n                setItem({\r\n                    description: \"\",\r\n                    reason: \"\",\r\n                    price: 0,\r\n                    quantity: 1,\r\n                });\r\n                setEditMode( false );\r\n                setTotal(0.00);\r\n                setAmount(0.00);\r\n                setItems([]);\r\n                $('select[name=EmployeeCompany]').val('');\r\n                $('select[name=EmployeeLocation]').val('');\r\n                setSubmitted( !Submitted );\r\n\r\n                socket.emit('newpurchaserequision');\r\n\r\n                const Data3 = new FormData();\r\n                Data3.append('access', JSON.stringify([512, 514, 1]));\r\n                axios.post('/getemployeeaccesslike', Data3).then(\r\n                    (res) => {\r\n\r\n                        if ( res.data[0] ) {\r\n                            for (let x = 0; x < res.data.length; x++) \r\n                            {\r\n                                socket.emit( 'NewNotification', res.data[x].emp_id);\r\n\r\n                                const Data2 = new FormData();\r\n                                Data2.append('eventID', 3);\r\n                                Data2.append('link', '/purchaserequisition/view=purchase_requisition&&id=' + response.data[0].pr_id);\r\n                                Data2.append('receiverID', res.data[x].emp_id);\r\n                                Data2.append('senderID', sessionStorage.getItem('EmpID'));\r\n                                Data2.append('Title', sessionStorage.getItem('name'));\r\n                                Data2.append('NotificationBody', sessionStorage.getItem('name') + ' post a new purchase request on the portal');\r\n                                axios.post('/newnotification', Data2).then(() => {\r\n\r\n                                    axios.post('/sendmail', Data2).then(() => {\r\n\r\n\r\n                                    })\r\n                                });\r\n\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                )\r\n\r\n            }).catch(err => {\r\n\r\n                ShowNotification(err);\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    const AttachDrive = ( txt, id ) => {\r\n\r\n        setTweet(\r\n            {\r\n                tweet: txt,\r\n                reply: id\r\n            }\r\n        );\r\n\r\n        let e = document.createEvent('event');\r\n        onTweet( e, txt, id );\r\n\r\n    }\r\n\r\n    const CollapseRequests = () => {\r\n\r\n        $('.Employee_Requisitions').toggleClass('d-block');\r\n        $('.openCollapseBtn').toggleClass('d-block');\r\n        $('.Employee_Requisitions .ViewPrRequests_Left').toggle('slow');\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu data={MenuData} />\r\n            <ToastContainer />\r\n            <Modal show={ModalShow} Hide={HideModelFunction} content={\r\n                <div className=\"PREmployeesList\">\r\n                    <input type=\"search\" placeholder=\"Search Employee Name\" className=\"form-control\" name=\"empNameSearch\" onChange={SearchEmployees} />\r\n                    <div className=\"list\">\r\n\r\n                        {\r\n                            Employees.length > 0\r\n                                ?\r\n                                Employees.map(\r\n                                    (val, index) => {\r\n                                        return (\r\n\r\n                                            <div\r\n                                                className={\"d-flex align-content-center mt-2 employee\" + index}\r\n                                                key={index}\r\n                                                style={\r\n                                                    {\r\n                                                        cursor: 'pointer',\r\n                                                        transition: '.5s'\r\n                                                    }\r\n                                                }\r\n                                                onMouseOver={() => $('.PREmployeesList .employee' + index).css('background-color', '#ECF0F5')}\r\n                                                onMouseOut={() => $('.PREmployeesList .employee' + index).css('background-color', 'white')}\r\n                                                onClick={() => EmployeeSelected(index)}\r\n                                            >\r\n\r\n                                                <div className=\"mr-2\">\r\n                                                    <img src={'images/employees/' + val.emp_image} className=\"rounded-circle\" width=\"50\" height=\"50\" alt=\"emp img\" />\r\n                                                </div>\r\n                                                <div>\r\n                                                    <p className=\"font-weight-bold mb-0\">{val.name}</p>\r\n                                                    <p className=\"mb-0\">{val.designation_name} in {val.department_name} Dept. {val.company_name}, {val.location_name}</p>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        )\r\n                                    }\r\n                                )\r\n                                :\r\n                                <h6 className=\"text-center mt-3\">No Employee Found</h6>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            } />\r\n            <div className=\"Employee_Requisitions\">\r\n                <div>\r\n                    <div className=\"ViewPrRequests_Left\">\r\n                        <button className=\"btn btn-sm btn-dark\" onClick={ CollapseRequests }>\r\n                            <i className=\"las la-compress\"></i>\r\n                        </button>\r\n                        {\r\n                            ViewRequest.map(\r\n                                (val, index) => {\r\n\r\n                                    const d = new Date(val.request_date);\r\n                                    let txt = val.status;\r\n\r\n                                    let bgColor = 'var(--blue)';\r\n\r\n                                    if (val.status === 'Approved' || val.status === 'Delivered') {\r\n                                        bgColor = 'var(--success)';\r\n                                        txt = \"Approved By accounts\";\r\n                                    }\r\n\r\n                                    if (val.status === 'Rejected') {\r\n                                        bgColor = 'var(--orange)';\r\n                                        if ( val.forward_by === null )\r\n                                        {\r\n                                            txt = \"Rejected by inventory\";\r\n                                        }\r\n                                        else\r\n                                        {\r\n                                            txt = \"Rejected by accounts\";\r\n                                        }\r\n                                    }\r\n\r\n                                    if (val.status === 'Waiting For Approval') {\r\n                                        bgColor = 'var(--c-green)';\r\n                                        txt = \"Waiting for account's approval\";\r\n                                    }\r\n\r\n                                    return (\r\n                                        <>\r\n                                            <div className=\"ViewPrRequests_div\" key={ index }>\r\n                                                <div className=\"d-flex align-items-center justify-content-between\">\r\n                                                    <div className=\"d-flex align-items-center\">\r\n                                                        <img src={'images/employees/' + val.emp_image} alt=\"\" />\r\n                                                        <div>\r\n                                                            <p className=\"font-weight-bolder\"> {val.name} </p>\r\n                                                            <p style={ { backgroundColor: bgColor, fontSize: '10px' } } className=\"text-white text-center rounded-pill px-1\">{ txt }</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/* <div className=\"\">\r\n                                                        <p className=\"font-weight-bolder\">Status</p>\r\n                                                    </div> */}\r\n                                                </div>\r\n                                                <div className=\"py-2\">\r\n                                                    <div className=\"d-flex justify-content-between\">\r\n                                                        <div>\r\n                                                            <p className=\"font-weight-bolder\">Request Date</p>\r\n                                                            <p>{d.toDateString()}</p>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <p className=\"font-weight-bolder\">Total</p>\r\n                                                            <p> Rs {val.total.toLocaleString('en-US')} </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"d-flex align-items-center bg-light py-2 px-1 rounded\">\r\n                                                    <i className=\"las la-map-marker-alt\"></i>\r\n                                                    <div>\r\n                                                        <p className=\"font-weight-bolder\">{val.company_name}</p>\r\n                                                        <p>{val.location_name}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"ViewPrRequests_button\">\r\n                                                    <Link to={ \"/purchaserequisition/view=previousrequests/\" + val.pr_id }>\r\n                                                        <button className=\"btn\">View</button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"Employee_Requisition_Left\">\r\n                    <button className=\"btn btn-sm btn-dark d-none openCollapseBtn\" onClick={ CollapseRequests }>\r\n                        <i className=\"las la-external-link-alt\"></i>\r\n                    </button>\r\n\r\n                    <Suspense>\r\n\r\n                        <Route\r\n                            exact\r\n                            path='/purchaserequisition/view=home'\r\n                            render={  \r\n                                () =>\r\n                                    <Home\r\n                                        ViewRequest={ ViewRequest }\r\n                                        CountRequests={ViewRequest.length}\r\n                                        CountStatus={CountStatus}\r\n                                        // MonthlyRequests={MonthlyRequests}\r\n                                        EmpData={ Data }\r\n                                    />\r\n                            }\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path='/purchaserequisition/view=form'\r\n                            render={  \r\n                                () =>\r\n                                    <Form\r\n                                        RequestedBy={ RequestedBy }\r\n                                        PRCode={ PRCode }\r\n                                        PurchaseRequisitionCode={ PurchaseRequisitionCode }\r\n                                        Items={Items}\r\n                                        Item={Item}\r\n                                        Total={Total}\r\n                                        Data={Data}\r\n                                        Amount={Amount}\r\n                                        Companies={Companies}\r\n                                        Locations={Locations}\r\n                                        onChnageHandler={onChnageHandler}\r\n                                        onCompanyChange={onCompanyChange}\r\n                                        onLocationChange={onLocationChange}\r\n                                        AddItem={AddItem}\r\n                                        OnEdit={OnEdit}\r\n                                        onDelete={onDelete}\r\n                                    />\r\n                            }\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path='/purchaserequisition/view=previousrequests/:pr_id'\r\n                            render={\r\n                                () =>\r\n                                    <PreviousRequest\r\n                                    />\r\n                            }\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path='/purchaserequisition/view=discussion/:pr_id'\r\n                            render={\r\n                                () =>\r\n                                    <Discussions\r\n                                        Tweets={ Tweets }\r\n                                        Tweet={ Tweet }\r\n                                        EmpData={ Data }\r\n\r\n                                        onTweetboxChange={ onTweetboxChange }\r\n                                        onTweet={ onTweet }\r\n                                        AttachDrive={ AttachDrive }\r\n                                    />\r\n                            }\r\n                        />\r\n                    </Suspense>\r\n\r\n\r\n                    {\r\n                        window.location.href.split('/').pop() === 'view=form'\r\n                        ?\r\n                        <button className=\"btn btn-primary d-block mx-auto mt-3 px-5\" onClick={ SubmitPR }>Submit</button>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Employee_Requisition;","import React from 'react'\r\nimport './Modal.css';\r\n\r\nconst Modal = ( props ) =>{\r\n    return (\r\n        <>\r\n            <div className=\"Attandence_Request_Div\" style={ { display: props.show ? 'flex' : 'none'  } }>\r\n                <div className=\"dark\" onClick={ props.Hide }>\r\n                </div>\r\n                <div style={ { animationDelay: ( 0 + '.' + 1 ).toString() + 's' } } className={ props.show ? \"Attandence_Request_Div_Content Attandence_Request_Div_Content2\" : \"Attandence_Request_Div_Content\" }>\r\n                    {\r\n                        props.content\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Modal;"],"sourceRoot":""}