{"version":3,"sources":["Components/Attendance/Pages/Login/Login.jsx"],"names":["Login","history","useHistory","useState","StartLoading","setStartLoading","LoginID","LoginPass","UserData","setUserData","encryptor","require","useEffect","setTimeout","window","location","href","split","pop","replace","OnChangeHandler","e","target","name","value","setValues","show","className","onSubmit","preventDefault","axios","get","then","response","x","decrypt","data","login_id","emp_password","Data","FormData","append","emp_id","post","res","JSON","parse","access","includes","spoken","say","localStorage","setItem","catch","err","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","length","error","type","onChange","placeholder","to"],"mappings":"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","file":"static/js/25.66f50540.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport './Login.css';\nimport axios from '../../../../axios';\nimport { useHistory, Link } from 'react-router-dom';\nimport Loading from '../../../UI/Loading/Loading';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport spoken from '../../../../../node_modules/spoken/build/spoken';\n\nconst Login = () => {\n\n    // To change URL\n    const history = useHistory();\n    const [ StartLoading, setStartLoading ] = useState(true);\n\n    const [ UserData, setUserData ] = useState(\n        {\n            LoginID: '', LoginPass: ''\n        }\n    );\n    let key = 'real secret keys should be long and random';\n    const encryptor = require('simple-encryptor')(key);\n\n    useEffect(\n        () => {\n            setTimeout(() => {\n                setStartLoading( false );\n            }, 500);\n\n            setTimeout(() => {\n                if (window.location.href.split('/').pop() === 'attlogin') \n                {\n\n                    history.replace('/atthome');\n\n                }\n            }, 1000 * 60);\n        }, [ history ]\n    )\n\n    // Call on change function to store input field data into usestate()\n    const OnChangeHandler = ( e ) => {\n\n        const { name, value } = e.target;\n        const setValues = {\n            ...UserData,\n            [name]: value\n        }\n\n        setUserData(setValues);\n\n    }\n\n    // On form submition, the following function call\n    const OnUserLogin = ( e ) => {\n\n        e.preventDefault();\n        setStartLoading( true );\n\n        axios.get('/authemployee').then( response => {\n\n            for ( let x = 0; x < response.data.length; x++ )\n            {\n                setStartLoading( false );\n                // if the password and login id ofthe current index of an array is matched with \n                // the entered login id and password, the following condition will be true\n                if ( UserData.LoginID === encryptor.decrypt( response.data[x].login_id ) )\n                {\n                    const verifyPass = encryptor.decrypt( response.data[x].emp_password );\n\n                    if ( verifyPass === UserData.LoginPass )\n                    {\n                        const Data = new FormData();\n                        Data.append( 'empID', response.data[x].emp_id );\n                        axios.post('/checkattaccess', Data).then( res => {\n\n                            if ( res.data[0] )\n                            {\n                            \n                                if ( JSON.parse( res.data[0].access ).includes(100) || JSON.parse( res.data[0].access ).includes(101) || JSON.parse( res.data[0].access ).includes(102) || JSON.parse( res.data[0].access ).includes(103) )\n                                {\n                                    spoken.say('Login Successed,... Please wait');\n                                    localStorage.setItem('AttLoginID', encryptor.decrypt( response.data[x].login_id ));\n                                    localStorage.setItem('AccessControl', res.data[0].access);\n                                    setUserData( { LoginID: '', LoginPass: '' } );\n                                    setTimeout(() => {\n                                        history.replace('/attdashboard');\n                                        setTimeout(() => {\n                                            spoken.say('Welcome To Dashboard');\n                                        }, 1000);\n                                    }, 2000);\n                                }else\n                                {\n                                    setUserData( { LoginID: UserData.LoginID, LoginPass: '' } );\n                                    spoken.say('Permission Denied!!');\n                                }\n\n                            }else\n                            {\n                                setUserData( { LoginID: UserData.LoginID, LoginPass: '' } );\n                                spoken.say('Permission Denied!!');\n                            }\n\n                        } ).catch( err => {\n\n                            toast.dark( err , {\n                                position: 'top-right',\n                                autoClose: 5000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                                progress: undefined,\n                            });\n\n                        } );\n\n                    }else {\n                        setUserData( { LoginID: UserData.LoginID, LoginPass: '' } );\n                        spoken.say('Password Not Matched... please try again');\n                    }\n                    \n                }\n\n            }\n\n        } ).catch( error => {\n\n            setTimeout(() => {\n                spoken.say( error + '...., Please Try Later' );\n                setStartLoading( false );\n                setUserData( { LoginID: UserData.LoginID, LoginPass: '' } );\n            }, 1000);\n\n        } );\n\n    }\n\n    return (\n        <>\n            <Loading show={ StartLoading } />\n            <ToastContainer />\n            <div className=\"Login\">\n                <div className=\"Login-content\">\n                    <form onSubmit={  OnUserLogin }>\n                        <h3 className=\"mb-4\">Login</h3>\n                        <input type=\"text\" value={ UserData.LoginID } onChange={ OnChangeHandler } className=\"form-control mb-3 rounded-0\" placeholder=\"Login ID\" name=\"LoginID\" />\n                        <input type=\"password\" value={ UserData.LoginPass } onChange={ OnChangeHandler } className=\"form-control mb-3 rounded-0\" placeholder=\"Password\" name=\"LoginPass\" />\n                        <button className=\"btn\" type=\"submit\">Login</button>\n                        <Link to='/atthome' className='text-center d-block mb-0 mt-3 text-dark'>Go To Home</Link>\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n\n}\n\nexport default Login;"],"sourceRoot":""}