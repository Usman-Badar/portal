{"version":3,"sources":["Components/Inventory/Assets/Assets.jsx"],"names":["Assets","useState","EditView","setEditView","ShowBtns","setShowBtns","AssetsList","setAssetsList","asset_id","asset_code","asset_name","created_at","status","CheckedAsset","setCheckedAsset","OpenForm","setOpenForm","View","setView","Form","setForm","useEffect","allAssets","localStorage","getItem","$","removeClass","addClass","ReactTooltip","rebuild","ChangeViewType","view","setItem","toggleClass","axios","get","then","res","data","catch","err","console","log","CancleForm","OnCheckHandler","e","target","checked","id","index","split","pop","obj","check","className","onClick","class","arr","post","assets","JSON","stringify","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","prop","length","map","val","type","name","to","FormInput","submitAssetsForm","preventDefault","OnChangeHandler","value","date","Date","x","toLocaleLowerCase","alert","date_time","d","count_sub_assets","toDateString","props","onSubmit","onChange","required","disabled"],"mappings":"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","file":"static/js/97.21fbee56.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport './Assets.css';\r\n\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from \"../../../axios\";\r\nimport $ from 'jquery';\r\n\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Assets = () => {\r\n\r\n    const [EditView, setEditView] = useState(false);\r\n    const [ShowBtns, setShowBtns] = useState(false);\r\n    const [AssetsList, setAssetsList] = useState([]);\r\n    const [ CheckedAsset, setCheckedAsset ] = useState(\r\n        {\r\n            asset_id: '',\r\n            asset_code: '',\r\n            asset_name: '',\r\n            created_at: '',\r\n            status: ''\r\n        }\r\n    )\r\n\r\n    const [OpenForm, setOpenForm] = useState(false);\r\n    const [View, setView] = useState('list');\r\n\r\n    const [Form, setForm] = useState({\r\n        asset_code: '',\r\n        asset_name: '',\r\n    });\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            allAssets();\r\n            if ( localStorage.getItem('inventoryAssetsView') )\r\n            {\r\n                setView(localStorage.getItem('inventoryAssetsView'));\r\n                $('.btn.icon1').removeClass('active');\r\n                $('.btn#' + localStorage.getItem('inventoryAssetsView')).addClass('active');\r\n            }\r\n\r\n        }, []\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n            \r\n            if ( CheckedAsset.asset_id !== '' )\r\n            {\r\n                setShowBtns( true );\r\n            }else\r\n            {\r\n                setShowBtns( false );\r\n                setEditView( false );\r\n            }\r\n\r\n            ReactTooltip.rebuild();\r\n\r\n        }, [ CheckedAsset.asset_id ]\r\n    )\r\n\r\n    const ChangeViewType = (view) => {\r\n\r\n        setView(view);\r\n        localStorage.setItem('inventoryAssetsView', view);\r\n        $('.btn-group.actions .btn').toggleClass('active');\r\n\r\n    }\r\n\r\n    const allAssets = () => {\r\n\r\n        axios.get(\r\n            '/getallassets'\r\n        ).then(\r\n            res => {\r\n\r\n                setAssetsList(res.data);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const ShowForm = () => {\r\n\r\n        setOpenForm(true)\r\n\r\n    }\r\n\r\n    const submitAssetsForm = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        for (let x = 0; x < AssetsList.length; x++) {\r\n            if (Form.asset_name.toLocaleLowerCase() === AssetsList[x].asset_name.toLocaleLowerCase() || Form.asset_code.toLocaleLowerCase() === AssetsList[x].asset_code.toLocaleLowerCase()) {\r\n                alert(\"name and code should be unique\");\r\n                return false;\r\n            }\r\n        }\r\n\r\n        const val = {\r\n            asset_name: Form.asset_name,\r\n            asset_code: Form.asset_code,\r\n            date_time: new Date(),\r\n        }\r\n\r\n        axios.post(\r\n            '/newasset', \r\n            {\r\n                data: JSON.stringify(val)\r\n            }\r\n        ).then(\r\n            () => {\r\n\r\n                setForm(\r\n                    {\r\n                        asset_code: '',\r\n                        asset_name: '',\r\n                    }\r\n                );\r\n\r\n                allAssets();\r\n                toast.dark( \"New Asset Added\" , {\r\n                    position: 'top-center',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n        setOpenForm(false)\r\n\r\n\r\n    }\r\n\r\n    const OnChangeHandler = (e) => {\r\n        const { value, name } = e.target\r\n\r\n        const val = {\r\n            ...Form,\r\n            [name]: value\r\n        }\r\n\r\n        setForm(val);\r\n    }\r\n\r\n    const OnChangeHandlerInputs = (e) => {\r\n\r\n        const { value, name } = e.target\r\n\r\n        const val = {\r\n            ...CheckedAsset,\r\n            [name]: value\r\n        }\r\n\r\n        setCheckedAsset(val);\r\n\r\n    }\r\n\r\n    const CancleForm = () => {\r\n\r\n        setOpenForm( false )\r\n        setEditView( false )\r\n\r\n    }\r\n\r\n    const OnCheckHandler = (e) => {\r\n\r\n        const { checked, id } = e.target;\r\n\r\n        console.log( checked );\r\n        console.log( id );\r\n\r\n        let data = {};\r\n        if (checked) {\r\n\r\n            let index = id.split('check').pop();\r\n            let obj = AssetsList[index];\r\n            console.log( obj );\r\n            obj.check = id;\r\n            data = obj;\r\n\r\n        }\r\n        setCheckedAsset( data );\r\n    }\r\n\r\n    const DeleteAssets = () => {\r\n\r\n        let arr = [ CheckedAsset.asset_id ];\r\n\r\n        axios.post(\r\n            '/deleteselectedassets',\r\n            {\r\n                assets: JSON.stringify( arr )\r\n            }\r\n        ).then(\r\n            () => {\r\n\r\n                toast.dark( \"Assets Deleted\" , {\r\n                    position: 'top-center',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                allAssets();\r\n                setCheckedAsset(\r\n                    {\r\n                        asset_id: '',\r\n                        asset_code: '',\r\n                        asset_name: '',\r\n                        created_at: '',\r\n                        status: ''\r\n                    }\r\n                );\r\n\r\n                $('input[type=radio]').prop('checked', false);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                toast.dark( err, {\r\n                    position: 'top-center',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n            }\r\n        )\r\n        \r\n    }  \r\n\r\n    const OnEditRecord = () => {\r\n\r\n        setEditView( true );\r\n\r\n    }\r\n\r\n    const OnUpdateRecord = ( e ) => {\r\n\r\n        e.preventDefault();\r\n        axios.post(\r\n            '/updateselectedasset',\r\n            {\r\n                assets: JSON.stringify( CheckedAsset )\r\n            }\r\n        ).then(\r\n            () => {\r\n\r\n                toast.dark( \"Assets Updated\" , {\r\n                    position: 'top-center',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                allAssets();\r\n                setCheckedAsset(\r\n                    {\r\n                        asset_id: '',\r\n                        asset_code: '',\r\n                        asset_name: '',\r\n                        created_at: '',\r\n                        status: ''\r\n                    }\r\n                );\r\n\r\n                $('input[type=radio]').prop('checked', false);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                toast.dark( err, {\r\n                    position: 'top-center',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <ReactTooltip />\r\n            <ToastContainer />\r\n\r\n            <div className=\"Assets\">\r\n                <div className=\"Assets_Top\" >\r\n                    <div className=\"Assets_Top_left\">\r\n\r\n                        <div className=\"dropdown_filter\">\r\n                            <p>All Assets</p>\r\n                            {/* <i class=\"las la-caret-down\"></i> */}\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"Assets_Top_right\">\r\n\r\n                        {/* <button className=\"btn setting_button\"><i class=\"las la-cog\"></i></button> */}\r\n                        <button className=\"btn New_button\" onClick={ShowForm} > <i class=\"las la-plus\"></i> <p>New</p></button>\r\n\r\n                        {\r\n                            ShowBtns === true || CheckedAsset.asset_id !== ''\r\n                            ?\r\n                            <div className=\"btn-group\">\r\n                                <button data-tip=\"Edit\" className=\"btn icon1\" onClick={ OnEditRecord }><i class=\"las la-edit\"></i></button>\r\n                                <button data-tip=\"Delete\" className=\"btn icon1\" onClick={DeleteAssets}><i class=\"las la-trash\"></i></button>\r\n                            </div>\r\n                            :\r\n                            null\r\n                        }\r\n\r\n                        <div className=\"btn-group actions\">\r\n                            <button data-tip=\"List View\" id=\"list\" className=\"btn icon1 active\" onClick={() => ChangeViewType('list')}><i class=\"las la-list-ul\"></i></button>\r\n                            <button data-tip=\"Box View\" id=\"box\" className=\"btn icon1\" onClick={() => ChangeViewType('box')}><i class=\"las la-border-all\"></i></button>\r\n                        </div>\r\n                        <div className=\"list_button\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    EditView\r\n                    ?\r\n                    <div className='grid_parent'>\r\n\r\n                        <div>\r\n\r\n                            {\r\n                                AssetsList.length === 0\r\n                                ?\r\n                                <h4 className=\"text-center\">No Record Found</h4>\r\n                                :\r\n                                <>\r\n                                    <div className=\"Assets_Grid changeOnCLick\">\r\n                                        <div></div>\r\n                                        <div><p className=\"text-left\">Assets Name</p></div>\r\n                                    </div>\r\n\r\n                                    {\r\n                                        AssetsList.map(\r\n                                            (val, index) => {\r\n\r\n                                                return (\r\n                                                    <div className=\"Assets_Grid_list changeOnCLick\" key={index}>\r\n                                                        <div><input type=\"radio\" name=\"selection\" id={'check' + index} onClick={OnCheckHandler} /></div>\r\n                                                        <NavLink to={'/inventory/asset/id=' + val.asset_id + '&&name=' + val.asset_name + '&&view=sub_assets'}><p className=\"text-left\">{val.asset_name}</p></NavLink>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        <FormInput \r\n                            submitAssetsForm={ OnUpdateRecord }\r\n                            OnChangeHandler={ OnChangeHandlerInputs }\r\n                            CancleForm={ CancleForm }\r\n\r\n                            Form={ CheckedAsset }\r\n                            date={ new Date( CheckedAsset.created_at ) }\r\n                        />\r\n\r\n                    </div>\r\n                    :\r\n                    OpenForm\r\n                        ?\r\n\r\n                        <div className='grid_parent'>\r\n\r\n                            <div>\r\n\r\n                                {\r\n                                    AssetsList.length === 0\r\n                                    ?\r\n                                    <h4 className=\"text-center\">No Record Found</h4>\r\n                                    :\r\n                                    <>\r\n                                        <div className=\"Assets_Grid changeOnCLick\">\r\n                                            <div></div>\r\n                                            <div><p className=\"text-left\">Assets Name</p></div>\r\n                                        </div>\r\n\r\n                                        {\r\n                                            AssetsList.map(\r\n                                                (val, index) => {\r\n\r\n                                                    return (\r\n                                                        <div className=\"Assets_Grid_list changeOnCLick\" key={index}>\r\n                                                            <div><input type=\"radio\" name=\"selection\" id={'check' + index} onClick={OnCheckHandler} /></div>\r\n                                                            <NavLink to={'/inventory/asset/id=' + val.asset_id + '&&name=' + val.asset_name + '&&view=sub_assets'}><p className=\"text-left\">{val.asset_name}</p></NavLink>\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </>\r\n                                }\r\n\r\n                            </div>\r\n\r\n                            <FormInput \r\n                                submitAssetsForm={ submitAssetsForm }\r\n                                OnChangeHandler={ OnChangeHandler }\r\n                                CancleForm={ CancleForm }\r\n\r\n                                Form={ Form }\r\n                                date={ new Date() }\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        :\r\n\r\n                        View === 'box'\r\n                        ?\r\n                        <>\r\n\r\n                            <div className=\"Box\">\r\n\r\n                                {\r\n                                    AssetsList.length === 0\r\n                                    ?\r\n                                    <h4 className=\"text-center\">No Record Found</h4>\r\n                                    :\r\n                                    null\r\n                                }\r\n\r\n                                <div className=\"Assets_Grid_box\">\r\n\r\n\r\n                                    {\r\n                                        AssetsList.map(\r\n                                            (val, index) => {\r\n\r\n                                                const d = new Date(val.created_at);\r\n\r\n                                                return (\r\n                                                    <>\r\n\r\n                                                        <div className=\"Grid_box_div shadow-sm rounded\" key={ index }>\r\n\r\n                                                            <div className=\"CheckBox\"><input type=\"radio\" name=\"selection\" id={'check' + index} onClick={OnCheckHandler}  /></div>\r\n\r\n                                                            <NavLink to={'/inventory/asset/id=' + val.asset_id + '&&name=' + val.asset_name + '&&view=sub_assets'} className=\"Grid_box_div_center\">\r\n\r\n                                                                <div className=\"Icon\">\r\n                                                                    <i class=\"las la-image\"></i>\r\n                                                                </div>\r\n                                                                <div className=\"details\">\r\n                                                                    <p>Asset Name : </p>\r\n                                                                    <h6>{val.asset_name}</h6>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"details\">\r\n                                                                    <p>Asset Code : </p>\r\n                                                                    <h6>{val.asset_code}</h6>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"details\">\r\n                                                                    <p>Sub Assets : </p>\r\n                                                                    <h6>{val.count_sub_assets}</h6>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"details\">\r\n                                                                    <p>Date : </p>\r\n                                                                    <h6>{d ? d.toDateString() : null}</h6>\r\n                                                                </div>\r\n\r\n                                                            </NavLink>\r\n\r\n                                                        </div>\r\n\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </>\r\n\r\n                        :\r\n\r\n                        <div>\r\n\r\n                            {\r\n                                AssetsList.length === 0\r\n                                ?\r\n                                <h4 className=\"text-center\">No Record Found</h4>\r\n                                :\r\n                                <>\r\n                                    <div className=\"Assets_Grid\">\r\n                                        <div></div>\r\n                                        <div><p>Assets Name</p></div>\r\n                                        <div><p>Assets Code</p></div>\r\n                                        <div><p>Sub Assets</p></div>\r\n                                        <div><p>Date</p></div>\r\n                                    </div>\r\n\r\n                                    {\r\n                                        AssetsList.map(\r\n                                            (val, index) => {\r\n\r\n                                                const d = new Date(val.created_at);\r\n\r\n                                                return (\r\n                                                    <div className=\"Assets_Grid_list\" key={index}>\r\n                                                        <div><input type=\"radio\" name=\"selection\" id={'check' + index} onClick={OnCheckHandler} /></div>\r\n                                                        <NavLink to={'/inventory/asset/id=' + val.asset_id + '&&name=' + val.asset_name + '&&view=sub_assets'}><p>{val.asset_name}</p></NavLink>\r\n                                                        <NavLink to={'/inventory/asset/id=' + val.asset_id + '&&name=' + val.asset_name + '&&view=sub_assets'}><p>{val.asset_code}</p></NavLink>\r\n                                                        <NavLink to={'/inventory/asset/id=' + val.asset_id + '&&name=' + val.asset_name + '&&view=sub_assets'}><p>{val.count_sub_assets}</p></NavLink>\r\n                                                        <NavLink to={'/inventory/asset/id=' + val.asset_id + '&&name=' + val.asset_name + '&&view=sub_assets'}><p>{d ? d.toDateString() : null}</p></NavLink>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                }\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Assets;\r\n\r\nconst FormInput = ( props ) => {\r\n\r\n    const [ Form, setForm ] = useState(\r\n        {\r\n            asset_name: '',\r\n            asset_code: ''\r\n        }\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setForm(\r\n                {\r\n                    asset_name: props.Form.asset_name,\r\n                    asset_code: props.Form.asset_code\r\n                }\r\n            )\r\n\r\n        }, [ props.Form ]\r\n    )\r\n\r\n    return (\r\n        <form className=\"Assets_form\" onSubmit={ props.submitAssetsForm } key={ props.index } id=\"myForm\">\r\n\r\n            <h5 className=\"font-weight-bold\">Add New Assets</h5>\r\n\r\n            <div className=\"Assets_form_grid\">\r\n                <div>\r\n                    <p>Assets Name</p>\r\n                    <input type=\"text\" onChange={ props.OnChangeHandler } value={ Form.asset_name } className=\" form-control form-control-sm\" name='asset_name' required />\r\n                </div>\r\n                <div>\r\n                    <p>Assets Code</p>\r\n                    <input type=\"text\" onChange={ props.OnChangeHandler } value={ Form.asset_code } className=\" form-control form-control-sm\" name=\"asset_code\" required />\r\n                </div>\r\n                <div>\r\n                    <p>Date</p>\r\n                    <input type=\"text\" disabled value={ props.date ? props.date.toDateString() : null } className=\"form-control form-control-sm\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Assets_form_button\" >\r\n                <div className=\"d-flex\">\r\n                    <button className=\"btn btn-sm cancle\" onClick={ () => props.CancleForm() } type=\"reset\">Cancle</button>\r\n                    <button className=\"btn btn-sm submit\" type=\"submit\">Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n\r\n}"],"sourceRoot":""}