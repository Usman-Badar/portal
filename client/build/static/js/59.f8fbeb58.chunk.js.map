{"version":3,"sources":["../node_modules/react-html-table-to-excel/index.js","Components/EmployeeProtal/Dashboard/Pages/View_Emp_Attendance/View_Emp_Attendance.jsx"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","table","string","isRequired","filename","sheet","id","className","buttonText","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","bind","subClass","superClass","create","constructor","setPrototypeOf","_inherits","document","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","window","navigator","msSaveOrOpenBlob","blobObject","Blob","click","element","createElement","href","base64","format","download","body","appendChild","removeChild","type","onClick","s","btoa","unescape","encodeURIComponent","c","replace","m","p","Component","defaultProps","View_Emp_Attendance","EmpData","useSelector","state","EmpAuth","EmployeeData","ref","React","createRef","useState","Employees","setEmployees","DailyAttendance","Companies","setCompanies","Clicked","setClicked","time_in","time_out","break_in","break_out","Attendance","setAttendance","thumbs","attendance","logs","AttendanceDetails","setAttendanceDetails","Company","setCompany","DateTime","setDateTime","useEffect","names","x","includes","name","push","axios","post","emp_id","then","res","data","company_code","catch","err","console","log","ShowDetails","$","fadeIn","fadeOut","hide","show","css","html","GetList","date","company","date_time","changeNewTime","e","val","variant","style","width","fontSize","fontFamily","disabled","onChange","map","index","selected","company_name","marginBottom","fullWidth","src","emp_image","height","alt","empdesig","status","backgroundColor","location_name","time","Date","toDateString","colSpan","onSubmit","preventDefault","Data","FormData","append","alert","textAlign","log_date","log_time","log_id"],"mappings":"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","file":"static/js/59.f8fbeb58.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\n\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      };\n\n      // If IE11\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'button',\n        {\n          id: this.props.id,\n          className: this.props.className,\n          type: 'button',\n          onClick: this.handleDownload\n        },\n        this.props.buttonText\n      );\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\n\nexports.default = ReactHTMLTableToExcel;\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport './View_Emp_Attendance.css';\r\n\r\nimport axios from '../../../../../axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport $ from 'jquery';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst View_Emp_Attendance = () => {\r\n\r\n    const EmpData = useSelector((state) => state.EmpAuth.EmployeeData);\r\n    const ref = React.createRef();\r\n    const AccessControls = useSelector((state) => state.EmpAuth.EmployeeData);\r\n\r\n    const [SelectedEmployee, setSelectedEmployee] = useState('');\r\n    const [Employees, setEmployees] = useState([]);\r\n    const [DailyAttendance, setDailyAttendance] = useState([]);\r\n    const [Companies, setCompanies] = useState([]);\r\n\r\n    const [Clicked, setClicked] = useState(false);\r\n    const [Attendance, setAttendance] = useState(\r\n        {\r\n            time_in: '',\r\n            time_out: '',\r\n            break_in: '',\r\n            break_out: ''\r\n        }\r\n    );\r\n\r\n    const [AttendanceDetails, setAttendanceDetails] = useState(\r\n        {\r\n            thumbs: [],\r\n            attendance: [],\r\n            logs: []\r\n        }\r\n    );\r\n\r\n    const [Company, setCompany] = useState('');\r\n    const [DateTime, setDateTime] = useState('');\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let names = [];\r\n            for (let x = 0; x < DailyAttendance.length; x++) {\r\n                if (!names.includes(DailyAttendance[x].name)) {\r\n                    names.push(DailyAttendance[x].name);\r\n                }\r\n            }\r\n\r\n            setEmployees(names);\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [DailyAttendance.length]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            axios.post(\r\n                '/getemployeecompaniesauth',\r\n                {\r\n                    emp_id: EmpData.emp_id\r\n                }\r\n            ).then(\r\n                res => {\r\n\r\n                    setCompanies(res.data);\r\n                    if (res.data.length === 1) {\r\n                        setCompany(res.data[0].company_code);\r\n                    }\r\n\r\n                }\r\n            ).catch(\r\n                err => {\r\n\r\n                    console.log(err);\r\n\r\n                }\r\n            )\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, []\r\n    )\r\n\r\n    const ShowEdit = () => {\r\n\r\n        $('.form').fadeIn();\r\n        $('.list').fadeOut(0);\r\n        $('.ButtonDiv2').hide();\r\n        $('.ButtonDiv1').show();\r\n        $('.togglebutton .HideDiv').css('left', '50%');\r\n        $('.togglebutton .HideDiv').html('Eddit');\r\n\r\n    }\r\n\r\n    const ShowDetails = () => {\r\n\r\n        $('.list').fadeIn();\r\n        $('.form').fadeOut(0);\r\n        $('.ButtonDiv2').hide();\r\n        $('.ButtonDiv1').show();\r\n        $('.togglebutton .HideDiv').css('left', '0');\r\n        $('.togglebutton .HideDiv').html('Default');\r\n\r\n    }\r\n\r\n    const onChangeCompany = (e) => {\r\n\r\n        setCompany(e.target.value);\r\n        GetList(DateTime, e.target.value);\r\n\r\n    }\r\n\r\n    const onChangeDate = (e) => {\r\n\r\n        const { value } = e.target;\r\n        GetList(value, Company);\r\n\r\n    }\r\n\r\n    const GetList = (date, company) => {\r\n\r\n        axios.post(\r\n            '/getthatdateemployeeslist',\r\n            {\r\n                date_time: date,\r\n                company: company\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setEmployees(res.data);\r\n                setDateTime(date);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const showEmpDetails = (date, emp_id, name) => {\r\n\r\n        axios.post(\r\n            '/getemployeefullattendance',\r\n            {\r\n                date: date,\r\n                emp_id: emp_id,\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setAttendanceDetails(\r\n                    {\r\n                        name: name,\r\n                        thumbs: res.data[0],\r\n                        attendance: res.data[1],\r\n                        logs: res.data[2]\r\n                    }\r\n                );\r\n\r\n                setAttendance(\r\n                    {\r\n                        time_in: res.data[1][0].time_in,\r\n                        time_out: res.data[1][0].time_out,\r\n                        break_in: res.data[1][0].break_in,\r\n                        break_out: res.data[1][0].break_out\r\n                    }\r\n                )\r\n                setClicked(true);\r\n\r\n                ShowDetails();\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const changeNewTime = (e) =>{\r\n\r\n        const { name, value } = e.target;\r\n\r\n        const val = {\r\n            ...Attendance,\r\n            [name]: value\r\n        }\r\n\r\n        setAttendance(val);\r\n    }\r\n\r\n    const updateattendance = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const Data = new FormData();\r\n        Data.append('emp_id', AttendanceDetails.attendance[0].emp_id)\r\n        Data.append('record_id', AttendanceDetails.attendance[0].id)\r\n        Data.append('time_in', Attendance.time_in)\r\n        Data.append('time_out', Attendance.time_out)\r\n        Data.append('break_in', Attendance.break_in)\r\n        Data.append('break_out', Attendance.break_out)\r\n        Data.append('previous_time_in', AttendanceDetails.attendance[0].time_in)\r\n        Data.append('previous_time_out', AttendanceDetails.attendance[0].time_out)\r\n        Data.append('previous_break_in', AttendanceDetails.attendance[0].break_in)\r\n        Data.append('previous_break_out', AttendanceDetails.attendance[0].break_out)\r\n        Data.append('edit_by', EmpData.emp_id)\r\n        Data.append('edit_by_name', EmpData.name)\r\n\r\n        axios.post(\r\n            '/updateemployeeattendance',\r\n            Data\r\n        ).then(\r\n            () => {\r\n\r\n                alert(\"SUCCESS\");\r\n                setAttendance(\r\n                    {\r\n                        time_in: '',\r\n                        time_out: '',\r\n                        break_in: '',\r\n                        break_out: ''\r\n                    }\r\n                );\r\n\r\n                setAttendanceDetails(\r\n                    {\r\n                        thumbs: [],\r\n                        attendance: [],\r\n                        logs: []\r\n                    }\r\n                );\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err)\r\n\r\n            }\r\n        )\r\n\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <ToastContainer />\r\n            <div className=\"View_Employee_Attendance\">\r\n                <div className=\"DivFirst\">\r\n                    <div>\r\n                        <h5 className=\" font-weight-bolder\">Edit Employees Attendance</h5>\r\n                    </div>\r\n                    <div className=\"Filters\">\r\n                        <div className=\"d-flex align-items-center\">\r\n\r\n                            <div className=\"w-100 px-1\">\r\n                                <label className=\"mb-0\">Company</label>\r\n                                <select\r\n                                    className=\"form-control bg-light\"\r\n                                    variant=\"standard\"\r\n                                    style={{ width: '100%', fontSize: '12px', fontFamily: 'Quicksand' }}\r\n                                    // onChange={OnFilter}\r\n                                    disabled={Companies.length === 1 ? true : false}\r\n                                    onChange={onChangeCompany}\r\n                                    name='company'\r\n                                >\r\n                                    <option\r\n                                        value=''\r\n                                    >\r\n                                        Select the Option\r\n                                    </option>\r\n                                    {\r\n                                        Companies.map(\r\n                                            (val, index) => {\r\n\r\n                                                return (\r\n                                                    <option selected={Companies.length === 1 ? true : false} value={val.company_code} key={index}> {val.company_name} </option>\r\n                                                )\r\n\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"w-100 px-1\">\r\n                                <label className=\"mb-0\">Date</label>\r\n                                <input className=\"form-control form-control-sm bg-light\" name=\"dateFrom\" onChange={onChangeDate} type=\"date\" variant=\"standard\" style={{ marginBottom: '10px' }} fullWidth />\r\n                            </div>\r\n                            <div className=\"w-100 px-1\">\r\n                                {/* <label className=\"mb-0\">Employees</label>\r\n                                <select\r\n                                    className=\"form-control bg-light\"\r\n                                    variant=\"standard\"\r\n                                    style={{ width: '100%', fontSize: '12px', fontFamily: 'Quicksand' }}\r\n                                    onChange={(e) => setSelectedEmployee(e.target.value)}\r\n                                    name='employee'\r\n                                >\r\n                                    <option\r\n                                        value=''\r\n                                    >\r\n                                        Select the Option\r\n                                    </option>\r\n                                    {Employees.map(\r\n                                        (val, index) => (\r\n                                            <option\r\n                                                key={index}\r\n                                                value={val}\r\n                                            >\r\n                                                {val}\r\n                                            </option>\r\n                                        ))}\r\n                                </select> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {/* <h5 className=\"mb-4 font-weight-bolder\">Daily Attendance</h5> */}\r\n\r\n                    {\r\n                        Employees.length === 0\r\n                            ? null\r\n                            :\r\n                            <div className=\"DivSecond\">\r\n                                <div className=\"attendance-content\">\r\n\r\n                                    <h6 className=\"font-weight-bolder\">Employees</h6>\r\n                                    <div className='employees_counts'>\r\n                                        <p>{Employees.length + '  Employees'} </p>\r\n                                    </div>\r\n\r\n                                    {\r\n                                        Employees.map(\r\n                                            (val, index) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        <div className=\"Employee_info\" key={index} onClick={() => showEmpDetails(DateTime, val.emp_id, val.name)}>\r\n                                                            <div className='d-flex align-items-center'>\r\n                                                                <img\r\n                                                                    src={'images/employees/' + val.emp_image}\r\n                                                                    width='40'\r\n                                                                    height='40'\r\n                                                                    alt=\"employee img\"\r\n                                                                    className='rounded-circle'\r\n                                                                />\r\n                                                                <div className=\"ml-2\">\r\n                                                                    <p className='font-weight-bold'> {val.name} </p>\r\n                                                                    <p>{val.empdesig}</p>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            {\r\n                                                                val.status === 'Present'\r\n                                                                    ?\r\n                                                                    <div className='statusbage' style={{ backgroundColor: '#5C6E9C' }} >\r\n                                                                        <p>{val.status}</p>\r\n                                                                    </div>\r\n                                                                    :\r\n                                                                    val.status === 'Late'\r\n                                                                        ?\r\n                                                                        <div className='statusbage blinkstatus' style={{ backgroundColor: '#E7604A' }} >\r\n                                                                            <p>{val.status}</p>\r\n                                                                        </div>\r\n                                                                        :\r\n                                                                        val.status === 'Absent'\r\n                                                                            ?\r\n                                                                            <div className='statusbage blinkstatus' style={{ backgroundColor: '#E7604A' }}>\r\n                                                                                <p>{val.status}</p>\r\n                                                                            </div>\r\n                                                                            :\r\n                                                                            val.status === 'Holiday'\r\n                                                                                ?\r\n                                                                                <div className='statusbage' style={{ backgroundColor: 'red' }}>\r\n                                                                                    <p>{val.status}</p>\r\n                                                                                </div>\r\n                                                                                :\r\n                                                                                val.status === 'leave'\r\n                                                                                    ?\r\n                                                                                    <div className='statusbage' style={{ backgroundColor: 'red' }}>\r\n                                                                                        <p>{val.status}</p>\r\n                                                                                    </div>\r\n                                                                                    :\r\n                                                                                    val.status === 'leave'\r\n                                                                                        ?\r\n                                                                                        <div className='statusbage' style={{ backgroundColor: 'red' }}>\r\n                                                                                            <p>{val.status}</p>\r\n                                                                                        </div>\r\n                                                                                        :\r\n                                                                                        null\r\n                                                            }\r\n\r\n                                                        </div>\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n\r\n                                </div>\r\n                                {\r\n                                    Clicked\r\n                                        ?\r\n                                        AttendanceDetails.thumbs.length === 0\r\n                                            ?\r\n                                            <div className='thumb_details'>\r\n                                                <h6 className=\"mb-4 font-weight-bolder\">No Thumb Found</h6>\r\n                                            </div>\r\n                                            :\r\n                                            <div className='thumb_details'>\r\n\r\n                                                <div className='d-flex align-items-center justify-content-between w-100 mb-4'>\r\n                                                    <h6 className=\"font-weight-bolder mb-0\">{ AttendanceDetails.name } Thumbs</h6>\r\n                                                    <ReactHTMLTableToExcel\r\n                                                        id=\"test-table-xls-button\"\r\n                                                        className=\"btn btn-sm submit\"\r\n                                                        table=\"table-to-xls\"\r\n                                                        filename={ AttendanceDetails.name + \"_thumbs\" }\r\n                                                        sheet={[ AttendanceDetails.name + \" Thumbs\"]}\r\n                                                        buttonText=\"export\"\r\n                                                    />\r\n                                                    {/* <button className=''>export</button> */}\r\n                                                </div>\r\n\r\n                                                <table className=\"table table-sm mb-0\" id=\"table-to-xls\" ref={ref}>\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th className='d-none'>Employee ID</th>\r\n                                                            <th className='d-none'>Employee Name</th>\r\n                                                            <th>Locations</th>\r\n                                                            <th>Time</th>\r\n                                                            <th>Date</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            AttendanceDetails.thumbs.map(\r\n                                                                (val) => {\r\n                                                                    return (\r\n                                                                        <tr>\r\n                                                                            <td className='d-none'>{val.emp_id}</td>\r\n                                                                            <td className='d-none'>{AttendanceDetails.name}</td>\r\n                                                                            <td>{val.location_name}</td>\r\n                                                                            <td>{val.time}</td>\r\n                                                                            <td>{new Date(val.date).toDateString()}</td>\r\n                                                                        </tr>\r\n                                                                    )\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n\r\n                                                    </tbody>\r\n                                                    <tfoot className='d-none'>\r\n                                                        <tr>\r\n\r\n                                                            <th>Remarks</th>\r\n                                                            <td colSpan={5}>\r\n                                                                {\r\n                                                                    AttendanceDetails.logs.length === 0\r\n                                                                    ?\r\n                                                                    <p className='mb-0 text-center'> No Remarks </p>\r\n                                                                    :\r\n                                                                    AttendanceDetails.logs.map(\r\n                                                                        val => {\r\n                                                                            return (\r\n                                                                                <>\r\n                                                                                    <span>{ val.log }</span>\r\n                                                                                    <br />\r\n                                                                                </>\r\n                                                                            )\r\n                                                                        }\r\n                                                                    )\r\n                                                                }\r\n                                                            </td>\r\n\r\n                                                        </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n\r\n                                            </div>\r\n                                        : null\r\n                                }\r\n                                {\r\n                                    AttendanceDetails.attendance.length === 0\r\n                                        ? null\r\n                                        :\r\n                                        <div className='daily_att_details'>\r\n\r\n                                            <div className='d-flex align-items-center justify-content-between mb-3'>\r\n                                                <h6 className=\"font-weight-bolder\">Employee Attendance Details</h6>\r\n\r\n                                                <div className='togglebutton'>\r\n                                                    <div className=\"ClickDiv1\" onClick={ShowDetails} >\r\n                                                        <p className=\"mb-0\">Default</p>\r\n                                                    </div>\r\n                                                    <div className=\"ClickDiv2\" onClick={ShowEdit}>\r\n                                                        <p className=\"mb-0\">Edit</p>\r\n                                                    </div>\r\n                                                    <div className=\"HideDiv\">\r\n                                                        <p className=\"mb-0\">Default</p>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n\r\n                                            <div className='list'>\r\n\r\n                                                <table className=\"table table-sm mb-0\" id=\"table-to-xls\" ref={ref}>\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Time In</th>\r\n                                                            <th>Time Out</th>\r\n                                                            <th>Break In</th>\r\n                                                            <th>Break Out</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n\r\n                                                        {\r\n                                                            AttendanceDetails.attendance.map(\r\n                                                                (val, index) => {\r\n                                                                    return (\r\n                                                                        <tr>\r\n                                                                            <td>{val.time_in}</td>\r\n                                                                            <td>{val.time_out}</td>\r\n                                                                            <td>{val.break_in}</td>\r\n                                                                            <td>{val.break_out}</td>\r\n                                                                        </tr>\r\n                                                                    )\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n\r\n                                                    </tbody>\r\n                                                </table>\r\n\r\n                                            </div>\r\n\r\n\r\n                                            <div >\r\n                                                <form className='form' onSubmit={updateattendance} >\r\n                                                    <div className='d-flex w-100 mb-3'>\r\n                                                        <div className=\"w-100 px-1\">\r\n                                                            <label className=\"mb-0\">Current Time In</label>\r\n                                                            <input className=\"form-control form-control-sm bg-light\" type='text' name=\"\" disabled value={Attendance.time_in} style={{ marginBottom: '10px' }} fullWidth />\r\n                                                        </div>\r\n\r\n                                                        <div className=\"w-100 px-1\">\r\n                                                            <label className=\"mb-0\">New Time In</label>\r\n                                                            <input className=\"form-control form-control-sm bg-light\" type='time' onChange={changeNewTime} name=\"time_in\" style={{ marginBottom: '10px' }} fullWidth />\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='d-flex w-100 mb-3'>\r\n                                                        <div className=\"w-100 px-1\">\r\n                                                            <label className=\"mb-0\">Current Time Out</label>\r\n                                                            <input className=\"form-control form-control-sm bg-light\" type='text' name=\"\" disabled value={Attendance.time_out} style={{ marginBottom: '10px' }} fullWidth />\r\n                                                        </div>\r\n\r\n                                                        <div className=\"w-100 px-1\">\r\n                                                            <label className=\"mb-0\">New Time Out</label>\r\n                                                            <input className=\"form-control form-control-sm bg-light\" type='time' onChange={changeNewTime} name=\"time_out\" style={{ marginBottom: '10px' }} fullWidth />\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='d-flex w-100 mb-3'>\r\n                                                        <div className=\"w-100 px-1\">\r\n                                                            <label className=\"mb-0\">Current Break In</label>\r\n                                                            <input className=\"form-control form-control-sm bg-light\" type='text' name=\"\" disabled value={Attendance.break_in} style={{ marginBottom: '10px' }} fullWidth />\r\n                                                        </div>\r\n\r\n                                                        <div className=\"w-100 px-1\">\r\n                                                            <label className=\"mb-0\">New Break In</label>\r\n                                                            <input className=\"form-control form-control-sm bg-light\" type='time' onChange={changeNewTime} name=\"break_in\" style={{ marginBottom: '10px' }} fullWidth />\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='d-flex w-100 mb-3'>\r\n\r\n                                                        <div className=\"w-100 px-1\">\r\n                                                            <label className=\"mb-0\">Current Break Out</label>\r\n                                                            <input className=\"form-control form-control-sm bg-light\" type='text' name=\"\" disabled value={Attendance.break_out} style={{ marginBottom: '10px' }} fullWidth />\r\n                                                        </div>\r\n\r\n                                                        <div className=\"w-100 px-1\">\r\n                                                            <label className=\"mb-0\">New Break Out</label>\r\n                                                            <input className=\"form-control form-control-sm bg-light\" type='time' onChange={changeNewTime} name=\"break_out\" style={{ marginBottom: '10px' }} fullWidth />\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='d-flex align-items-center justify-content-end'>\r\n                                                        <button type='submit' >Update</button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n\r\n                                            <div className='my-2'>\r\n\r\n                                                <h6> Logs </h6>\r\n\r\n                                                <div className=\"my-3 logContainer\">\r\n                                                    {\r\n                                                        AttendanceDetails.logs.length === 0\r\n                                                        ?\r\n                                                        <p className='mb-0 text-center'> No Log Found </p>\r\n                                                        :\r\n                                                        AttendanceDetails.logs.map(\r\n                                                            val => {\r\n                                                                return (\r\n                                                                    <div key={ val.log_id } className=\"log\"> \r\n                                                                        <span style={ { textAlign: \"justify\" } }>{ val.log }</span>\r\n                                                                        <span className='d-block text-right'>{ new Date( val.log_date ).toDateString() } at { val.log_time }</span>\r\n                                                                    </div>\r\n                                                                )\r\n                                                            }\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default View_Emp_Attendance;"],"sourceRoot":""}