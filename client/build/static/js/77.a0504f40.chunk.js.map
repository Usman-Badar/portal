{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseOrder/Home/Home.jsx"],"names":["Home","props","CanvasJS","CanvasJSReact","CanvasJSChart","useState","DataSet","setDataSet","setEmpData","setTotalValue","useEffect","count","rejected","approved","waiting","sent","viewed","x","CountStatus","length","push","y","label","total","ViewRequest","parseFloat","EmpData","addColorSet","options","exportEnabled","animationEnabled","title","text","colorSet","data","type","startAngle","toolTipContent","showInLegend","legendText","indexLabelFontSize","indexLabel","dataPoints","className","CountRequests"],"mappings":"2KA+JeA,UA1JF,SAACC,GAEV,IAAMC,EAAWC,IAAcD,SACzBE,EAAgBD,IAAcC,cAEpC,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAA8BF,mBAAS,IAAvC,mBAAgBG,GAAhB,WAEA,EAAoCH,mBAAS,GAA7C,mBAAmBI,GAAnB,WAEAC,qBACI,WAWI,IARA,IAAIC,EAAQ,GACRC,EAAW,EACXC,EAAW,EACXC,EAAU,EACVC,EAAO,EACPC,EAAS,EAGJC,EAAI,EAAGA,EAAIhB,EAAMiB,YAAYC,OAAQF,IAEb,aAAzBhB,EAAMiB,YAAYD,KAClBL,GAAsB,GAM9B,IAAK,IAAIK,EAAI,EAAGA,EAAIhB,EAAMiB,YAAYC,OAAQF,IAEb,aAAzBhB,EAAMiB,YAAYD,KAClBJ,GAAsB,GAM9B,IAAK,IAAII,EAAI,EAAGA,EAAIhB,EAAMiB,YAAYC,OAAQF,IAEb,yBAAzBhB,EAAMiB,YAAYD,KAClBH,GAAoB,GAM5B,IAAK,IAAIG,EAAI,EAAGA,EAAIhB,EAAMiB,YAAYC,OAAQF,IAEb,SAAzBhB,EAAMiB,YAAYD,KAClBF,GAAc,GAMtB,IAAK,IAAIE,EAAI,EAAGA,EAAIhB,EAAMiB,YAAYC,OAAQF,IAEb,WAAzBhB,EAAMiB,YAAYD,KAClBD,GAAkB,GAK1BL,EAAMS,KACF,CAAEC,EAAGT,EAAUU,MAAO,YACtB,CAAED,EAAGR,EAAUS,MAAO,YACtB,CAAED,EAAGP,EAASQ,MAAO,WACrB,CAAED,EAAGN,EAAMO,MAAO,QAClB,CAAED,EAAGL,EAAQM,MAAO,WAExBf,EAAYI,KAGb,CAACV,EAAMiB,cAGdR,qBACI,WAGI,IADA,IAAIa,EAAQ,EACHN,EAAI,EAAGA,EAAIhB,EAAMuB,YAAYL,OAAQF,IAG1CM,GAAgBE,WAAYxB,EAAMuB,YAAYP,GAAGM,OAIrDd,EAAec,KAEhB,CAAEtB,EAAMuB,cAGfd,qBACI,WAEIF,EAAYP,EAAMyB,WAEnB,CAAEzB,EAAMyB,UAGfxB,EAASyB,YACL,eACA,CAEA,UACA,UACA,UACA,UACA,YAIJ,IAAMC,EAAU,CACZC,eAAe,EACfC,kBAAkB,EAClBC,MAAO,CACHC,KAAM,WAEVC,SAAU,eACVC,KAAM,CAAC,CACHC,KAAM,MACNC,WAAY,GACZC,eAAgB,uBAChBC,aAAc,OACdC,WAAY,UACZC,mBAAoB,GACpBC,WAAY,iBACZC,WAAYpC,KAIpB,OACI,qBAAKqC,UAAU,OAAf,SACI,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,uBAAOA,UAAU,iBAAjB,4BACA,qBAAIA,UAAU,qBAAd,UACK1C,EAAM2C,cADX,IAC0B,uBAAOD,UAAU,iBAAjB,wBAG9B,qBAAKA,UAAU,qBAAf,SACI,cAACvC,EAAD,CAAewB,QAAWA","file":"static/js/77.a0504f40.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport './Home.css';\r\nimport CanvasJSReact from '../../../../../../../canvasjs.react';\r\n\r\nconst Home = (props) => {\r\n\r\n    const CanvasJS = CanvasJSReact.CanvasJS;\r\n    const CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n    const [DataSet, setDataSet] = useState([]);\r\n\r\n    const [EmpData, setEmpData] = useState({});\r\n    \r\n    const [TotalValue, setTotalValue] = useState(0.00);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            // IMPORTANT VARIABLES\r\n            let count = [];\r\n            let rejected = 0;\r\n            let approved = 0;\r\n            let waiting = 0;\r\n            let sent = 0;\r\n            let viewed = 0;\r\n\r\n            // FOR REJECTED\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Rejected') {\r\n                    rejected = rejected + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR APPROVED\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Approved') {\r\n                    approved = approved + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR WAITING\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Waiting For Approval') {\r\n                    waiting = waiting + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR SENT\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Sent') {\r\n                    sent = sent + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR VIEWED\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Viewed') {\r\n                    viewed = viewed + 1;\r\n                }\r\n\r\n            }\r\n\r\n            count.push(\r\n                { y: rejected, label: 'rejected' },\r\n                { y: approved, label: 'approved' },\r\n                { y: waiting, label: 'waiting' },\r\n                { y: sent, label: 'sent' },\r\n                { y: viewed, label: 'viewed' }\r\n            )\r\n            setDataSet( count );\r\n\r\n\r\n        }, [props.CountStatus]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let total = 0.00;\r\n            for( let x = 0; x < props.ViewRequest.length; x++ )\r\n            {\r\n\r\n                total = total + parseFloat( props.ViewRequest[x].total );\r\n\r\n            }\r\n\r\n            setTotalValue( total );\r\n\r\n        }, [ props.ViewRequest ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setEmpData( props.EmpData );\r\n\r\n        }, [ props.EmpData ]\r\n    )\r\n\r\n    CanvasJS.addColorSet(\r\n        \"customShades\",\r\n        [//colorSet Array\r\n\r\n        \"#E7604A\",\r\n        \"#56CC82\",\r\n        \"#29C7CA\",\r\n        \"#5C6E9C\",\r\n        \"#5C6E9C\"             \r\n        ]\r\n    );\r\n\r\n    const options = {\r\n        exportEnabled: false,\r\n        animationEnabled: true,\r\n        title: {\r\n            text: \"Summery\"\r\n        },\r\n        colorSet: \"customShades\",\r\n        data: [{\r\n            type: \"pie\",\r\n            startAngle: 75,\r\n            toolTipContent: \"<b>{label}</b>: {y}%\",\r\n            showInLegend: \"true\",\r\n            legendText: \"{label}\",\r\n            indexLabelFontSize: 10,\r\n            indexLabel: \"{label} - {y}%\",\r\n            dataPoints: DataSet\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <div className=\"three\">\r\n                <div className=\"Calculate px-4\">\r\n                    <small className=\"text-secondary\">Total Requests</small>\r\n                    <h1 className=\"font-weight-bolder\">\r\n                        {props.CountRequests} <small className=\"text-secondary\">Sent</small>\r\n                    </h1>\r\n                </div>\r\n                <div className=\"RequestStatusChart\">\r\n                    <CanvasJSChart options = {options}\r\n                        /* onRef={ref => this.chart = ref} */\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"sourceRoot":""}