{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/Procurement/ViewPurchaseRequisition/Components/Home/Home.jsx"],"names":["Home","props","CanvasJS","CanvasJSReact","CanvasJSChart","useState","DataSet","setDataSet","requests","months","MonthlyRequests","setMonthlyRequests","RequestsSplit","setRequestsSplit","EmpData","setEmpData","TotalValue","setTotalValue","Resize","setResize","useEffect","count","rejected","approved","waiting","sent","viewed","x","CountStatus","length","push","y","label","arr","arr2","month","companies","data","ViewRequest","includes","company_name","filter","val","total","parseFloat","company","window","addEventListener","addColorSet","options","exportEnabled","animationEnabled","title","text","colorSet","type","startAngle","toolTipContent","showInLegend","legendText","indexLabelFontSize","indexLabel","dataPoints","className","CountRequests","Object","keys","access","JSON","parse","toLocaleString","map","index","style","fontSize","backgroundColor","borderRadius"],"mappings":"4JAoUeA,UA9TF,SAACC,GAEV,IAAMC,EAAWC,IAAcD,SACzBE,EAAgBD,IAAcC,cAEpC,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8CF,mBAC1C,CACIG,SAAU,GACVC,OAAQ,KAHhB,mBAAOC,EAAP,KAAwBC,EAAxB,KAMA,EAA0CN,mBAAS,IAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KAEA,EAA8BR,mBAAS,IAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KAEA,EAAoCV,mBAAS,GAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAA4BZ,oBAAS,GAArC,mBAAOa,EAAP,KAAeC,EAAf,KAEAC,qBACI,WAWI,IARA,IAAIC,EAAQ,GACRC,EAAW,EACXC,EAAW,EACXC,EAAU,EACVC,EAAO,EACPC,EAAS,EAGJC,EAAI,EAAGA,EAAI1B,EAAM2B,YAAYC,OAAQF,IAEb,aAAzB1B,EAAM2B,YAAYD,KAClBL,GAAsB,GAM9B,IAAK,IAAIK,EAAI,EAAGA,EAAI1B,EAAM2B,YAAYC,OAAQF,IAEb,aAAzB1B,EAAM2B,YAAYD,KAClBJ,GAAsB,GAM9B,IAAK,IAAII,EAAI,EAAGA,EAAI1B,EAAM2B,YAAYC,OAAQF,IAEb,yBAAzB1B,EAAM2B,YAAYD,KAClBH,GAAoB,GAM5B,IAAK,IAAIG,EAAI,EAAGA,EAAI1B,EAAM2B,YAAYC,OAAQF,IAEb,SAAzB1B,EAAM2B,YAAYD,KAClBF,GAAc,GAMtB,IAAK,IAAIE,EAAI,EAAGA,EAAI1B,EAAM2B,YAAYC,OAAQF,IAEb,WAAzB1B,EAAM2B,YAAYD,KAClBD,GAAkB,GAK1BL,EAAMS,KACF,CAAEC,EAAGT,EAAUU,MAAO,YACtB,CAAED,EAAGR,EAAUS,MAAO,YACtB,CAAED,EAAGP,EAASQ,MAAO,WACrB,CAAED,EAAGN,EAAMO,MAAO,QAClB,CAAED,EAAGL,EAAQM,MAAO,WAExBzB,EAAYc,KAEb,CAAEpB,EAAM2B,YAAaV,IAG5BE,qBACI,WAKI,IAHA,IAAIa,EAAM,GACNC,EAAO,GAEDP,EAAI,EAAGA,EAAI1B,EAAMS,gBAAgBmB,OAAQF,IAE/CM,EAAIH,KAAM7B,EAAMS,gBAAgBiB,GAAGN,OACnCa,EAAKJ,KAAM7B,EAAMS,gBAAgBiB,GAAGQ,OAGxCxB,EAAmB,2BAERD,GAFO,IAGVF,SAAUyB,EACVxB,OAAQyB,OAIjB,CAAEjC,EAAMS,kBAGfU,qBACI,WAII,IAFA,IAAIgB,EAAY,GACZC,EAAO,GACDV,EAAI,EAAGA,EAAI1B,EAAMqC,YAAYT,OAAQF,IAErCS,EAAUG,SAAUtC,EAAMqC,YAAYX,GAAGa,eAE3CJ,EAAUN,KAAM7B,EAAMqC,YAAYX,GAAGa,cAI7C,IAZE,eAYQb,GAWN,IATA,IAAIM,EAAMhC,EAAMqC,YAAYG,QACxB,SAAEC,GAEE,OAAOA,EAAIF,eAAiBJ,EAAUT,MAK1CgB,EAAQ,EACHhB,EAAI,EAAGA,EAAIM,EAAIJ,OAAQF,IAG5BgB,GAAgBC,WAAYX,EAAIN,GAAGgB,OAIvCN,EAAKP,KACD,CACIe,QAAST,EAAUT,GACnBN,MAAOY,EAAIJ,OACXc,MAAOA,KAtBThB,EAAI,EAAGA,EAAIS,EAAUP,OAAQF,IACtC,EADSA,GA2BVd,EAAkBwB,GAGlB,IADA,IAAIM,EAAQ,EACHhB,EAAI,EAAGA,EAAI1B,EAAMqC,YAAYT,OAAQF,IAG1CgB,GAAgBC,WAAY3C,EAAMqC,YAAYX,GAAGgB,OAIrD1B,EAAe0B,KAEhB,CAAE1C,EAAMqC,cAGflB,qBACI,WAEIL,EAAYd,EAAMa,SAElBgC,OAAOC,iBACH,UAAU,WAEN5B,GAAYD,QAKrB,CAAEjB,EAAMa,UAGfZ,EAAS8C,YACL,eACA,CAEA,UACA,UACA,UACA,UACA,YAIJ,IAAMC,EAAU,CACZC,eAAe,EACfC,kBAAkB,EAClBC,MAAO,CACHC,KAAM,WAEVC,SAAU,eACVjB,KAAM,CAAC,CACHkB,KAAM,MACNC,WAAY,GACZC,eAAgB,uBAChBC,aAAc,OACdC,WAAY,UACZC,mBAAoB,GACpBC,WAAY,iBACZC,WAAYxD,KAIpB,OACI,sBAAKyD,UAAU,OAAf,UACI,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,uBAAOA,UAAU,iBAAjB,4BACA,qBAAIA,UAAU,qBAAd,UACK9D,EAAM+D,cADX,IAC0B,uBAAOD,UAAU,iBAAjB,yBAGU,IAAhCE,OAAOC,KAAKpD,GAASe,OAErB,KAEAf,EAAQqD,SAASC,KAAKC,MAAMvD,EAAQqD,QAAQ5B,SAAS,MAAQ6B,KAAKC,MAAMvD,EAAQqD,QAAQ5B,SAAS,IAE7F,qCACI,uBAAOwB,UAAU,iBAAjB,4BACA,qBAAIA,UAAU,qBAAd,UACM/C,EAAWsD,eAAe,SADhC,IAC2C,uBAAOP,UAAU,iBAAjB,6BAMnD,QAGR,qBAAKA,UAAU,qBAAf,SACI,cAAC3D,EAAD,CAAe6C,QAAWA,MAI9B,qBAAKc,UAAU,+BAAf,SAEQnD,EAAc2D,KACV,SAAE7B,EAAK8B,GAEH,OACI,sBACIT,UAAU,QACVU,MACI,CACIC,SAAU,QAJtB,UASI,sBAAKX,UAAU,mBAAf,UAEQrB,EAAIG,QAFZ,OAKA,sBAAKkB,UAAU,oDAAf,UACI,gCAEQrB,EAAIrB,MAFZ,IAGM,8CAEN,sCAEI,uBAAM0C,UAAU,OAAhB,UAEQrB,EAAIC,MAFZ,iBAfF6B,WA8BlC,qBACIC,MACI,CACIE,gBAAiB,OACjBC,aAAc,c","file":"static/js/89.26c13581.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport './Home.css';\r\nimport CanvasJSReact from '../../../../../../../../canvasjs.react';\r\n\r\nconst Home = (props) => {\r\n\r\n    const CanvasJS = CanvasJSReact.CanvasJS;\r\n    const CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n    const [DataSet, setDataSet] = useState([]);\r\n    const [MonthlyRequests, setMonthlyRequests] = useState(\r\n        {\r\n            requests: [],\r\n            months: []\r\n        }\r\n    );\r\n    const [RequestsSplit, setRequestsSplit] = useState([]);\r\n\r\n    const [EmpData, setEmpData] = useState({});\r\n    \r\n    const [TotalValue, setTotalValue] = useState(0.00);\r\n    const [Resize, setResize] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            // IMPORTANT VARIABLES\r\n            let count = [];\r\n            let rejected = 0;\r\n            let approved = 0;\r\n            let waiting = 0;\r\n            let sent = 0;\r\n            let viewed = 0;\r\n\r\n            // FOR REJECTED\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Rejected') {\r\n                    rejected = rejected + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR APPROVED\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Approved') {\r\n                    approved = approved + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR WAITING\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Waiting For Approval') {\r\n                    waiting = waiting + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR SENT\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Sent') {\r\n                    sent = sent + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR VIEWED\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Viewed') {\r\n                    viewed = viewed + 1;\r\n                }\r\n\r\n            }\r\n\r\n            count.push(\r\n                { y: rejected, label: 'rejected' },\r\n                { y: approved, label: 'approved' },\r\n                { y: waiting, label: 'waiting' },\r\n                { y: sent, label: 'sent' },\r\n                { y: viewed, label: 'viewed' }\r\n            )\r\n            setDataSet( count );\r\n\r\n        }, [ props.CountStatus, Resize ]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let arr = [];\r\n            let arr2 = [];\r\n\r\n            for ( let x = 0; x < props.MonthlyRequests.length; x++ )\r\n            {\r\n                arr.push( props.MonthlyRequests[x].count );\r\n                arr2.push( props.MonthlyRequests[x].month );\r\n            }\r\n\r\n            setMonthlyRequests(\r\n                {\r\n                    ...MonthlyRequests,\r\n                    requests: arr,\r\n                    months: arr2\r\n                }\r\n            )\r\n\r\n        }, [ props.MonthlyRequests ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let companies = [];\r\n            let data = [];\r\n            for ( let x = 0; x < props.ViewRequest.length; x++ )\r\n            {\r\n                if ( !companies.includes( props.ViewRequest[x].company_name ) )\r\n                {\r\n                    companies.push( props.ViewRequest[x].company_name );\r\n                }\r\n            }\r\n\r\n            for ( let x = 0; x < companies.length; x++ )\r\n            {\r\n                let arr = props.ViewRequest.filter(\r\n                    ( val ) => {\r\n\r\n                        return val.company_name === companies[x];\r\n\r\n                    }\r\n                );\r\n\r\n                let total = 0.00;\r\n                for( let x = 0; x < arr.length; x++ )\r\n                {\r\n\r\n                    total = total + parseFloat( arr[x].total );\r\n\r\n                }\r\n\r\n                data.push(\r\n                    {\r\n                        company: companies[x],\r\n                        count: arr.length,\r\n                        total: total\r\n                    }\r\n                )\r\n            }\r\n\r\n            setRequestsSplit( data );\r\n\r\n            let total = 0.00;\r\n            for( let x = 0; x < props.ViewRequest.length; x++ )\r\n            {\r\n\r\n                total = total + parseFloat( props.ViewRequest[x].total );\r\n\r\n            }\r\n\r\n            setTotalValue( total );\r\n\r\n        }, [ props.ViewRequest ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setEmpData( props.EmpData );\r\n\r\n            window.addEventListener(\r\n                'resize', () => {\r\n\r\n                    setResize( !Resize );\r\n                    \r\n                }\r\n            )\r\n\r\n        }, [ props.EmpData ]\r\n    )\r\n\r\n    CanvasJS.addColorSet(\r\n        \"customShades\",\r\n        [//colorSet Array\r\n\r\n        \"#E7604A\",\r\n        \"#56CC82\",\r\n        \"#29C7CA\",\r\n        \"#5C6E9C\",\r\n        \"#5C6E9C\"             \r\n        ]\r\n    );\r\n\r\n    const options = {\r\n        exportEnabled: false,\r\n        animationEnabled: true,\r\n        title: {\r\n            text: \"Summery\"\r\n        },\r\n        colorSet: \"customShades\",\r\n        data: [{\r\n            type: \"pie\",\r\n            startAngle: 75,\r\n            toolTipContent: \"<b>{label}</b>: {y}%\",\r\n            showInLegend: \"true\",\r\n            legendText: \"{label}\",\r\n            indexLabelFontSize: 10,\r\n            indexLabel: \"{label} - {y}%\",\r\n            dataPoints: DataSet\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <div className=\"three\">\r\n                <div className=\"Calculate px-4\">\r\n                    <small className=\"text-secondary\">Total Requests</small>\r\n                    <h3 className=\"font-weight-bolder\">\r\n                        {props.CountRequests} <small className=\"text-secondary\">Received</small>\r\n                    </h3>\r\n                    {\r\n                        Object.keys(EmpData).length === 0\r\n                        ?\r\n                        null\r\n                        :\r\n                        EmpData.access ? JSON.parse(EmpData.access).includes(522) || JSON.parse(EmpData.access).includes(1)\r\n                        ?\r\n                            <>\r\n                                <small className=\"text-secondary\">Total Value Rs</small>\r\n                                <h3 className=\"font-weight-bolder\">\r\n                                    { TotalValue.toLocaleString('en-US') } <small className=\"text-secondary\">Estimated</small>\r\n                                </h3>\r\n                            </>\r\n                            :\r\n                            null\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <div className=\"RequestStatusChart\">\r\n                    <CanvasJSChart options = {options}\r\n                        /* onRef={ref => this.chart = ref} */\r\n                    />\r\n                </div>\r\n                <div className=\"RequestStatusChart py-4 px-3\">\r\n                    {\r\n                        RequestsSplit.map(\r\n                            ( val, index ) => {\r\n\r\n                                return (\r\n                                    <div \r\n                                        className=\" mb-3\"\r\n                                        style={\r\n                                            {\r\n                                                fontSize: '13px'\r\n                                            }\r\n                                        }\r\n                                        key={ index }\r\n                                    >\r\n                                        <div className=\"font-weight-bold\">\r\n                                            {\r\n                                                val.company\r\n                                            }: \r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center justify-content-between\"> \r\n                                            <div>\r\n                                                {\r\n                                                    val.count\r\n                                                } <sub>Requests</sub>\r\n                                            </div>\r\n                                            <div>\r\n                                                PKR \r\n                                                <span className=\"ml-2\">\r\n                                                    {\r\n                                                        val.total\r\n                                                    } /-\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n\r\n                            }\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div\r\n                style={\r\n                    {\r\n                        backgroundColor: \"#fff\",\r\n                        borderRadius: '5px'\r\n                    }\r\n                }\r\n            >\r\n                {/* <Line\r\n                    width='100px'\r\n                    height='40px'\r\n                    maintainAspectRatio={ false }\r\n                    data={\r\n                        {\r\n                            labels: MonthlyRequests.months,\r\n                            datasets: [\r\n                                {\r\n                                    id: 1,\r\n                                    label: 'Monthly Received Requests',\r\n                                    data: MonthlyRequests.requests,\r\n                                    borderColor: '#F14B71'\r\n                                }\r\n                            ],\r\n                        }\r\n                    }\r\n                /> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"sourceRoot":""}