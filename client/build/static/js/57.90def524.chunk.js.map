{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/EmployeeProtal/Dashboard/Pages/Forms/EmployementSetup/ViewTempEmployee/ConfirmApproval/ConfirmApproval.jsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","ConfirmApproval","history","useHistory","encryptor","require","useState","Employee","setEmployee","Departments","setDepartments","Designations","setDesignations","Companies","setCompanies","Locations","setLocations","Grades","setGrades","EmpAccess","setEmpAccess","AccessAssigned","setAccessAssigned","EmployeeCode","setEmployeeCode","additionalOFF","departments","Location","TimeOUT","TimeIN","CnfPassword","EmpPassword","LoginID","empID","CompanyName","doj","salary","EmpGrade","EmpData","setEmpData","AdditionalOffDays","setAdditionalOffDays","useEffect","Data","FormData","append","window","location","href","split","pop","axios","post","then","response","data","catch","err","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","get","OnChangeHandler","e","target","name","value","setValues","encrypt","parseInt","emp_id","toString","$","prop","filter","val","index","x","length","push","access_id","className","onSubmit","preventDefault","decrypt","JSON","stringify","replace","onChange","required","map","company_code","company_name","type","readOnly","grade_code","grade","minLength","location_code","location_name","department_code","department_name","designation_code","designation_name","placeholder","pattern","style"],"mappings":"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","file":"static/js/57.90def524.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport './ConfirmApproval.css';\r\nimport axios from '../../../../../../../../axios';\r\nimport $ from 'jquery';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst ConfirmApproval = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    let key = 'real secret keys should be long and random';\r\n    const encryptor = require('simple-encryptor')(key);\r\n\r\n    const [ Employee, setEmployee ] = useState([]);\r\n    const [ Departments, setDepartments ] = useState([]);\r\n    const [ Designations, setDesignations ] = useState([]);\r\n    const [ Companies, setCompanies ] = useState([]);\r\n    const [ Locations, setLocations ] = useState([]);\r\n    const [ Grades, setGrades ] = useState([]);\r\n    const [ EmpAccess, setEmpAccess ] = useState([]);\r\n    const [ AccessAssigned, setAccessAssigned ] = useState([]);\r\n\r\n    const [ EmployeeCode, setEmployeeCode ] = useState();\r\n    const [ EmpData, setEmpData ] = useState(\r\n        {\r\n            additionalOFF: '', Designations: '', departments: '', Location: '',\r\n            TimeOUT: '', TimeIN: '', CnfPassword: '', EmpPassword: '',\r\n            LoginID: '', empID: '', CompanyName: '', doj: '', salary: '', EmpGrade: ''\r\n        }\r\n    )\r\n    const [ AdditionalOffDays, setAdditionalOffDays ] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            const Data = new FormData();\r\n            Data.append('empID', window.location.href.split('/').pop());\r\n            axios.post('/gettempemployeedetails', Data).then( response => {\r\n\r\n                setEmployee( response.data );\r\n\r\n            } ).catch( err => {\r\n\r\n                toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n            } );\r\n\r\n            axios.get('/getcompaniescodes').then( response => {\r\n\r\n                setCompanies( response.data );\r\n\r\n            } ).catch( err => {\r\n\r\n                toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n            } );\r\n\r\n            axios.get('/getalldepartments').then( response => {\r\n\r\n                setDepartments( response.data );\r\n\r\n            } ).catch( err => {\r\n\r\n                toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n            } );\r\n\r\n            axios.get('/getalllocations').then( response => {\r\n\r\n                setLocations( response.data );\r\n\r\n            } ).catch( err => {\r\n\r\n                toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n            } );\r\n\r\n            axios.get('/getallaccess').then( response => {\r\n\r\n                setEmpAccess( response.data );\r\n\r\n            } ).catch( err => {\r\n\r\n                toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n            } );\r\n\r\n            axios.get('/getallgrades').then( response => {\r\n\r\n                setGrades( response.data );\r\n\r\n            } ).catch( err => {\r\n\r\n                toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n            } );\r\n\r\n        }, []\r\n    );\r\n\r\n    // Call on change function to store input field data into usestate()\r\n    const OnChangeHandler = ( e ) => {\r\n\r\n        const { name, value } = e.target;\r\n\r\n        if ( name === 'EmpPassword' || name === 'CnfPassword' || name === 'LoginID' )\r\n        {\r\n\r\n            const setValues = {\r\n                ...EmpData,\r\n                [name]: encryptor.encrypt( value )\r\n            }\r\n    \r\n            setEmpData(setValues);\r\n\r\n        }else\r\n        {\r\n            const setValues = {\r\n                ...EmpData,\r\n                [name]: value\r\n            }\r\n    \r\n            setEmpData(setValues);\r\n        }\r\n\r\n        if ( name === 'CompanyName' )\r\n        {\r\n\r\n            const Data = new FormData();\r\n            Data.append('CompanyCode', value);\r\n            axios.post('/getcompany', Data).then(response => {\r\n    \r\n                if( response.data[0] )\r\n                {\r\n                    let empID = parseInt( response.data[0].emp_id ) + 1;\r\n                    setEmployeeCode( empID.toString() );\r\n                }else\r\n                {\r\n                    setEmployeeCode( value + '00' );\r\n                }\r\n    \r\n            }).catch(err => {\r\n    \r\n                toast.dark(err, {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n    \r\n            });\r\n\r\n        }\r\n\r\n        if ( name === 'departments' )\r\n        {\r\n\r\n            const Data = new FormData();\r\n            Data.append('departID', value);\r\n            axios.post('/getdesignations', Data).then(response => {\r\n    \r\n                setDesignations(response.data);\r\n    \r\n            }).catch(err => {\r\n    \r\n                toast.dark(err, {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n    \r\n            });\r\n\r\n        }\r\n\r\n        if ( name === 'additionalOffDays' )\r\n        {\r\n            if ( $(\"input[name='additionalOffDays'][value='\" + value + \"']\").prop('checked') === true )\r\n            {\r\n                setAdditionalOffDays( [ ...AdditionalOffDays, value ] );\r\n            }else\r\n            {\r\n                setAdditionalOffDays(\r\n                    AdditionalOffDays.filter(\r\n                        (val, index, arr) => {\r\n                            return val !== value;\r\n                        }\r\n                    )\r\n                );\r\n            }\r\n        }\r\n\r\n        if ( name === 'access' )\r\n        {\r\n\r\n            if ( $(\"input[name='access'][value='\" + value + \"']\").prop('checked') )\r\n            {\r\n\r\n                setAccessAssigned( [ ...AccessAssigned, parseInt( value ) ] );\r\n\r\n            }else\r\n            {\r\n                setAccessAssigned(\r\n                    AccessAssigned.filter(\r\n                        (val, index, arr) => {\r\n                            return val !== parseInt( value );\r\n                        }\r\n                    )\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        if ( name === 'checkallaccess' )\r\n        {\r\n\r\n            if ( $(\"input[name='checkallaccess']\").prop('checked') )\r\n            {\r\n\r\n                let data = [];\r\n                for( let x = 0; x < EmpAccess.length; x++ )\r\n                {\r\n                    data.push( EmpAccess[x].access_id );\r\n                }\r\n\r\n                setAccessAssigned( data );\r\n                $(\"input[type='checkbox']\").prop('checked', true);\r\n\r\n            }else\r\n            {\r\n                setAccessAssigned( [] );\r\n                $(\"input[type='checkbox']\").prop('checked', false);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const OnSetupEmployee = ( e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if ( encryptor.decrypt( EmpData.EmpPassword ) === encryptor.decrypt( EmpData.CnfPassword ) )\r\n        {\r\n            let arr = [];\r\n            arr.push( EmpData );\r\n            arr.push( Employee[0] );\r\n            arr.push( JSON.stringify( AdditionalOffDays ) );\r\n            arr.push( EmployeeCode );\r\n            arr.push( JSON.stringify( AccessAssigned ) );\r\n        \r\n            axios.post('/createemployee', arr).then( () => {\r\n\r\n                history.replace('/employment_setup/requests');\r\n\r\n            } ).catch( err => {\r\n\r\n                toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n            } );\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='ConfirmApproval d-center'>\r\n                <div className=\"ConfirmApproval-content\">\r\n                    <div className=\"container-fluid\">\r\n                        <h2>Employee Profile</h2>\r\n                        <form onSubmit={ OnSetupEmployee }>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <span>Company Name</span>\r\n                                <select className=\"form-control\" name=\"CompanyName\" onChange={ OnChangeHandler } required>\r\n                                    <option value=''>Select an option</option>\r\n                                    {\r\n                                        Companies.map(\r\n                                            ( val, index ) => {\r\n\r\n                                                return (\r\n                                                    <option key={ index } value={ val.company_code }> { val.company_name } </option>\r\n                                                )\r\n\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <span>Employee ID</span>\r\n                                <input type=\"text\" className=\"form-control\" name=\"empID\" value={ EmployeeCode } readOnly required />\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <span>Employee Grade</span>\r\n                                <select className=\"form-control\" name=\"EmpGrade\" onChange={ OnChangeHandler } required>\r\n                                    <option value=''>Select an option</option>\r\n                                    {\r\n                                        Grades.map(\r\n                                            ( val, index ) => {\r\n\r\n                                                return (\r\n                                                    <option key={ index } value={ val.grade_code }> { val.grade } </option>\r\n                                                )\r\n\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <span>Login ID</span>\r\n                                <input type=\"text\" className=\"form-control\" name=\"LoginID\" onChange={ OnChangeHandler } minLength=\"3\" required />\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <span>Password</span>\r\n                                <input type=\"password\" className=\"form-control\" name=\"EmpPassword\" onChange={ OnChangeHandler } minLength=\"3\" required />\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <span>Confirm Password</span>\r\n                                <input type=\"password\" className=\"form-control\" name=\"CnfPassword\" onChange={ OnChangeHandler } minLength=\"3\" required />\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"w-50 mr-1\">\r\n                                        <span>TimeIN</span>\r\n                                        <select className=\"form-control\" name=\"TimeIN\" onChange={ OnChangeHandler } required>\r\n                                            <option value=''>Select an option</option>\r\n                                            <option value='05:00 AM'>05:00 AM</option>\r\n                                            <option value='05:30 AM'>05:30 AM</option>\r\n                                            <option value='06:00 AM'>06:00 AM</option>\r\n                                            <option value='06:30 AM'>06:30 AM</option>\r\n                                            <option value='07:00 AM'>07:00 AM</option>\r\n                                            <option value='07:30 AM'>07:30 AM</option>\r\n                                            <option value='08:00 AM'>08:00 AM</option>\r\n                                            <option value='08:30 AM'>08:30 AM</option>\r\n                                            <option value='09:00 AM'>09:00 AM</option>\r\n                                            <option value='09:30 AM'>09:30 AM</option>\r\n                                            <option value='10:00 AM'>10:00 AM</option>\r\n                                            <option value='10:30 AM'>10:30 AM</option>\r\n                                            <option value='11:00 AM'>11:00 AM</option>\r\n                                            <option value='11:30 AM'>11:30 AM</option>\r\n                                            <option value='12:00 PM'>12:00 PM</option>\r\n                                            <option value='12:30 PM'>12:30 PM</option>\r\n                                            <option value='01:00 PM'>01:00 PM</option>\r\n                                            <option value='01:30 PM'>01:30 PM</option>\r\n                                            <option value='02:00 PM'>02:00 PM</option>\r\n                                            <option value='02:30 PM'>02:30 PM</option>\r\n                                            <option value='03:00 PM'>03:00 PM</option>\r\n                                            <option value='03:30 PM'>03:30 PM</option>\r\n                                            <option value='04:00 PM'>04:00 PM</option>\r\n                                            <option value='04:30 PM'>04:30 PM</option>\r\n                                            <option value='05:00 PM'>05:00 PM</option>\r\n                                            <option value='05:30 PM'>05:30 PM</option>\r\n                                            <option value='06:00 PM'>06:00 PM</option>\r\n                                            <option value='06:30 PM'>06:30 PM</option>\r\n                                            <option value='07:00 PM'>07:00 PM</option>\r\n                                            <option value='07:30 PM'>07:30 PM</option>\r\n                                            <option value='08:00 PM'>08:00 PM</option>\r\n                                            <option value='08:30 PM'>08:30 PM</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"w-50 ml-1\">\r\n                                        <span>TimeOUT</span>\r\n                                        <select className=\"form-control\" name=\"TimeOUT\" onChange={ OnChangeHandler } required>\r\n                                            <option value=''>Select an option</option>\r\n                                            <option value='05:00 AM'>05:00 AM</option>\r\n                                            <option value='05:30 AM'>05:30 AM</option>\r\n                                            <option value='06:00 AM'>06:00 AM</option>\r\n                                            <option value='06:30 AM'>06:30 AM</option>\r\n                                            <option value='07:00 AM'>07:00 AM</option>\r\n                                            <option value='07:30 AM'>07:30 AM</option>\r\n                                            <option value='08:00 AM'>08:00 AM</option>\r\n                                            <option value='08:30 AM'>08:30 AM</option>\r\n                                            <option value='09:00 AM'>09:00 AM</option>\r\n                                            <option value='09:30 AM'>09:30 AM</option>\r\n                                            <option value='10:00 AM'>10:00 AM</option>\r\n                                            <option value='10:30 AM'>10:30 AM</option>\r\n                                            <option value='11:00 AM'>11:00 AM</option>\r\n                                            <option value='11:30 AM'>11:30 AM</option>\r\n                                            <option value='12:00 PM'>12:00 PM</option>\r\n                                            <option value='12:30 PM'>12:30 PM</option>\r\n                                            <option value='01:00 PM'>01:00 PM</option>\r\n                                            <option value='01:30 PM'>01:30 PM</option>\r\n                                            <option value='02:00 PM'>02:00 PM</option>\r\n                                            <option value='02:30 PM'>02:30 PM</option>\r\n                                            <option value='03:00 PM'>03:00 PM</option>\r\n                                            <option value='03:30 PM'>03:30 PM</option>\r\n                                            <option value='04:00 PM'>04:00 PM</option>\r\n                                            <option value='04:30 PM'>04:30 PM</option>\r\n                                            <option value='05:00 PM'>05:00 PM</option>\r\n                                            <option value='05:30 PM'>05:30 PM</option>\r\n                                            <option value='06:00 PM'>06:00 PM</option>\r\n                                            <option value='06:30 PM'>06:30 PM</option>\r\n                                            <option value='07:00 PM'>07:00 PM</option>\r\n                                            <option value='07:30 PM'>07:30 PM</option>\r\n                                            <option value='08:00 PM'>08:00 PM</option>\r\n                                            <option value='08:30 PM'>08:30 PM</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <span>Location</span>\r\n                                <select className=\"form-control\" name=\"Location\" onChange={ OnChangeHandler } required>\r\n                                    <option value=''>Select an option</option>\r\n                                    {\r\n                                        Locations.map(\r\n                                            ( val, index ) => {\r\n\r\n                                                return (\r\n                                                    <option key={ index } value={ val.location_code }> { val.location_name } </option>\r\n                                                )\r\n\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <span>Department</span>\r\n                                <select className=\"form-control\" name=\"departments\" onChange={ OnChangeHandler } required>\r\n                                    <option value=''>Select an option</option>\r\n                                    {\r\n                                        Departments.map(\r\n                                            ( val, index ) => {\r\n\r\n                                                return (\r\n                                                    <option key={ index } value={ val.department_code }> { val.department_name } </option>\r\n                                                )\r\n\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <span>Designation</span>\r\n                                <select className=\"form-control\" name=\"Designations\" onChange={ OnChangeHandler } required>\r\n                                    <option value=''>Select an option</option>\r\n                                    {\r\n                                        Designations.map(\r\n                                            ( val, index ) => {\r\n\r\n                                                return (\r\n                                                    <option key={ index } value={ val.designation_code }> { val.designation_name } </option>\r\n                                                )\r\n\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <span>Date Of Joining</span>\r\n                                <input type=\"date\" className=\"form-control\" name=\"doj\" onChange={ OnChangeHandler } required />\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <span>Salary</span>\r\n                                <input placeholder=\"Rs\" type=\"text\" pattern=\"^[0-9]+$\" className=\"form-control\" name=\"salary\" onChange={ OnChangeHandler } required />\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                <span>Additional Off</span>\r\n                                <select className=\"form-control\" name=\"additionalOFF\" onChange={ OnChangeHandler }>\r\n                                    <option value=''>Select an option</option>\r\n                                    <option value='yes'>Yes</option>\r\n                                    <option value='No'>No</option>\r\n                                </select>\r\n                            </div>\r\n                            {\r\n                                EmpData.additionalOFF === 'yes'\r\n                                ?\r\n                                    <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">\r\n                                        <b>Select Days</b>\r\n                                        <div className=\"d-flex align-items-center w-100\">\r\n                                            <div className=\" w-50\">\r\n                                                <input type=\"checkbox\" name=\"additionalOffDays\" onChange={ OnChangeHandler } value=\"Monday\" /> Monday <br />\r\n                                                <input type=\"checkbox\" name=\"additionalOffDays\" onChange={ OnChangeHandler } value=\"Tuesday\" /> Tuesday <br />\r\n                                                <input type=\"checkbox\" name=\"additionalOffDays\" onChange={ OnChangeHandler } value=\"Wednessday\" /> Wednessday <br />\r\n                                            </div>\r\n                                            <div className=\" w-50\">\r\n                                                <input type=\"checkbox\" name=\"additionalOffDays\" onChange={ OnChangeHandler } value=\"Thursday\" /> Thursday <br />\r\n                                                <input type=\"checkbox\" name=\"additionalOffDays\" onChange={ OnChangeHandler } value=\"Friday\" /> Friday <br />\r\n                                                <input type=\"checkbox\" name=\"additionalOffDays\" onChange={ OnChangeHandler } value=\"Saturday\" /> Saturday <br />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                :\r\n                                null\r\n                            }\r\n                            {/* <div className=\"col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div>\r\n                                        <span>Assign employee some access (optional):</span>    \r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" name=\"checkallaccess\" onChange={ OnChangeHandler } /> Check All\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"empAccess\">\r\n                                {\r\n                                    EmpAccess.map(\r\n                                        ( val, index ) => {\r\n                                            return (\r\n                                                <div key={ index } className=\"empAccess-Items\">\r\n                                                    <input type=\"checkbox\" name=\"access\" value={ val.access_id } onChange={ OnChangeHandler } /> { val.access_title }\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 mb-3 text-center\">\r\n                                <button type=\"submit\" className=\"btn btn-dark px-4\" style={ { 'borderRadius' : '30px' } }>Create Employee</button>\r\n                            </div>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ConfirmApproval;"],"sourceRoot":""}