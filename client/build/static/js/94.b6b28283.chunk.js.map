{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/Store/Inventory_requests/UI.jsx"],"names":["UI","StartLoading","Requests","Details","Comments","OpenRequest","newComment","CloseRequest","issueToInventory","className","DetailsContainer","details","specifications","List","CommentBox","onClick","$","toggleClass","length","id","map","val","parseInt","sender_id","sessionStorage","getItem","name","comment","Date","send_date","toDateString","send_time","onSubmit","required","type","sender_name","request_date","request_time","receiver_name","accept_date","accept_time","index","src","preview","alt","description","assigned_quantity","issued","onDoubleClick","request_id","title","display","styling","zIndex","position","icon","LoadingIcon","txt","sender_image","sender_designation","accepted_by"],"mappings":"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","file":"static/js/94.b6b28283.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Style.css';\r\n\r\nimport $ from 'jquery';\r\n\r\n// CUSTOM LOADING COMPONENT\r\nimport Loading from '../../../../../UI/Loading/Loading';\r\nimport LoadingIcon from '../../../../../../images/loadingIcons/icons8-loading-circle.gif';\r\n\r\nconst UI = ( { StartLoading, Requests, Details, Comments, OpenRequest, newComment, CloseRequest, issueToInventory } ) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"inventory_requests_page\">\r\n                \r\n                <div className=\"left requests request_details\">\r\n\r\n                    <h2>Inventory Requests</h2>\r\n                    <hr />\r\n\r\n                    {\r\n                        Details\r\n                        ?\r\n                        <DetailsContainer\r\n                            details={ Details[0][0] }\r\n                            specifications={ Details[1] }\r\n                            Comments={ Comments }\r\n                            Details={ Details }\r\n\r\n                            newComment={ newComment }\r\n                            issueToInventory={ issueToInventory }\r\n                            CloseRequest={ CloseRequest }\r\n                        />\r\n                        :\r\n                        <List\r\n                            Requests={ Requests }\r\n                            StartLoading={ StartLoading }\r\n\r\n                            OpenRequest={ OpenRequest }\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default UI;\r\n\r\nconst CommentBox = ( { Comments, newComment } ) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='commentBox not_fixed'>\r\n                <div className='header' onClick={ () => $('.commentBox').toggleClass('open') }>\r\n                    Comment Section\r\n\r\n                    {\r\n                        Comments.length === 0\r\n                        ?null\r\n                        :\r\n                        <span className='counting'>\r\n                            { Comments.length }\r\n                        </span>\r\n                    }\r\n                </div>\r\n                <div className='comments_content' id=\"comments_content\">\r\n\r\n                    {\r\n                        Comments.length === 0\r\n                        ?\r\n                        <div className='text-center'>No Comments</div>\r\n                        :\r\n                        Comments.map(\r\n                            val => {\r\n\r\n                                return (\r\n                                    <div className={ parseInt( val.sender_id ) === parseInt(sessionStorage.getItem('EmpID')) ? 'comment mine' : 'comment' }>\r\n                                        <small className={ parseInt( val.sender_id ) === parseInt(sessionStorage.getItem('EmpID')) ? 'mine' : '' }> <b>{val.name}</b> </small>\r\n                                        <p className={ parseInt( val.sender_id ) === parseInt(sessionStorage.getItem('EmpID')) ? 'mine' : '' }> {val.comment} </p>\r\n                                        <small className={ parseInt( val.sender_id ) === parseInt(sessionStorage.getItem('EmpID')) ? 'mine' : '' }> { new Date( val.send_date ).toDateString() } at { val.send_time } </small>\r\n                                    </div>\r\n                                ) \r\n\r\n                            }\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n                <form className='newComment' id=\"commentForm\" onSubmit={ newComment }>\r\n                    <input required type=\"text\" name=\"comment\" />\r\n                    <button><i className=\"las la-paper-plane\"></i></button>\r\n                </form>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst DetailsContainer = ( { details, specifications, Comments, Details, newComment, issueToInventory, CloseRequest } ) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"details\">\r\n            \r\n                <div>\r\n                    <div className=\"d-flex align-items-center justify-content-between\">\r\n                        <h5 className='mb-0'>\r\n                            Request Details\r\n                        </h5>\r\n                        <i className=\"la-2x las la-times-circle\" onClick={ CloseRequest }></i>\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <table className=\"table table-sm table-bordered\">\r\n                        <tbody>\r\n                            <tr>\r\n                                \r\n                                <th className=\"bg-light\">Requested By</th>\r\n                                <td>{ details.sender_name }</td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                \r\n                                <th className=\"bg-light\">Request Date/Time</th>\r\n                                <td>{ new Date(details.request_date).toDateString() + \" at \" + details.request_time }</td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                \r\n                                <th className=\"bg-light\">Accepted By</th>\r\n                                <td>{ details.receiver_name }</td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                \r\n                                <th className=\"bg-light\">Accept Date/Time</th>\r\n                                <td>{ new Date(details.accept_date).toDateString() + \" at \" + details.accept_time }</td>\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <br />\r\n\r\n                    <table className=\"table table-bordered\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n\r\n                                <th>Sr.No</th>\r\n                                <th>Preview</th>\r\n                                <th>Product</th>\r\n                                <th>Description</th>\r\n                                <th>Required Quantity</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                specifications.map(\r\n                                    ( val, index ) => {\r\n\r\n                                        return (\r\n                                            <tr key={ index }>\r\n\r\n                                                <td>{ index + 1 }</td>\r\n                                                <td>\r\n                                                    <div className=\"preview_tbl\">\r\n                                                        <img src={ val.preview ? `http://192.168.100.116:8888/assets/inventory/assets/images/${val.preview}` : 'https://media.istockphoto.com/vectors/image-preview-icon-picture-placeholder-for-website-or-uiux-design-vector-id1222357475?k=20&m=1222357475&s=170667a&w=0&h=YGycIDbBRAWkZaSvdyUFvotdGfnKhkutJhMOZtIoUKY=' } alt='preview' />\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{ val.name }</td>\r\n                                                <td>{ val.description }</td>\r\n                                                <td>{ val.assigned_quantity }</td>\r\n\r\n                                            </tr>\r\n                                        )\r\n\r\n                                    }\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                    {\r\n                        !details.issued\r\n                        ?\r\n                        <button className=\"btn btn-sm d-block mx-auto btn-danger rounded-pill px-4\" onDoubleClick={ () => issueToInventory( details.request_id, details.id ) } title=\"Double click to enter\">\r\n                            Issue To Inventory\r\n                        </button>\r\n                        :null\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    {\r\n                        Comments.length > 0 || Details\r\n                        ?\r\n                        <CommentBox\r\n                            Comments={ Comments }\r\n\r\n                            newComment={ newComment }\r\n                        />\r\n                        :null\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst List = ( { Requests, StartLoading, OpenRequest } ) => {\r\n\r\n    return (\r\n        <div className=\"list\">\r\n\r\n            <Loading \r\n                display={ StartLoading }\r\n                styling={\r\n                    {\r\n                        zIndex: 100000,\r\n                        position: 'absolute'\r\n                    }\r\n                }\r\n                icon={ \r\n                    <img \r\n                        src={ LoadingIcon }\r\n                        className=\"LoadingImg\"\r\n                        alt=\"LoadingIcon\"\r\n                    /> \r\n                }\r\n                txt=\"Please Wait\"\r\n            />\r\n\r\n            {\r\n                Requests\r\n                ?\r\n                Requests.length === 0\r\n                ?\r\n                <p className=\"text-center\">No Request Found</p>\r\n                :\r\n                <table className=\"table table-bordered\">\r\n\r\n                    <thead>\r\n                        <tr>\r\n\r\n                            <th>\r\n                                Request ID\r\n                            </th>\r\n                            <th>\r\n                                Requested By\r\n                            </th>\r\n                            <th>\r\n                                Request Date/Time\r\n                            </th>\r\n                            <th>\r\n                                Accepted (Y/N)\r\n                            </th>\r\n                            <th>\r\n                                Action\r\n                            </th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            Requests.map(\r\n                                ( val, index ) => {\r\n\r\n                                    return (\r\n                                        <tr key={ index }>\r\n\r\n                                            <td>\r\n                                                { val.id }\r\n                                            </td>\r\n                                            <td>\r\n                                                <div className=\"d-flex align-items-center justify-content-start font-italic employee\">\r\n                                                    <img src={ \"/images/employees/\" + val.sender_image } alt=\"emp\" />\r\n                                                    <div>\r\n                                                        <p className='font-weight-bold'>{ val.sender_name }</p>\r\n                                                        <span className='text-secondary'>{ val.sender_designation }</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                { new Date(val.request_date).toDateString() } <br />\r\n                                                { val.request_time }\r\n                                            </td>\r\n                                            <td>\r\n                                                {\r\n                                                    val.accepted_by\r\n                                                    ?\r\n                                                    \"Y\"\r\n                                                    :\r\n                                                    \"N\"\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                {\r\n                                                    val.accepted_by\r\n                                                    ?\r\n                                                    <button className='btn btn-sm btn-outline-primary rounded-pill px-3' onClick={ () => OpenRequest( index ) }>\r\n                                                        Details\r\n                                                    </button>\r\n                                                    :\r\n                                                    <button className='btn btn-sm btn-outline-success rounded-pill px-3' onClick={ () => OpenRequest( index ) }>\r\n                                                        Accept\r\n                                                    </button>\r\n                                                }\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    )\r\n\r\n                                }\r\n                            )\r\n                        }\r\n                    </tbody>\r\n\r\n                </table>\r\n                :\r\n                <Loading \r\n                    display={ true }\r\n                    styling={\r\n                        {\r\n                            zIndex: 100000,\r\n                            position: 'absolute'\r\n                        }\r\n                    }\r\n                    icon={ \r\n                        <img \r\n                            src={ LoadingIcon }\r\n                            className=\"LoadingImg\"\r\n                            alt=\"LoadingIcon\"\r\n                        /> \r\n                    }\r\n                    txt=\"Please Wait\"\r\n                />\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}"],"sourceRoot":""}