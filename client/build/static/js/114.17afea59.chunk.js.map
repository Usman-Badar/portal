{"version":3,"sources":["Components/Inventory/ItemNames/Methods.js","Components/Inventory/ItemNames/ItemNames.js"],"names":["GetAllItems","axios","setItemsList","setLog","get","then","res","data","catch","err","message","console","log","UI","lazy","ItemNames","useState","ItemsList","Editing","setEditing","Log","item_name","Form","setForm","useEffect","setTimeout","fallback","onChangeHandler","e","target","name","value","EnterNewItem","toast","preventDefault","post","item_id","id","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","document","getElementById","reset","Delete","index","Edit"],"mappings":"4IA+DaA,EAAc,SAAEC,EAAOC,EAAcC,GAE9CF,EAAMG,IACF,qBACFC,MACE,SAAAC,GAEIJ,EAAcI,EAAIC,SAGxBC,OACE,SAAAC,GAEIN,EAAQM,EAAIC,SACZC,QAAQC,IAAKH,O,+BCrEnBI,EAAKC,gBAAM,kBAAM,mCAmDRC,UAjDG,WAEd,MAAoCC,mBAAS,IAA7C,mBAAQC,EAAR,KAAmBf,EAAnB,KACA,EAAgCc,oBAAS,GAAzC,mBAAQE,EAAR,KAAiBC,EAAjB,KACA,EAAwBH,qBAAxB,mBAAQI,EAAR,KAAajB,EAAb,KACA,EAA0Ba,mBACtB,CACIK,UAAW,KAFnB,mBAAQC,EAAR,KAAcC,EAAd,KAwBA,OAlBAC,qBACI,WAEIxB,EAAaC,IAAOC,EAAcC,KAEnC,IAGPqB,qBACI,WAEIC,YAAW,WACPtB,MACD,OAEJ,CAAEiB,IAIL,qCACI,cAAC,IAAD,IACA,cAAC,WAAD,CAAUM,SAAW,6CAArB,SACI,cAACb,EAAD,CACII,UAAYA,EACZK,KAAOA,EACPJ,QAAUA,EACVE,IAAMA,EAENO,gBAAkB,SAACC,GAAD,ODjDP,SAAEA,EAAGN,EAAMC,GAEtC,MAAwBK,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAMdR,EALS,2BACFD,GADE,kBAEJQ,EAAOC,KC4C6BJ,CAAgBC,EAAGN,EAAMC,IAClDS,aAAe,SAACJ,GAAD,ODtCP,SAAEA,EAAG3B,EAAOqB,EAAMW,EAAOf,EAASK,EAASrB,EAAciB,EAAYhB,GAE7FyB,EAAEM,iBAEFjC,EAAMkC,KACFjB,EAAU,gBAAkB,oBAC5B,CACIG,UAAWC,EAAKD,UAChBe,QAASd,EAAKe,GAAKf,EAAKe,GAAK,OAEnChC,MACE,WAEIF,EACIe,EAEEI,EAAKD,UAAY,uBAEjB,OAASC,EAAKD,UAAY,4BAEhCY,EAAMK,KAAK,UAAW,CAClBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAGdC,SAASC,eAAe,eAAeC,QACvC1B,EACI,CACIF,UAAW,KAGnBrB,EAAaC,EAAOC,GACpBiB,GAAY,MAGlBX,OACE,SAAAC,GAEIN,EAAQM,EAAIC,SACZC,QAAQC,IAAKH,MCNiBuB,CAAcJ,EAAG3B,IAAOqB,EAAMW,IAAOf,EAASK,EAASrB,EAAciB,EAAYhB,IACvG+C,OAAS,SAAEC,GAAF,ODiCP,SAAEA,EAAOlD,EAAOgB,EAAWf,EAAcC,GAE3DF,EAAMkC,KACF,kBACA,CACIE,GAAIpB,EAAUkC,GAAOd,KAE3BhC,MACE,WAEIF,EAAO,6BACPH,EAAaC,EAAOC,EAAcC,MAGxCK,OACE,SAAAC,GAEIN,EAAQM,EAAIC,SACZC,QAAQC,IAAKH,MCnDiByC,CAAQC,EAAOlD,IAAOgB,EAAWf,EAAcC,IACrEiD,KAAO,SAAED,GAAF,ODyDP,SAAEA,EAAOlC,EAAWM,EAASJ,GAG7CI,EADYN,EAAUkC,IAEtBhC,GAAY,GC7DwBiC,CAAMD,EAAOlC,EAAWM,EAASJ","file":"static/js/114.17afea59.chunk.js","sourcesContent":["export const onChangeHandler = ( e, Form, setForm ) => {\r\n\r\n    const { name, value } = e.target;\r\n    const val ={\r\n        ...Form,\r\n        [name]: value\r\n    };\r\n\r\n    setForm( val );\r\n\r\n}\r\n\r\nexport const EnterNewItem = ( e, axios, Form, toast, Editing, setForm, setItemsList, setEditing, setLog ) => {\r\n\r\n    e.preventDefault();\r\n\r\n    axios.post(\r\n        Editing ? '/edititemname' : '/enternewitemname',\r\n        {\r\n            item_name: Form.item_name,\r\n            item_id: Form.id ? Form.id : null\r\n        }\r\n    ).then(\r\n        () => {\r\n\r\n            setLog(\r\n                Editing\r\n                ?\r\n                ( Form.item_name + \" Edited Successfully\" )\r\n                :\r\n                ( \"New \" + Form.item_name + \" Item Added Successfully\" )\r\n            )\r\n            toast.dark(\"SUCCESS\", {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n            document.getElementById(\"newItemForm\").reset();\r\n            setForm(\r\n                {\r\n                    item_name: ''\r\n                }\r\n            );\r\n            GetAllItems( axios, setItemsList );\r\n            setEditing( false );\r\n\r\n        }\r\n    ).catch(\r\n        err => {\r\n\r\n            setLog( err.message );\r\n            console.log( err );\r\n\r\n        }\r\n    )\r\n\r\n}\r\n\r\nexport const GetAllItems = ( axios, setItemsList, setLog ) => {\r\n\r\n    axios.get(\r\n        '/getallitemsnames'\r\n    ).then(\r\n        res => {\r\n\r\n            setItemsList( res.data );\r\n\r\n        }\r\n    ).catch(\r\n        err => {\r\n\r\n            setLog( err.message );\r\n            console.log( err );\r\n\r\n        }\r\n    )\r\n\r\n}\r\n\r\nexport const Delete = ( index, axios, ItemsList, setItemsList, setLog ) => {\r\n\r\n    axios.post(\r\n        '/deleteitemname',\r\n        {\r\n            id: ItemsList[index].id\r\n        }\r\n    ).then(\r\n        () => {\r\n\r\n            setLog(\"Item Deleted Successfully\");\r\n            GetAllItems( axios, setItemsList, setLog );\r\n\r\n        }\r\n    ).catch(\r\n        err => {\r\n\r\n            setLog( err.message );\r\n            console.log( err );\r\n\r\n        }\r\n    )\r\n\r\n}\r\n\r\nexport const Edit = ( index, ItemsList, setForm, setEditing ) => {\r\n\r\n    const obj = ItemsList[index];\r\n    setForm( obj );\r\n    setEditing( true );\r\n\r\n}","import React, { lazy, Suspense, useEffect, useState } from 'react';\r\n\r\nimport { onChangeHandler, EnterNewItem, GetAllItems, Delete, Edit } from './Methods';\r\nimport axios from '../../../axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst UI = lazy( () => import('./UI') );\r\n\r\nconst ItemNames = () => {\r\n\r\n    const [ ItemsList, setItemsList ] = useState([]);\r\n    const [ Editing, setEditing ] = useState(false);\r\n    const [ Log, setLog ] = useState();\r\n    const [ Form, setForm ] = useState(\r\n        {\r\n            item_name: \"\"\r\n        }\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            GetAllItems( axios, setItemsList, setLog );\r\n\r\n        }, []\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setTimeout(() => {\r\n                setLog();\r\n            }, 5000);\r\n\r\n        }, [ Log ]\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer />\r\n            <Suspense fallback={ <div>Loading...</div> }>\r\n                <UI\r\n                    ItemsList={ ItemsList }\r\n                    Form={ Form }\r\n                    Editing={ Editing }\r\n                    Log={ Log }\r\n\r\n                    onChangeHandler={ (e) => onChangeHandler(e, Form, setForm) }\r\n                    EnterNewItem={ (e) => EnterNewItem( e, axios, Form, toast, Editing, setForm, setItemsList, setEditing, setLog ) }\r\n                    Delete={ ( index ) => Delete( index, axios, ItemsList, setItemsList, setLog ) }\r\n                    Edit={ ( index ) => Edit( index, ItemsList, setForm, setEditing ) }\r\n                />\r\n            </Suspense>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default ItemNames;"],"sourceRoot":""}