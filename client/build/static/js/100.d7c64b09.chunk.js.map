{"version":3,"sources":["Redux/Actions/Action.js","Components/Inventory/Inventory.jsx","io.js"],"names":["EmployeeLogin","data","type","payload","ShowSideBar","Condition","UI","lazy","InventoryDashboard","AccessControls","useSelector","state","EmpAuth","EmployeeData","Menu","history","useHistory","dispatch","useDispatch","useEffect","undefined","sessionStorage","getItem","replace","d","FormData","append","axios","post","then","res","socket","open","emit","catch","err","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","FormsLinks","className","options","$","find","hasClass","removeClass","addClass","slideDown","slideUp","content","useMemo","map","val","index","access","JSON","parse","accessKey","x","length","includes","option_id","menu_txt","onClick","icon_class_name","style","val2","sub_content","under_menu","activeClassName","to","link","fallback","io","connect","autoConnect"],"mappings":"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","file":"static/js/100.d7c64b09.chunk.js","sourcesContent":["export const UserLogin = ( data ) => {\r\n\r\n    return {\r\n        type: \"USRLOGIN\",\r\n        payload: {\r\n            data: data\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const EmployeeLogin = ( data ) => {\r\n\r\n    return {\r\n        type: \"EMPLOGIN\",\r\n        payload: {\r\n            data: data\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const ShowSideBar = ( Condition ) => {\r\n\r\n    return {\r\n        type: \"SHOWSIDEBAR\",\r\n        payload: {\r\n            data: Condition\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const Chatbot = ( message ) => {\r\n\r\n    return {\r\n        type: \"CHATBOT\",\r\n        payload: {\r\n            data: message\r\n        }\r\n    }\r\n\r\n}","import React, { lazy, Suspense, useEffect, useMemo } from 'react';\r\n\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { EmployeeLogin } from '../../Redux/Actions/Action';\r\nimport $ from 'jquery';\r\nimport axios from '../../axios';\r\nimport socket from '../../io';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst UI = lazy( () => import('./UI') );\r\n\r\nconst InventoryDashboard = () => {\r\n    \r\n    const AccessControls = useSelector( ( state ) => state.EmpAuth.EmployeeData );\r\n    const Menu = useSelector( ( state ) => state.EmpAuth.Menu );\r\n    \r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( sessionStorage.getItem(\"Token\") === undefined || sessionStorage.getItem(\"Token\") === null )\r\n            {\r\n                history.replace(\"/login\");\r\n            }else\r\n            {\r\n                const d = new FormData();\r\n                d.append('empID', sessionStorage.getItem('EmpID'));\r\n                d.append('view', 'inventory');\r\n                axios.post('/getemployee', d).then(res => {\r\n    \r\n                    socket.open();\r\n                    socket.emit(\r\n                        'NewUser', sessionStorage.getItem('EmpID')\r\n                    );\r\n                    \r\n                    dispatch(EmployeeLogin(res.data));\r\n    \r\n                }).catch(err => {\r\n    \r\n                    toast.dark(err, {\r\n                        position: 'top-right',\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n    \r\n                });\r\n            }\r\n\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ dispatch ]\r\n    );\r\n\r\n    const FormsLinks = ( className, options ) => {\r\n\r\n        if ($('.' + className).find('i').hasClass('la-caret-right')) {\r\n            $('.' + className + ' .la-caret-right').removeClass('la-caret-right').addClass('la-caret-down');\r\n            $('.' + options).slideDown();\r\n        } else {\r\n            $('.' + className + ' .la-caret-down').removeClass('la-caret-down').addClass('la-caret-right');\r\n            $('.' + options).slideUp();\r\n        }\r\n\r\n    }\r\n\r\n    // SIDEBAR LINKS\r\n    let content = useMemo(\r\n        () => {\r\n\r\n            return (\r\n                <div className=\"Dashboard_links\">\r\n                    {\r\n                        Menu.map(\r\n                            ( val, index ) => {\r\n\r\n                                let access = val.access === null ? [] : JSON.parse( val.access );\r\n                                let accessKey = val.access === null ? true : false;\r\n                                let content = null;\r\n                                if ( AccessControls.access )\r\n                                {\r\n                                    for ( let x = 0; x < access.length; x++ )\r\n                                    {\r\n                                        if ( JSON.parse(AccessControls.access).includes( access[x] ) )\r\n                                        {\r\n                                            accessKey = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if ( val.option_id !== null && accessKey )\r\n                                    {\r\n                                        content = <>\r\n                                            <div key={ index } className={ \"d-center links \" + val.menu_txt + val.option_id } onClick={() => FormsLinks(val.menu_txt + val.option_id, val.option_id)}>\r\n                                                <div className=\"pr-3\"><i className={ val.icon_class_name }></i></div>\r\n                                                <div className=\"d-flex justify-content-between w-100\">\r\n                                                    <div className=\"links_txt\"> { val.menu_txt } </div>\r\n                                                    <div className=\"links_txt\"><i className=\"las la-caret-right\" style={{ 'fontSize': '12px' }}></i></div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={ \"Forms_options _options dropoptions \" + val.option_id }>\r\n    \r\n                                                {\r\n                                                    Menu.map(\r\n                                                        val2 => {\r\n    \r\n                                                            let sub_content = null;\r\n                                                            if ( val2.under_menu === val.option_id )\r\n                                                            {\r\n                                                                sub_content = <>\r\n                                                                    <NavLink key={ val2.menu_txt } activeClassName=\"Dashboard_active\" to={ val2.link } className=\"d-center links\">\r\n                                                                        <div className=\"pr-3\"><i className={ val2.icon_class_name }></i></div>\r\n                                                                        <div className=\"links_txt\">{ val2.menu_txt }</div>\r\n                                                                    </NavLink>\r\n                                                                </>\r\n                                                            }\r\n    \r\n                                                            return sub_content;\r\n    \r\n                                                        }\r\n                                                    )\r\n                                                }\r\n    \r\n                                            </div>\r\n                                        </>\r\n                                    }else if ( val.under_menu === null && accessKey )\r\n                                    {\r\n                                        content = <>\r\n                                            <NavLink key={ val.menu_txt } activeClassName=\"Dashboard_active\" to={ val.link } className=\"d-center links\">\r\n                                                <div className=\"pr-3\"><i className={ val.icon_class_name }></i></div>\r\n                                                <div className=\"links_txt\">{ val.menu_txt }</div>\r\n                                            </NavLink>\r\n                                        </>\r\n                                    }\r\n                                }\r\n\r\n                                return content;\r\n\r\n                            }\r\n                        )\r\n                    }\r\n                </div> \r\n            )\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ AccessControls, Menu ]\r\n    )\r\n\r\n    return (\r\n        <Suspense fallback={ <div>Loading...</div> }>\r\n\r\n            <UI \r\n                FormsLinks={ FormsLinks }\r\n                content={ content }\r\n                history={ history }\r\n            />\r\n\r\n        </Suspense>\r\n    )\r\n}\r\nexport default InventoryDashboard;","import io from 'socket.io-client';\r\n\r\nconst socket = io.connect('http://202.63.220.170:3443/', { autoConnect: true });\r\n// const socket = io.connect(\"http://\" + window.location.host, { autoConnect: true });\r\n// const socket = io.connect('http://203.101.174.221:8888', { autoConnect: true });\r\n// const socket = io.connect('http://192.168.21.152:8888', { autoConnect: true });\r\n\r\nexport default socket;"],"sourceRoot":""}