{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/Procurement/ViewPurchaseRequisition/Components/Quotations/Quotations.jsx"],"names":["Quotations","props","useState","AttachQuotations","setAttachQuotations","List","setList","QuotationPreview","setQuotationPreview","useEffect","className","status","type","onChange","onAttachQuotations","name","id","multiple","accept","for","style","backgroundImage","length","image","URL","createObjectURL","file","map","val","index","onClick","PreviewQuotation","RemoveQuotation"],"mappings":"4IA2HeA,UAtHI,SAACC,GAEhB,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgDJ,mBAAS,IAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KAYA,OAVAC,qBACI,WAEIL,EAAoBH,EAAME,kBAC1BK,EAAoBP,EAAMM,kBAC1BD,EAAQL,EAAMI,QAEf,CAACJ,EAAME,iBAAkBF,EAAMM,iBAAkBN,EAAMI,OAI1D,sBAAKK,UAAU,qBAAf,UAGI,qBAAKA,UAAU,SAAf,SAEQL,EAAK,KAEkB,WAAnBA,EAAK,GAAGM,QAA0C,SAAnBN,EAAK,GAAGM,QAEnC,qCACI,uBAAOC,KAAK,OAAOC,SAAUZ,EAAMa,mBAAoBC,KAAK,cAAcL,UAAU,SAASM,GAAG,oBAAoBC,UAAQ,EAACC,OAAO,YACpI,uBAAOR,UAAU,QAAjB,iCACA,uBAAOA,UAAU,gBAAgBS,IAAI,oBAArC,SACI,gCACI,mBAAGT,UAAU,gBACb,0EAOhB,OAKZ,sBAAKA,UAAU,oBAAf,UACI,uBAAOA,UAAU,QAAjB,kCACA,qBAAKA,UAAU,UACXU,MACI,CACIC,gBAAiB,SAAWd,EAAiBe,OAAS,EAAIf,EAAiB,GAAGgB,MAAS,mCAAqChB,EAAiB,GAAGgB,MAASC,IAAIC,gBAAgBlB,EAAiB,GAAGmB,MAAQ,MAAQ,MAH7N,SAQoC,IAA5BnB,EAAiBe,OAEb,sDAEA,UAMhB,qBAAKZ,UAAU,iBAAf,SAEQP,EAAiBwB,KACb,SAACC,EAAKC,GAEF,IAAIN,EAOJ,OALIA,EADAK,EAAIL,MACI,mCAAqCK,EAAIL,MAEzCC,IAAIC,gBAAgBG,EAAIF,MAKhC,sBAAKhB,UAAU,gBAAf,UACI,qBAAKA,UAAU,YACXU,MACI,CACIC,gBAAiB,QAAUE,EAAQ,QAI/C,sBAAKb,UAAU,6CAAf,UACI,mBAAGA,UAAU,mBAAb,wBACA,sBAAKA,UAAU,YAAf,UACI,wBAAQA,UAAU,uBAAuBoB,QAAS,kBAAM7B,EAAM8B,iBAAiBF,IAA/E,kBAEIxB,EAAK,KAEkB,WAAnBA,EAAK,GAAGM,QAA0C,SAAnBN,EAAK,GAAGM,QAEnC,mCACI,wBAAQD,UAAU,uBAAuBoB,QAAS,kBAAM7B,EAAM+B,gBAAgBH,IAA9E,sBAKR,aAvBgBA,a","file":"static/js/91.d1c263e2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// IMPORT CSS\r\nimport './Quotations.css';\r\n\r\nconst Quotations = (props) => {\r\n\r\n    const [AttachQuotations, setAttachQuotations] = useState([]); // FOR ATTACH QUOTATIONS\r\n    const [List, setList] = useState([]); // FOR ATTACH QUOTATIONS\r\n    const [QuotationPreview, setQuotationPreview] = useState([]); // FOR QUOTATION PREVIEW\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setAttachQuotations(props.AttachQuotations);\r\n            setQuotationPreview(props.QuotationPreview);\r\n            setList(props.List);\r\n\r\n        }, [props.AttachQuotations, props.QuotationPreview, props.List]\r\n    )\r\n\r\n    return (\r\n        <div className=\"AttachedQuotations\">\r\n\r\n            {/* FOR ATTACH QUOTATIONS */}\r\n            <div className=\"Attach\">\r\n                {\r\n                    List[0]\r\n                        ?\r\n                        List[0].status === 'Viewed' || List[0].status === 'Sent'\r\n                            ?\r\n                            <>\r\n                                <input type=\"file\" onChange={props.onAttachQuotations} name=\"attachments\" className=\"d-none\" id=\"upload-quotations\" multiple accept=\"image/*\" />\r\n                                <label className='label'> UPLOAD QUOTATIONS </label>\r\n                                <label className=\"AttachContent\" for=\"upload-quotations\">\r\n                                    <div>\r\n                                        <i className=\"las la-file\"></i>\r\n                                        <p>Upload Quotations in image format</p>\r\n                                    </div>\r\n                                </label>\r\n                            </>\r\n                            :\r\n                            null\r\n                        :\r\n                        null\r\n                }\r\n            </div>\r\n\r\n            {/* FOR ATTACHMENT PREVIEW */}\r\n            <div className=\"AttachmentPreview\">\r\n                <label className='label'> QUOTATIONS PREVIEW </label>\r\n                <div className=\"Preview\"\r\n                    style={\r\n                        {\r\n                            backgroundImage: \"url('\" + (QuotationPreview.length > 0 ? QuotationPreview[0].image ? ('images/Inventory/pr_attachments/' + QuotationPreview[0].image) : URL.createObjectURL(QuotationPreview[0].file) : null) + \"')\"\r\n                        }\r\n                    }\r\n                >\r\n                    {\r\n                        QuotationPreview.length === 0\r\n                            ?\r\n                            <p>No Quotation Selected</p>\r\n                            :\r\n                            null\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            {/* QUOTATIONS */}\r\n            <div className=\"QuotationsList\">\r\n                {\r\n                    AttachQuotations.map(\r\n                        (val, index) => {\r\n\r\n                            let image;\r\n                            if (val.image) {\r\n                                image = 'images/Inventory/pr_attachments/' + val.image;\r\n                            } else {\r\n                                image = URL.createObjectURL(val.file)\r\n                            }\r\n\r\n                            return (\r\n\r\n                                <div className=\"QuotationItem\" key={index}>\r\n                                    <div className=\"thumbnail\"\r\n                                        style={\r\n                                            {\r\n                                                backgroundImage: \"url('\" + image + \"')\"\r\n                                            }\r\n                                        }\r\n                                    ></div>\r\n                                    <div className=\"d-flex justify-content-between flex-column\">\r\n                                        <p className=\"font-weight-bold\">IMage1.jpg</p>\r\n                                        <div className=\"btn-group\">\r\n                                            <button className='btn btn-sm btn-light' onClick={() => props.PreviewQuotation(index)}>View</button>\r\n                                            {\r\n                                                List[0]\r\n                                                    ?\r\n                                                    List[0].status === 'Viewed' || List[0].status === 'Sent'\r\n                                                        ?\r\n                                                        <>\r\n                                                            <button className='btn btn-sm btn-light' onClick={() => props.RemoveQuotation(index)}>Remove</button>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            )\r\n\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quotations;"],"sourceRoot":""}