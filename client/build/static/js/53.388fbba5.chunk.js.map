{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/Procurement/ViewPurchaseRequisition/Components/Discussions/Drive/Drive.jsx","Components/EmployeeProtal/Dashboard/Pages/Procurement/ViewPurchaseRequisition/Components/Discussions/Discussions.jsx"],"names":["Drive","props","useState","Data","setData","useEffect","data","className","map","val","index","style","backgroundImage","name","onClick","AttachDrive","Discussions","Show","setShow","ReplyTo","setReplyTo","EmpData","setEmpData","DriveContent","setDriveContent","Tweets","setTweets","SubTweets","setSubTweets","Employees","setEmployees","arr","added","x","length","includes","emp_id","push","designation","designation_name","department","department_name","company","company_name","socket","on","id","OpenReplyBox","condition","axios","post","chat_id","then","res","undefined","$","not","hide","toggle","catch","err","console","log","AttachDriveDocs","ShowHide","Modal","show","Hide","content","txt","body","d","Date","date","emp_image","src","split","alt","width","toDateString","time","onSubmit","e","preventDefault","onTweet","setTimeout","value","onChange","onTweetboxChange","placeholder","fontSize","type","required"],"mappings":"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","file":"static/js/53.388fbba5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport './Drive.css';\r\n\r\nconst Drive = ( props ) => {\r\n\r\n    const [ Data, setData ] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setData( props.data );\r\n\r\n        }, [ props.data ]\r\n    )\r\n\r\n    return (\r\n        <div className=\"DicussionDrive\">\r\n            {\r\n                Data.map(\r\n                    ( val, index ) => {\r\n\r\n                        return (\r\n                            <div \r\n                                key={ index } \r\n                                className=\"DriveItem\"\r\n                                style={\r\n                                    {\r\n                                        backgroundImage: \"url('images/drive/\" + val.name + \"')\"\r\n                                    }\r\n                                }\r\n                                onClick={ () => props.AttachDrive( val.name ) }\r\n                            ></div>\r\n                        )\r\n\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Drive;","import React, { useEffect, useState } from 'react';\r\n\r\n// IMPORT CSS\r\nimport './Discussions.css';\r\nimport $ from 'jquery';\r\nimport axios from '../../../../../../../../axios';\r\nimport socket from '../../../../../../../../io';\r\n\r\nimport Modal from '../../../../../../../UI/Modal/Modal';\r\nimport Drive from './Drive/Drive';\r\n\r\nconst Discussions = (props) => {\r\n\r\n    const [Show, setShow] = useState(false);\r\n    const [ReplyTo, setReplyTo] = useState(0);\r\n\r\n    const [EmpData, setEmpData] = useState({});\r\n    const [DriveContent, setDriveContent] = useState([]);\r\n\r\n    const [Tweets, setTweets] = useState([]);\r\n    const [SubTweets, setSubTweets] = useState([]);\r\n    const [Employees, setEmployees] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let arr = [];\r\n            let added = [];\r\n            for (let x = 0; x < props.Tweets.length; x++) {\r\n                if (!added.includes(props.Tweets[x].emp_id)) {\r\n                    arr.push(\r\n                        {\r\n                            name: props.Tweets[x].name,\r\n                            designation: props.Tweets[x].designation_name,\r\n                            department: props.Tweets[x].department_name,\r\n                            company: props.Tweets[x].company_name\r\n                        }\r\n                    )\r\n                    added.push(props.Tweets[x].emp_id);\r\n                }\r\n            }\r\n\r\n            setTweets(props.Tweets);\r\n            setEmployees(arr);\r\n            setEmpData(props.EmpData);\r\n\r\n            socket.on('prsubdiscussions', (id) => {\r\n                OpenReplyBox(id, '');\r\n            });\r\n\r\n        }, [props.Tweets]\r\n    )\r\n\r\n    const OpenReplyBox = (index, condition) => {\r\n\r\n        axios.post(\r\n            '/getsubdiscussions',\r\n            {\r\n                chat_id: index\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setSubTweets(res.data);\r\n\r\n                if (condition === undefined) {\r\n                    $('.Reply').not('.Reply' + index).hide(300);\r\n                    $('.Reply' + index).toggle(300);\r\n                    $(\"textarea[name='\" + index + \"']\").val('');\r\n                }\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const onTweet = (e, id) => {\r\n\r\n        e.preventDefault();\r\n        props.onTweet(e);\r\n        setTimeout(() => {\r\n            OpenReplyBox(id, '');\r\n        }, 300);\r\n\r\n    }\r\n\r\n    const AttachDriveDocs = (id) => {\r\n\r\n        axios.post(\r\n            '/getalldrive',\r\n            {\r\n                emp_id: EmpData.emp_id\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setDriveContent(\r\n                    res.data\r\n                );\r\n                setReplyTo(typeof (id) === 'number' ? id : undefined);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n        ShowHide();\r\n\r\n    }\r\n\r\n    const ShowHide = () => {\r\n\r\n        setShow(!Show);\r\n\r\n    }\r\n\r\n    const AttachDrive = (txt) => {\r\n\r\n        let body = '/***' + txt + '***/';\r\n        props.AttachDrive(body, ReplyTo);\r\n        ShowHide();\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"PRDiscussions\">\r\n                <Modal show={Show} Hide={ShowHide} content={<Drive AttachDrive={AttachDrive} data={DriveContent} />} />\r\n\r\n                <div className=\"Left\">\r\n\r\n                    <div className=\"TweetContainer\" id=\"TweetContainer\">\r\n                        {\r\n                            Tweets.map(\r\n                                (val, index) => {\r\n\r\n                                    const d = new Date(val.date);\r\n\r\n                                    return (\r\n                                        <div className=\"Tweet\" key={index}>\r\n\r\n                                            <div className=\"upper\">\r\n                                                <div className=\"emp_img\" style={{ backgroundImage: \"url('images/employees/\" + val.emp_image + \"')\" }}></div>\r\n                                                <div>\r\n                                                    <p className=\"font-weight-bold\">{val.name}</p>\r\n                                                    <p> {val.designation_name} in {val.department_name} Department, {val.company_name} </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"body\">\r\n                                                <p>\r\n                                                    {\r\n                                                        val.body.includes('/***')\r\n                                                            ?\r\n                                                            <img\r\n                                                                src={'images/drive/' + val.body.split('/***')[1].split('***')[0]}\r\n                                                                alt=\"discussion attachment\"\r\n                                                                width=\"100%\"\r\n                                                            />\r\n                                                            :\r\n                                                            val.body\r\n                                                    }\r\n                                                </p>\r\n                                            </div>\r\n\r\n                                            <div className='footer'>\r\n                                                <div>\r\n                                                    <p className=\"font-weight-bold\">{d.toDateString()} at {val.time}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <p onClick={() => OpenReplyBox(val.chat_id)} className=\"font-weight-bold\">Reply</p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                            <form onSubmit={(e) => onTweet(e, val.chat_id)} className={\"Reply Reply\" + val.chat_id}>\r\n                                                {\r\n                                                    SubTweets.map(\r\n                                                        (value, index) => {\r\n\r\n                                                            const d = new Date(val.date);\r\n\r\n                                                            return (\r\n                                                                <div key={index} className=\"SubTweet\">\r\n                                                                    <div>\r\n                                                                        <div className=\"branch\"></div>\r\n                                                                    </div>\r\n                                                                    <div>\r\n                                                                        <div className=\"upper\">\r\n                                                                            <div className=\"emp_img\" style={{ backgroundImage: \"url('images/employees/\" + value.emp_image + \"')\" }}></div>\r\n                                                                            <div>\r\n                                                                                <p className=\"font-weight-bold\">{value.name}</p>\r\n                                                                                <p> {value.designation_name} in {value.department_name} Department, {value.company_name} </p>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"body\">\r\n                                                                            {\r\n                                                                                value.body.includes('/***')\r\n                                                                                    ?\r\n                                                                                    <img\r\n                                                                                        src={'images/drive/' + value.body.split('/***')[1].split('***')[0]}\r\n                                                                                        alt=\"discussion attachment\"\r\n                                                                                        width=\"100%\"\r\n                                                                                    />\r\n                                                                                    :\r\n                                                                                    <p>\r\n                                                                                        {value.body}\r\n                                                                                    </p>\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                        <div className='footer'>\r\n                                                                            <div>\r\n                                                                                <p className=\"font-weight-bold\">{d.toDateString()}</p>\r\n                                                                            </div>\r\n                                                                            <div>\r\n                                                                                <p className=\"font-weight-bold\">{val.time}</p>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )\r\n\r\n                                                        }\r\n                                                    )\r\n                                                }\r\n                                                <textarea\r\n                                                    onChange={props.onTweetboxChange}\r\n                                                    placeholder=\"Enter your message\"\r\n                                                    className=\"form-control mt-2\"\r\n                                                    name={val.chat_id}\r\n                                                    style={\r\n                                                        {\r\n                                                            fontSize: '12px'\r\n                                                        }\r\n                                                    }\r\n                                                />\r\n                                                <div className=\"d-flex justify-content-end\">\r\n                                                    <button\r\n                                                        type='button'\r\n                                                        className=\"btn btn-sm btn-light mt-1 px-3\"\r\n                                                        onClick={() => AttachDriveDocs(val.chat_id)}\r\n                                                    >\r\n                                                        <i className=\"las la-thumbtack\" style={{ fontSize: '15px' }}></i>\r\n                                                    </button>\r\n                                                    <button type=\"submit\" className=\"btn btn-sm btn-light mt-1\">Send</button>\r\n                                                </div>\r\n                                            </form>\r\n\r\n                                        </div>\r\n                                    )\r\n\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"Right\">\r\n\r\n                    <h5 className=\"font-weight-bolder\">Members</h5>\r\n                    <hr />\r\n                    {\r\n                        Employees.map(\r\n                            (val, index) => {\r\n\r\n                                return (\r\n                                    <div className=\"Emp\" key={index}>\r\n                                        <p className=\"font-weight-bold\"> {val.name} </p>\r\n                                        <p>{val.designation} in {val.department} Department, {val.company}</p>\r\n                                    </div>\r\n                                )\r\n\r\n                            }\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className='tweetgrid'>\r\n                {/* USER CAN TWEET */}\r\n                <form className=\"TweetBox\" onSubmit={props.onTweet}>\r\n                    <textarea\r\n                        onChange={props.onTweetboxChange}\r\n                        placeholder=\"Enter your message\"\r\n                        className=\"form-control w-100\"\r\n                        name=\"tweet\"\r\n                        style={\r\n                            {\r\n                                fontSize: '13px'\r\n                            }\r\n                        }\r\n                        required\r\n                    />\r\n                    <div>\r\n                        <button type='submit' className=\"btn btn-block border-light\">Send</button>\r\n                        <button\r\n                            type='button'\r\n                            className=\"btn btn-block border-light\"\r\n                            onClick={AttachDriveDocs}\r\n                        >\r\n                            <i className=\"las la-thumbtack\" style={{ fontSize: '17px' }}></i>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;"],"sourceRoot":""}