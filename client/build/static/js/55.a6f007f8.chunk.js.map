{"version":3,"sources":["../node_modules/react-html-table-to-excel/index.js","Components/EmployeeProtal/Dashboard/Pages/EmployeeProfile/EmployeeProfile.jsx"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","table","string","isRequired","filename","sheet","id","className","buttonText","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","bind","subClass","superClass","create","constructor","setPrototypeOf","_inherits","document","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","window","navigator","msSaveOrOpenBlob","blobObject","Blob","click","element","createElement","href","base64","format","download","body","appendChild","removeChild","type","onClick","s","btoa","unescape","encodeURIComponent","c","replace","m","p","Component","defaultProps","EmployeeProfile","history","useHistory","ProfileData","useSelector","state","EmpAuth","EmployeeData","useState","View","setView","SubView","setSubView","SubCategories","setSubCategories","Category","setCategory","EmpNotifications","setEmpNotifications","useEffect","arr","location","split","$","addClass","title","link","GetAllNotifications","axios","post","emp_id","sessionStorage","getItem","then","res","data","catch","err","console","log","style","width","height","display","background","LinkItem","event","icon","color","desc","AccountInfo","Attendance","Notifications","map","val","index","Item","label","txt","FileItem","elm","path","source","includes","src","alt","EditItem","name","onChangeHandler","onChange","encryptor","dispatch","useDispatch","residential_address","emergency_person_name","emergency_person_number","landline","cell","email","login_id","decrypt","emp_password","Form","setForm","Mode","setMode","ShowLoginID","setShowLoginID","file","CV","setCV","PRF","setPRF","ShowPassword","setShowPassword","Disabled","setDisabled","ChangeMode","mode","removeClass","setItem","onImageUpload","reader","FileReader","ImageCurrentName","substring","father_name","cnic","onload","readyState","files","readAsDataURL","e","emp_image","Date","date_of_birth","toDateString","place_of_birth","gender","permanent_address","designation_name","department_name","company_name","location_name","emp_status","date_of_join","time_in","time_out","JSON","parse","additional_off","checked","fontSize","cnic_front_image","cnic_back_image","accept","cv","proof_of_address","driving_license","armed_license","disabled","Data","FormData","append","encrypt","headers","alert","empID","view","EmployeeLogin","Notification","notification_title","notification_body","date_time","notification_date","event_id","notification_id","d","year","getFullYear","toString","month","getMonth","date","getDate","D","moment","fromNow","ref","React","createRef","Sheet","setSheet","backgroundColor","emp_date","dayName","getDay","status","break_in","break_out"],"mappings":"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","file":"static/js/55.a6f007f8.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\n\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      };\n\n      // If IE11\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'button',\n        {\n          id: this.props.id,\n          className: this.props.className,\n          type: 'button',\n          onClick: this.handleDownload\n        },\n        this.props.buttonText\n      );\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\n\nexports.default = ReactHTMLTableToExcel;\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport './EmployeeProfile.css';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EmployeeLogin } from '../../../../../Redux/Actions/Action';\r\nimport axios from '../../../../../axios';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport moment from 'moment';\r\n\r\nconst EmployeeProfile = () => {\r\n\r\n    const history = useHistory();\r\n    const ProfileData = useSelector((state) => state.EmpAuth.EmployeeData);\r\n\r\n    const [ View, setView ] = useState('');\r\n    const [ SubView, setSubView ] = useState('');\r\n    const [ SubCategories, setSubCategories ] = useState([]);\r\n    const [ Category, setCategory ] = useState([]);\r\n    const [ EmpNotifications, setEmpNotifications ] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let arr = window.location.href.split('/');\r\n\r\n            setView( arr[ arr.length - 2 ] );\r\n            $('#' + arr[ arr.length - 2 ]).addClass('active');\r\n\r\n        }, [ window.location.href ]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setSubCategories(\r\n                [\r\n                    [\r\n                        {\r\n                            title: 'Account',\r\n                            link: '/profile/personal/info',\r\n                            id: \"info\"\r\n                        },\r\n                        {\r\n                            title: 'Contact',\r\n                            link: '/profile/personal/contact',\r\n                            id: \"contact\"\r\n                        },\r\n                        {\r\n                            title: 'Email',\r\n                            link: '/profile/personal/email',\r\n                            id: \"email\"\r\n                        },\r\n                        {\r\n                            title: 'Office',\r\n                            link: '/profile/personal/office',\r\n                            id: \"office\"\r\n                        },\r\n                        {\r\n                            title: 'Password',\r\n                            link: '/profile/personal/password',\r\n                            id: \"password\"\r\n                        },\r\n                        {\r\n                            title: 'Documents',\r\n                            link: '/profile/personal/documents',\r\n                            id: \"documents\"\r\n                        }\r\n                    ],\r\n                    [\r\n                        {\r\n                            title: 'Attendance Sheet',\r\n                            link: '/profile/attendance/sheet',\r\n                            id: \"sheet\"\r\n                        }\r\n                    ],\r\n                    [\r\n                        {\r\n                            title: 'Notifications',\r\n                            link: '/profile/notifications/all',\r\n                            id: \"all\"\r\n                        }\r\n                    ]\r\n                ]\r\n            )\r\n\r\n        }, []\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( View !== '' )\r\n            {\r\n                if ( View === 'personal' )\r\n                {\r\n                    setCategory(\r\n                        SubCategories[0]\r\n                    );\r\n                }else\r\n                if ( View === 'attendance' )\r\n                {\r\n                    setCategory(\r\n                        SubCategories[1]\r\n                    );\r\n                }else\r\n                if ( View === 'notifications' )\r\n                {\r\n                    GetAllNotifications();\r\n                    setCategory(\r\n                        SubCategories[2]\r\n                    );\r\n                }\r\n\r\n                let arr = window.location.href.split('/');\r\n                setSubView( arr[ arr.length - 1 ] );\r\n            }\r\n\r\n        }, [ View ]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( SubView !== '' )\r\n            {\r\n                let arr = window.location.href.split('/');\r\n                $('#' + arr[ arr.length - 1 ]).addClass('active');\r\n            }\r\n\r\n        }, [ SubView, window.location.href ]\r\n    );\r\n\r\n    const GetAllNotifications = () => {\r\n\r\n        axios.post(\r\n            '/getallnotifications',\r\n            {\r\n                emp_id: sessionStorage.getItem(\"EmpID\")\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setEmpNotifications( res.data );\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"Profile\">\r\n            \r\n            <div className=\"Left w-100\">\r\n\r\n                <div className='d-flex justify-content-start align-items-center mt-3 ml-3 mb-2'>\r\n                    <hr style={ { width: '20px', height: '2px', display: 'inline-block', background: \"var(--dark-c-green)\" } } className='m-0 mr-2' />\r\n                    <h3 className='mb-0'> Profile </h3>\r\n                </div>\r\n\r\n                <LinkItem \r\n                    event={ () => history.replace('/profile/personal/info') }\r\n                    icon={ <i style={ { color: 'var(--blue)' } } className=\"las la-user\"></i> }\r\n                    title=\"Personal\"\r\n                    desc=\"info, name, password\"\r\n                    id=\"personal\"\r\n                />\r\n                \r\n                <LinkItem \r\n                    event={ () => history.replace('/profile/attendance/sheet') }\r\n                    icon={ <i style={ { color: 'var(--c-green)' } } className=\"las la-calendar-week\"></i> }\r\n                    title=\"Attendance\"\r\n                    desc=\"view daily attendance\"\r\n                    id=\"attendance\"\r\n                />\r\n                \r\n                <LinkItem \r\n                    event={ () => history.replace('/profile/notifications/all') }\r\n                    icon={ <i style={ { color: 'var(--orange)' } } className=\"las la-bell\"></i> }\r\n                    title=\"Notifications\"\r\n                    desc=\"desktop notifications\"\r\n                    id=\"notifications\"\r\n                />\r\n\r\n            </div>\r\n            <div className=\"Center w-100\">\r\n\r\n                {\r\n                    View === 'personal'\r\n                    ?\r\n                    <AccountInfo \r\n                        ProfileData={ ProfileData } \r\n                        View={ View }\r\n                        SubView={ SubView }\r\n                    />\r\n                    :\r\n                    View === 'attendance'\r\n                    ?\r\n                    <Attendance \r\n                        ProfileData={ ProfileData } \r\n                        View={ View }\r\n                        SubView={ SubView }\r\n                    />\r\n                    :\r\n                    View === 'notifications'\r\n                    ?\r\n                    <Notifications \r\n                        ProfileData={ ProfileData } \r\n                        EmpNotifications={ EmpNotifications }\r\n                        View={ View }\r\n                        SubView={ SubView }\r\n                    />\r\n                    :null\r\n                }\r\n\r\n            </div>\r\n            <div className=\"Right w-100\">\r\n\r\n                <div className=\"NavigationContainer\">\r\n\r\n                    <div className=\"Heading navigationItem\">\r\n                        Navigation\r\n                    </div>\r\n                    \r\n                    {\r\n                        Category.map(\r\n                            ( val, index ) => {\r\n\r\n                                return (\r\n                                    <div \r\n                                        className=\"navigationItem\" \r\n                                        key={ index }\r\n                                        onClick={ () => history.replace(val.link) }\r\n                                        id={ val.id }\r\n                                    >\r\n                                        { val.title }\r\n                                    </div>\r\n                                )\r\n\r\n                            }\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default EmployeeProfile;\r\n\r\nconst LinkItem = ( { icon, title, desc, event, id } ) => {\r\n\r\n    return (\r\n        <div className=\"LinkItem\" onClick={ event } id={ id }>\r\n\r\n            { icon }\r\n\r\n            <div className=\"pl-2\">\r\n\r\n                <p> { title } </p>\r\n                <p> { desc } </p>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst Item = ( { label, txt } ) => {\r\n\r\n    return (\r\n        <div className=\"AccountInfoItem\">\r\n            <label> { label } </label>\r\n            <p> { txt } </p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst FileItem = ( { label, source } ) => {\r\n\r\n    let elm;\r\n    let path;\r\n    if ( source.includes('CV') )\r\n    {\r\n        path = \"/documents/cv/\";\r\n    }else\r\n    if ( source.includes('Driving_License') )\r\n    {\r\n        path = \"/documents/licenses/driving/\";\r\n    }else\r\n    if ( source.includes('Armed_License') )\r\n    {\r\n        path = \"/documents/licenses/armed/\";\r\n    }else\r\n    if ( source.includes('proof_of_address') )\r\n    {\r\n        path = \"/documents/address/\";\r\n    }else\r\n    if ( source.includes('_front') )\r\n    {\r\n        path = \"/documents/cnic/front/\";\r\n    }else\r\n    if ( source.includes('_back') )\r\n    {\r\n        path = \"/documents/cnic/back/\";\r\n    }\r\n    if ( source.includes('.pdf') )\r\n    {\r\n        elm = <iframe src={ 'images' + path + source } width=\"100%\" title=\"CV\"></iframe>\r\n    }else\r\n    {\r\n        elm = <img src={ 'images' + path + source } alt=\"document\" width=\"100%\" title=\"CV\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"AccountInfoItem\">\r\n            <label> { label } </label>\r\n            { elm }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst EditItem = ( { label, value, type, name, onChangeHandler } ) => {\r\n\r\n    return (\r\n        <div className=\"AccountInfoItem\">\r\n            <label> { label } </label>\r\n            <input type={ type } className=\"inputs\" value={ value } onChange={ onChangeHandler } name={ name } />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst AccountInfo = ( props ) => {\r\n\r\n    let key = 'real secret keys should be long and random';\r\n    const encryptor = require('simple-encryptor')(key);\r\n    const dispatch = useDispatch();\r\n\r\n    const [ Form, setForm ] = useState(\r\n        {\r\n            residential_address: props.ProfileData.residential_address,\r\n            emergency_person_name: props.ProfileData.emergency_person_name,\r\n            emergency_person_number: props.ProfileData.emergency_person_number,\r\n            landline: props.ProfileData.landline,\r\n            cell: props.ProfileData.cell,\r\n            email: props.ProfileData.email,\r\n            login_id: encryptor.decrypt( props.ProfileData.login_id ),\r\n            emp_password: encryptor.decrypt( props.ProfileData.emp_password )\r\n        }\r\n    );\r\n    const [ Mode, setMode ] = useState(sessionStorage.getItem(\"Mode\"));\r\n    const [ ShowLoginID, setShowLoginID ] = useState(false);\r\n    const [ CV, setCV ] = useState(\r\n        {\r\n            file: '', name: \"\"\r\n        }\r\n    );\r\n    const [ PRF, setPRF ] = useState(\r\n        {\r\n            file: '', name: \"\"\r\n        }\r\n    );\r\n    const [ ShowPassword, setShowPassword ] = useState(false);\r\n    const [ Disabled, setDisabled ] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( sessionStorage.getItem(\"Mode\") )\r\n            {\r\n                $('.Profile .ContainerHeader .ModeContainer #' + sessionStorage.getItem(\"Mode\")).addClass('active');\r\n            }else\r\n            {\r\n                $('.Profile .ContainerHeader .ModeContainer #Normal').addClass('active');\r\n            }\r\n\r\n        }, [ Mode, sessionStorage.getItem(\"Mode\") ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( \r\n                Form.residential_address === '' ||\r\n                Form.emergency_person_name === '' ||\r\n                Form.emergency_person_number === '' ||\r\n                Form.landline === '' ||\r\n                Form.cell === '' ||\r\n                Form.email === '' ||\r\n                Form.login_id === '' ||\r\n                Form.emp_password  === ''\r\n            )\r\n            {\r\n                setDisabled( true );\r\n            }else\r\n            {\r\n                setDisabled( false );\r\n            }\r\n\r\n        }, [Form.residential_address, Form.emergency_person_name, Form.emergency_person_number, Form.landline, Form.cell, Form.email, Form.login_id, Form.emp_password]\r\n    )\r\n\r\n    const ChangeMode = ( mode ) => {\r\n\r\n        $('.Profile .ContainerHeader .ModeContainer .mode').removeClass('active');\r\n        $('.Profile .ContainerHeader .ModeContainer #' + mode).addClass('active');\r\n        sessionStorage.setItem(\"Mode\", mode);\r\n        setMode( mode );\r\n\r\n    }\r\n\r\n    const onImageUpload = ( event ) => {\r\n\r\n        const reader = new FileReader();\r\n        const { name } = event.target;\r\n\r\n        let Name = props.ProfileData.name;\r\n        let subName = Name.substring(0,3);\r\n\r\n        let Profession = props.ProfileData.father_name;\r\n        let subProfession = Profession.substring(0,3);\r\n\r\n        let Passport = props.ProfileData.cnic;\r\n        let subPassport = Passport.substring(0,8);\r\n\r\n        let ImageCurrentName = subName + subProfession + subPassport;\r\n\r\n        reader.onload = () => {\r\n\r\n            if( reader.readyState === 2 )\r\n            {\r\n                if ( name === 'CV' )\r\n                {\r\n                    setCV( { file: event.target.files[0], name: ImageCurrentName + '_CV' } );\r\n                }else\r\n                if ( name === 'PRF' )\r\n                {\r\n                    setPRF( { file: event.target.files[0], name: ImageCurrentName + '_proof_of_address' } );\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if ( event.target.files[0] ) {\r\n            reader.readAsDataURL( event.target.files[0] );\r\n        }\r\n\r\n    }\r\n\r\n    const onChangeHandler = ( e ) => {\r\n\r\n        const { name, value } = e.target;\r\n        const val = {\r\n            ...Form,\r\n            [name]: value\r\n        };\r\n\r\n        setForm( val );\r\n\r\n    }\r\n\r\n    const UpdateProfile = () => {\r\n\r\n        const Data = new FormData();\r\n        Data.append('emp_id', sessionStorage.getItem('EmpID'));\r\n        Data.append('residential_address', Form.residential_address);\r\n        Data.append('emergency_person_name', Form.emergency_person_name);\r\n        Data.append('emergency_person_number', Form.emergency_person_number);\r\n        Data.append('landline', Form.landline);\r\n        Data.append('cell', Form.cell);\r\n        Data.append('email', Form.email);\r\n        Data.append('login_id', encryptor.encrypt( Form.login_id ));\r\n        Data.append('emp_password', encryptor.encrypt( Form.emp_password ));\r\n        Data.append('CV', CV.file);\r\n        Data.append('CVName', CV.name);\r\n        Data.append('PRF', PRF.file);\r\n        Data.append('PRFName', PRF.name);\r\n\r\n        axios.post(\r\n            '/updateprofile',\r\n            Data,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\"\r\n                }\r\n            }\r\n        ).then(\r\n            () => {\r\n\r\n                alert('Profile Updated');\r\n                axios.post(\r\n                    '/getemployee',\r\n                    {\r\n                        empID: sessionStorage.getItem('EmpID'),\r\n                        view: 'portal'\r\n                    }\r\n                ).then(res => {\r\n                    \r\n                    dispatch(EmployeeLogin(res.data));\r\n    \r\n                }).catch(err => {\r\n    \r\n                    alert(err);\r\n    \r\n                });\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"AccountInfo w-100\">\r\n            \r\n            <div className=\"ContainerHeader\">\r\n\r\n                <h4> Account Settings </h4>\r\n                <div className=\"ModeContainer\">\r\n                    <div id=\"Normal\" onClick={ () => ChangeMode('Normal') } className=\"mode\">Default</div>\r\n                    <div id=\"Edit\" onClick={ () => ChangeMode('Edit') } className=\"mode\">Edit</div>\r\n                </div>\r\n\r\n            </div>\r\n            <br />\r\n\r\n            <div className=\"FirstContainer\">\r\n\r\n                <div>\r\n                    <img src={ 'images/employees/' + props.ProfileData.emp_image } alt=\"employee\" />\r\n                </div>\r\n                <div className=\"pl-3 w-100\">\r\n\r\n                    <h5> { props.ProfileData.name } </h5>\r\n                    <br />\r\n\r\n                    {\r\n                        props.SubView === 'info'\r\n                        ?\r\n                        <div className=\"detailsContainer\">\r\n\r\n                            <Item \r\n                                label=\"employee id\"\r\n                                txt={ props.ProfileData.emp_id }\r\n                            />\r\n                            \r\n                            <Item \r\n                                label=\"father name\"\r\n                                txt={ props.ProfileData.father_name }\r\n                            />\r\n                            \r\n                            <Item \r\n                                label=\"date of birth\"\r\n                                txt={ new Date( props.ProfileData.date_of_birth.substring(0,10) ).toDateString() }\r\n                            />\r\n                            \r\n                            <Item \r\n                                label=\"place of birth\"\r\n                                txt={ props.ProfileData.place_of_birth }\r\n                            />\r\n                            \r\n                            <Item \r\n                                label=\"gender\"\r\n                                txt={ props.ProfileData.gender }\r\n                            />\r\n\r\n                        </div>\r\n                        :\r\n                        props.SubView === 'contact'\r\n                        ?\r\n                        <div className=\"detailsContainer\">\r\n                            \r\n                            {\r\n                                Mode === 'Edit'\r\n                                ?\r\n                                <EditItem\r\n                                    label=\"residential address\"\r\n                                    value={ Form.residential_address }\r\n                                    onChangeHandler={ onChangeHandler }\r\n                                    type=\"text\"\r\n                                    name=\"residential_address\"\r\n                                />\r\n                                :\r\n                                <Item \r\n                                    label=\"residential address\"\r\n                                    txt={ props.ProfileData.residential_address }\r\n                                />\r\n                            }\r\n                            \r\n                            <Item \r\n                                label=\"permanent address\"\r\n                                txt={ props.ProfileData.permanent_address }\r\n                            />\r\n                            \r\n                            {\r\n                                Mode === 'Edit'\r\n                                ?\r\n                                <EditItem\r\n                                    label=\"emergency person\"\r\n                                    value={ Form.emergency_person_name }\r\n                                    onChangeHandler={ onChangeHandler }\r\n                                    type=\"text\"\r\n                                    name=\"emergency_person_name\"\r\n                                />\r\n                                :\r\n                                <Item \r\n                                    label=\"emergency person\"\r\n                                    txt={ props.ProfileData.emergency_person_name }\r\n                                />\r\n                            }\r\n\r\n                            {\r\n                                Mode === 'Edit'\r\n                                ?\r\n                                <EditItem\r\n                                    label=\"emergency person number\"\r\n                                    value={ Form.emergency_person_number }\r\n                                    onChangeHandler={ onChangeHandler }\r\n                                    type=\"number\"\r\n                                    name=\"emergency_person_number\"\r\n                                />\r\n                                :\r\n                                <Item \r\n                                    label=\"emergency person number\"\r\n                                    txt={ props.ProfileData.emergency_person_number }\r\n                                />\r\n                            }\r\n\r\n                            {\r\n                                Mode === 'Edit'\r\n                                ?\r\n                                <EditItem\r\n                                    label=\"landline\"\r\n                                    value={ Form.landline }\r\n                                    onChangeHandler={ onChangeHandler }\r\n                                    type=\"number\"\r\n                                    name=\"landline\"\r\n                                />\r\n                                :\r\n                                <Item \r\n                                    label=\"landline\"\r\n                                    txt={ props.ProfileData.landline }\r\n                                />\r\n                            }\r\n\r\n                            {\r\n                                Mode === 'Edit'\r\n                                ?\r\n                                <EditItem\r\n                                    label=\"cell phone\"\r\n                                    value={ Form.cell }\r\n                                    onChangeHandler={ onChangeHandler }\r\n                                    type=\"number\"\r\n                                    name=\"cell\"\r\n                                />\r\n                                :\r\n                                <Item \r\n                                    label=\"cell phone\"\r\n                                    txt={ props.ProfileData.cell }\r\n                                />\r\n                            }\r\n\r\n                        </div>\r\n                        :\r\n                        props.SubView === 'email'\r\n                        ?\r\n                        <div className=\"detailsContainer\">\r\n                            \r\n                            {\r\n                                Mode === 'Edit'\r\n                                ?\r\n                                <EditItem\r\n                                    label=\"email\"\r\n                                    value={ Form.email }\r\n                                    onChangeHandler={ onChangeHandler }\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                />\r\n                                :\r\n                                <Item \r\n                                    label=\"email\"\r\n                                    txt={ props.ProfileData.email }\r\n                                />\r\n                            }\r\n\r\n                        </div>\r\n                        :\r\n                        props.SubView === 'office'\r\n                        ?\r\n                        <div className=\"detailsContainer\">\r\n                            \r\n                            <Item \r\n                                label=\"designation\"\r\n                                txt={ props.ProfileData.designation_name }\r\n                            />\r\n                            \r\n                            <Item \r\n                                label=\"department\"\r\n                                txt={ props.ProfileData.department_name }\r\n                            />\r\n                            \r\n                            <Item \r\n                                label=\"company\"\r\n                                txt={ props.ProfileData.company_name }\r\n                            />\r\n                            \r\n                            <Item \r\n                                label=\"location\"\r\n                                txt={ props.ProfileData.location_name }\r\n                            />\r\n                            \r\n                            <Item \r\n                                label=\"Employment\"\r\n                                txt={ props.ProfileData.emp_status }\r\n                            />\r\n                            \r\n                            <Item \r\n                                label=\"Date of Join\"\r\n                                txt={ new Date(props.ProfileData.date_of_join.substring(0,10)).toDateString() }\r\n                            />\r\n                            \r\n                            <Item \r\n                                label=\"time in\"\r\n                                txt={ props.ProfileData.time_in }\r\n                            />\r\n                            \r\n                            <Item \r\n                                label=\"time out\"\r\n                                txt={ props.ProfileData.time_out }\r\n                            />\r\n                            \r\n                            <Item \r\n                                label=\"Additional off\"\r\n                                txt={ \r\n                                    JSON.parse(props.ProfileData.additional_off).length === 0\r\n                                    ?\r\n                                    \"No Additional Off\"\r\n                                    :\r\n                                    JSON.parse(props.ProfileData.additional_off).map( \r\n                                        ( val, index ) => { \r\n                                            return <span>{val} { (index + 1) === JSON.parse(props.ProfileData.additional_off).length ? \"\" : ', ' }</span> \r\n                                        } \r\n                                    ) \r\n                                }\r\n                            />\r\n\r\n                        </div>\r\n                        :\r\n                        props.SubView === 'password'\r\n                        ?\r\n                        <div className=\"detailsContainer\">\r\n                            \r\n                            {\r\n                                Mode === 'Edit'\r\n                                ?\r\n                                <div>\r\n                                    <EditItem\r\n                                        label=\"login id\"\r\n                                        value={ Form.login_id }\r\n                                        onChangeHandler={ onChangeHandler }\r\n                                        type={ ShowLoginID ? 'text' : \"password\" }\r\n                                        name=\"login_id\"\r\n                                    />\r\n                                    <div className=\"d-flex align-items-center mt-2\">\r\n                                        <input type=\"checkbox\" onChange={ (e) => setShowLoginID( e.target.checked ) } className=\"mr-1\" /> Show Login ID\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <Item \r\n                                    label=\"login id\"\r\n                                    txt={\r\n                                        encryptor.decrypt( props.ProfileData.login_id ).split('').map(\r\n                                            () => {\r\n    \r\n                                                return <span style={ { fontSize: '15px' } }> * </span>\r\n    \r\n                                            }\r\n                                        )\r\n                                    }\r\n                                />\r\n                            }\r\n\r\n                            {\r\n                                Mode === 'Edit'\r\n                                ?\r\n                                <div>\r\n                                    <EditItem\r\n                                        label=\"password\"\r\n                                        value={ Form.emp_password }\r\n                                        onChangeHandler={ onChangeHandler }\r\n                                        type={ ShowPassword ? 'text' : \"password\" }\r\n                                        name=\"emp_password\"\r\n                                    />\r\n                                    <div className=\"d-flex align-items-center mt-2\">\r\n                                        <input type=\"checkbox\" onChange={ (e) => setShowPassword( e.target.checked ) } className=\"mr-1\" /> Show Password\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <Item \r\n                                    label=\"password\"\r\n                                    txt={ \r\n                                        encryptor.decrypt( props.ProfileData.emp_password ).split('').map(\r\n                                            () => {\r\n\r\n                                                return <span style={ { fontSize: '15px' } }> * </span>\r\n\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                />\r\n                            }\r\n\r\n                        </div>\r\n                        :\r\n                        props.SubView === 'documents'\r\n                        ?\r\n                        <div className=\"detailsContainer\">\r\n\r\n                            <FileItem \r\n                                label=\"CNIC (front)\"\r\n                                source={ props.ProfileData.cnic_front_image }\r\n                            />\r\n\r\n                            <FileItem \r\n                                label=\"CNIC (back)\"\r\n                                source={ props.ProfileData.cnic_back_image }\r\n                            />\r\n                            \r\n                            {\r\n                                Mode === 'Edit'\r\n                                ?\r\n                                <div className=\"AccountInfoItem\">\r\n                                    <label> { 'CV' } </label>\r\n                                    <input type={ 'file' } className=\"inputs\" name=\"CV\" onChange={ onImageUpload } accept=\".jpg, .jpeg, .png, .pdf\" />\r\n                                </div>\r\n                                :\r\n                                <FileItem \r\n                                    label=\"CV\"\r\n                                    source={ props.ProfileData.cv }\r\n                                />\r\n                            }\r\n                            \r\n                            {\r\n                                Mode === 'Edit'\r\n                                ?\r\n                                <div className=\"AccountInfoItem\">\r\n                                    <label> { 'Proof of address' } </label>\r\n                                    <input type={ 'file' } className=\"inputs\" name=\"PRF\" onChange={ onImageUpload } accept=\".jpg, .jpeg, .png, .pdf\" />\r\n                                </div>\r\n                                :\r\n                                <FileItem \r\n                                    label=\"Proof of address\"\r\n                                    source={ props.ProfileData.proof_of_address }\r\n                                />\r\n                            }\r\n\r\n                            {\r\n                                props.ProfileData.driving_license !== null\r\n                                ?\r\n                                <FileItem \r\n                                    label=\"driving license\"\r\n                                    source={ props.ProfileData.driving_license }\r\n                                />\r\n                                :null\r\n                            }\r\n\r\n                            {\r\n                                props.ProfileData.armed_license !== null\r\n                                ?\r\n                                <FileItem \r\n                                    label=\"armed license\"\r\n                                    source={ props.ProfileData.armed_license }\r\n                                />\r\n                                :null\r\n                            }\r\n\r\n                        </div>\r\n                        :null\r\n                    }\r\n\r\n                    {\r\n                        Mode === 'Edit'\r\n                        ?\r\n                        <button className=\"btn updateBtn\" disabled={ Disabled } onClick={ UpdateProfile }>Update</button>\r\n                        :null\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst Notifications = ( { EmpNotifications } ) => {\r\n\r\n    return (\r\n        <div className=\"notificationsContainer\">\r\n            <div className=\"ContainerHeader\">\r\n\r\n                <h4> Notifications </h4>\r\n\r\n            </div>\r\n            <br />\r\n            \r\n            {\r\n                EmpNotifications.map(\r\n                    val => {\r\n                        return (\r\n                            <Notification\r\n                                title={ val.notification_title }\r\n                                body={ val.notification_body }\r\n                                date_time={ val.notification_date }\r\n                                event_id={ val.event_id }\r\n                                key={ val.notification_id }\r\n                            />\r\n                        )\r\n                    }\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst Notification = ( { title, body, event_id, key, date_time } ) => {\r\n\r\n    const d = new Date(date_time.substring(0,10));\r\n    let year = d.getFullYear().toString();\r\n    let month = (d.getMonth() + 1).toString().length === 1 ? \"0\" + (d.getMonth() + 1) : (d.getMonth() + 1).toString();\r\n    let date = d.getDate().toString().length === 1 ? \"0\" + d.getDate() : d.getDate().toString();\r\n\r\n    const D = moment(year + month + date, \"YYYYMMDD\").fromNow();\r\n\r\n    return (\r\n        <div className=\"NotificationItem\" key={ key }>\r\n            {\r\n                event_id === 1\r\n                ?\r\n                <i className=\"las la-comments mainIcon\"></i>\r\n                :\r\n                event_id === 2\r\n                ?\r\n                <i className=\"las la-mail-bulk mainIcon\"></i>\r\n                :\r\n                event_id === 3\r\n                ?\r\n                <i className=\"lar la-credit-card mainIcon\"></i>\r\n                :\r\n                event_id === 4\r\n                ?\r\n                <i className=\"las la-calendar-day mainIcon\"></i>\r\n                :null\r\n            }\r\n            <div>\r\n                <h6> { title } </h6>\r\n                <p className=\"mb-0\"> { body } </p>\r\n                <div className=\"d-flex align-items-center\"><i className=\"las la-history\"></i> <small className=\"text-secondary pl-1\">{ D }</small></div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst Attendance = () => {\r\n\r\n    const ref = React.createRef();\r\n\r\n    const [ Sheet, setSheet ] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            axios.post( \r\n                '/getempattdetails', \r\n                {\r\n                    empID: sessionStorage.getItem('EmpID')\r\n                }\r\n            ).then(\r\n                res => {\r\n\r\n                    setSheet( res.data );\r\n\r\n                }\r\n            ).catch(\r\n                err => {\r\n\r\n                    console.log( err );\r\n\r\n                }\r\n            )\r\n\r\n        }, []\r\n    )\r\n\r\n    return (\r\n        <div className=\"AttendanceContainer\">\r\n\r\n            <div className=\"ContainerHeader\">\r\n\r\n                <h4> Attendance </h4>\r\n                <div className=\"ModeContainer\">\r\n                    {/* <div id=\"Normal\" onClick={ () => {} } style={ { backgroundColor: \"var(--orange)\" } } className=\"mode text-white mr-2\">Print</div> */}\r\n                    <div id=\"Edit\" onClick={ () => {} } style={ { backgroundColor: \"var(--blue)\" } } className=\"mode text-white\">\r\n                        <ReactHTMLTableToExcel\r\n                            id=\"test-table-xls-button\"\r\n                            className=\"download-table-xls-button\"\r\n                            table=\"table-to-xls\"\r\n                            filename={ sessionStorage.getItem('EmpID') + \"_attendance-sheet\" }\r\n                            sheet={[\"Employees\", \"Employees\", \"Employees\", \"Employees\"]}\r\n                            buttonText=\"Export\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <br />\r\n\r\n            <table className=\"table\" id=\"table-to-xls\" ref={ ref }>\r\n\r\n                <thead>\r\n                    <tr>\r\n\r\n                        <th className=\"d-none\">ID</th>\r\n                        <th>Name</th>\r\n                        <th>Date</th>\r\n                        <th className=\"d-none\">Day</th>\r\n                        <th>Time in</th>\r\n                        <th>Break in</th>\r\n                        <th>Break out</th>\r\n                        <th>Time out</th>\r\n                        <th>Status</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                \r\n                <tbody>\r\n                    {\r\n                        Sheet.map(\r\n                            ( val, index ) => {\r\n\r\n                                let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n                                let d = new Date(val.emp_date);\r\n                                let dayName = days[d.getDay()];\r\n\r\n                                return (\r\n                                    <tr key={ index } style={ { backgroundColor: dayName === 'Sunday' ? \"#bbbdc3\" : val.status === 'Holiday' ? \"#bbbdc3\" : val.status === 'OFF' ? \"#bbbdc3\" : val.status === 'Absent' ? '#F1F3F2' : val.status === 'leave' ? '#F1F3F2' : val.status === 'Late' ? '#F1F3F2' : '#fff' } }>\r\n                                \r\n                                        <td className=\"d-none\"> {sessionStorage.getItem('EmpID')} </td>\r\n                                        <td>{ sessionStorage.getItem(\"name\") }</td>\r\n                                        <td>{ d ? d.toDateString() : null }</td>\r\n                                        <td className=\"d-none\"> {dayName} </td>\r\n                                        <td>{ val.time_in }</td>\r\n                                        <td>{ val.break_in }</td>\r\n                                        <td>{ val.break_out }</td>\r\n                                        <td>{ val.time_out }</td>\r\n                                        <td>{ val.status }</td>\r\n\r\n                                    </tr>\r\n                                )\r\n\r\n                            }\r\n                        )\r\n                    }\r\n                </tbody>\r\n\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n\r\n}"],"sourceRoot":""}