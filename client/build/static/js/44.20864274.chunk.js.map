{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/AtendanceRequest/Attandence_Request.jsx","Components/UI/Modal/Modal.jsx"],"names":["Attandence_Request","history","useHistory","Relations","useSelector","state","EmpAuth","AccessControls","EmployeeData","useState","RequestList","setRequestList","Submittion","setSubmittion","OpenForm","setOpenForm","RecordFound","setRecordFound","Dates","setDates","date","Date","toString","reason","submit_to","request_type","request_for","Form","setForm","DetailsView","setDetailsView","SnapShot","setSnapShot","ShowModal","setShowModal","Content","setContent","time_in","time_out","break_in","break_out","Attendance","setAttendance","time_in_check","time_out_check","break_in_check","break_out_check","NewAttendance","setNewAttendance","emp_info","request_info","reviews","RequestDetails","setRequestDetails","request_action","request_send_to","RequestAction","setRequestAction","mark_time_in","mark_time_out","mark_break_in","mark_break_out","Marking","setMarking","OnTimeChange","e","val","v","target","value","name","checked","includes","$","prop","useEffect","socket","on","GetDates","requestData","axios","get","then","res","data","catch","err","console","log","post","emp_id","sessionStorage","getItem","date_time","length","id","parseInt","window","location","href","split","pop","shift","isNaN","showrequest","EditAttendance","request_id","d","OnChangeSelect","TakeAction","preventDefault","status","document","getElementById","forward_to","remarks","request_by","record_date","record_status","Data2","FormData","append","replace","setTimeout","show","Hide","content","className","map","options","access","CheckCancellation","JSON","parse","push","x","request_status","onChange","index","option","category","sr","onClick","onSubmit","placeholder","required","minLength","to","class","AttRequestForm","OnChangeHandler","new_time","current_time","onChangeCheck","onUploadSnap","event","reader","FileReader","onload","readyState","result","readAsDataURL","files","onMarkChange","closebutton","Submit","pass","alert","Validation","Data","stringify","txt","position","toast","dark","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","trigger","emit","style","color","View2","buttonslideSnapeshot","html","slideToggle","View","request_date","newBadge","getDate","src","emp_image","alt","sender_name","toDateString","backgroundColor","props","type","disabled","marginRight","for","fontSize","cursor","width","Marked","setMarked","marked","filter","hide","designation_name","department_name","company_name","snapshot","sender","join","defaultValue","marked_time_in","marked_time_out","marked_break_in","marked_break_out","receiver","receiver_name","Modal","display","animationDelay"],"mappings":"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","file":"static/js/44.20864274.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-lone-blocks */\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Attandence_Request.css';\r\n\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport $ from 'jquery';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport axios from '../../../../../axios';\r\nimport socket from '../../../../../io';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport Modal from '../../../../UI/Modal/Modal';\r\n\r\nconst Attandence_Request = () => {\r\n\r\n    const history = useHistory();\r\n    const Relations = useSelector((state) => state.EmpAuth.Relations);\r\n    const AccessControls = useSelector( ( state ) => state.EmpAuth.EmployeeData );\r\n\r\n    const [RequestList, setRequestList] = useState([]);\r\n    const [Submittion, setSubmittion] = useState(false);\r\n\r\n    const [OpenForm, setOpenForm] = useState(false);\r\n    const [RecordFound, setRecordFound] = useState(false);\r\n    const [Dates, setDates] = useState([]);\r\n\r\n    const [Form, setForm] = useState({\r\n        date: new Date().toString(),\r\n        reason: '',\r\n        submit_to: '',\r\n        request_type: '',\r\n        request_for: '',\r\n        // current_time: '',\r\n        // new_time: '',\r\n    });\r\n\r\n\r\n    const [DetailsView, setDetailsView] = useState(false);\r\n    const [SnapShot, setSnapShot] = useState(null);\r\n    const [ ShowModal, setShowModal ] = useState(false);\r\n    const [ Content, setContent ] = useState();\r\n\r\n    const [Attendance, setAttendance] = useState(\r\n        {\r\n            time_in: '',\r\n            time_out: '',\r\n            break_in: '',\r\n            break_out: ''\r\n        }\r\n    );\r\n\r\n    const [NewAttendance, setNewAttendance] = useState(\r\n        {\r\n            time_in: '',\r\n            time_out: '',\r\n            break_in: '',\r\n            break_out: '',\r\n            time_in_check: false,\r\n            time_out_check: false, \r\n            break_in_check: false, \r\n            break_out_check: false \r\n        }\r\n    );\r\n\r\n    const [RequestDetails, setRequestDetails] = useState(\r\n        {\r\n            emp_info: {},\r\n            request_info: {},\r\n            reviews: []\r\n        }\r\n    );\r\n\r\n    const [RequestAction, setRequestAction] = useState(\r\n        {\r\n            request_action: '',\r\n            request_send_to: '',\r\n        }\r\n    );\r\n\r\n    const [Marking, setMarking] = useState(\r\n        {\r\n            mark_time_in: false,\r\n            mark_time_out: false,\r\n            mark_break_in: false,\r\n            mark_break_out: false\r\n        }\r\n    );\r\n\r\n    const OnTimeChange = (e) => {\r\n        const { value, name, checked } = e.target;\r\n\r\n        let val = {};\r\n        let v;\r\n        if ( name.includes('check') )\r\n        {\r\n            v = checked;\r\n            if ( checked )\r\n            {\r\n                $('#' + name).prop('disabled', true).val('');\r\n            }else\r\n            {\r\n                $('#' + name).prop('disabled', false);\r\n            }\r\n        }else\r\n        {\r\n            v = value;\r\n        }\r\n        \r\n        val = {\r\n            ...NewAttendance,\r\n            [name]: v\r\n        }\r\n        setNewAttendance(val);\r\n\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let name = 'time_in';\r\n            if ( !Marking.mark_time_in )\r\n            {\r\n                name = 'time_in';\r\n            }else\r\n            if ( !Marking.mark_time_out )\r\n            {\r\n                name= 'time_out';\r\n            }else\r\n            if ( !Marking.mark_break_in )\r\n            {\r\n                name= 'break_in';\r\n            }else\r\n            if ( !Marking.mark_break_out )\r\n            {\r\n                name= 'break_out';\r\n            }\r\n\r\n            let val = {\r\n                ...NewAttendance,\r\n                [name]: ''\r\n            };\r\n\r\n            setNewAttendance( val );\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ Marking.mark_time_in, Marking.mark_time_out, Marking.mark_break_in, Marking.mark_break_out ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            socket.on(\r\n                'newattendancerequest', () => {\r\n                    \r\n                    setSubmittion( !Submittion );\r\n            \r\n                }\r\n            )\r\n\r\n            GetDates();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, []\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if (Form.request_type === 'update') \r\n            {\r\n                // ShowNotification(\"Update Mode On\", \"top-center\");\r\n                requestData();\r\n            } else\r\n            if (Form.request_type === 'insert') {\r\n                requestData();\r\n                // ShowNotification(\"Insert Mode On\", \"top-center\");\r\n                // setAttendance(\r\n                //     {\r\n                //         time_in: '',\r\n                //         time_out: '',\r\n                //         break_in: '',\r\n                //         break_out: ''\r\n                //     }\r\n                // );\r\n            }else\r\n            {\r\n                setMarking(\r\n                    {\r\n                        mark_time_in: false,\r\n                        mark_time_out: false,\r\n                        mark_break_in: false,\r\n                        mark_break_out: false\r\n                    }\r\n                );\r\n                setNewAttendance(\r\n                    {\r\n                        time_in: '',\r\n                        time_out: '',\r\n                        break_in: '',\r\n                        break_out: '',\r\n                        time_in_check: false,\r\n                        time_out_check: false, \r\n                        break_in_check: false, \r\n                        break_out_check: false \r\n                    }\r\n                );\r\n            }\r\n\r\n        }, [Form.request_type, Form.date]\r\n    )\r\n\r\n    const GetDates = () => {\r\n\r\n        axios.get('/get_enabled_att_request_dates').then(\r\n            res => {\r\n\r\n                setDates( res.data );\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const onChangeCheck = (e) => {\r\n\r\n        const { name, checked } = e.target;\r\n\r\n        let value;\r\n        if (checked) {\r\n            $('#' + name).prop('disabled', true).val('');\r\n            // $('#' + name).prop('required', false);\r\n            value = null;\r\n        } else {\r\n            $('#' + name).prop('disabled', false);\r\n            // $('#' + name).prop('required', true);\r\n            value = '';\r\n        }\r\n\r\n        const val = {\r\n            ...NewAttendance,\r\n            [name]: value\r\n        }\r\n        setNewAttendance(val);\r\n\r\n    }\r\n\r\n    const requestData = () => {\r\n\r\n        axios.post(\r\n            '/getemptimein',\r\n            {\r\n                emp_id: sessionStorage.getItem('EmpID'),\r\n                date_time: Form.date\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                if (res.data.length > 0) {\r\n\r\n                    setAttendance(res.data[0]);\r\n                    setNewAttendance(\r\n                        {\r\n                            ...NewAttendance,\r\n                            time_in: res.data[0].time_in === null ? null : res.data[0].time_in,\r\n                            time_out: res.data[0].time_out === null ? null : res.data[0].time_out,\r\n                            break_in: res.data[0].break_in === null ? null : res.data[0].break_in,\r\n                            break_out: res.data[0].break_out === null ? null : res.data[0].break_out\r\n                        }\r\n                    );\r\n                    setRecordFound( true );\r\n\r\n                } else {\r\n\r\n                    setRecordFound( false );\r\n\r\n                }\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err)\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            axios.post(\r\n                '/getallattendancerequests',\r\n                {\r\n                    emp_id: sessionStorage.getItem('EmpID'),\r\n                }\r\n            ).then(\r\n                res => {\r\n\r\n                    setRequestList(res.data);\r\n\r\n                }\r\n            ).catch(\r\n                err => {\r\n\r\n                    console.log(err)\r\n\r\n                }\r\n            )\r\n\r\n        }, [ Submittion ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let id = parseInt(window.location.href.split('/').pop().split('_').shift());\r\n            if (!isNaN(id)) {\r\n                showrequest(id);\r\n            }\r\n\r\n            if (window.location.href.split('/').pop() === 'new') {\r\n                setOpenForm(true)\r\n            }\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [window.location.href.split('/').pop()]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( RequestDetails.reviews[0] )\r\n            {\r\n                EditAttendance(\r\n                    RequestDetails.reviews[0]\r\n                )\r\n            }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ RequestDetails.reviews.length ]\r\n    )\r\n\r\n    const showrequest = (id) => {\r\n\r\n        axios.post(\r\n            '/getattendancerequestdetails',\r\n            {\r\n                request_id: id,\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setRequestDetails(\r\n                    {\r\n                        emp_info: res.data[2][0],\r\n                        request_info: res.data[0][0],\r\n                        reviews: res.data[1]\r\n                    }\r\n                )\r\n\r\n                setDetailsView(true);\r\n                setOpenForm(false);\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err)\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const onImageUpload = (event) => {\r\n\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n\r\n            if (reader.readyState === 2) {\r\n\r\n                setSnapShot(reader.result);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        reader.readAsDataURL(event.target.files[0]);\r\n\r\n    }\r\n\r\n    const closebutton = () => {\r\n\r\n        setSnapShot(null);\r\n\r\n    }\r\n\r\n    const ShowNotification = (txt, position) => {\r\n\r\n        toast.dark(txt.toString(), {\r\n            position: position,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n\r\n    }\r\n\r\n    const OnChangeHandler = (e) => {\r\n        const { value, name } = e.target;\r\n\r\n        let val;\r\n        if (name === 'request_type') {\r\n            val = {\r\n                ...Form,\r\n                new_time: '',\r\n                current_time: '',\r\n                [name]: value\r\n            }\r\n        } else\r\n            if (name === 'c') {\r\n            } else {\r\n                val = {\r\n                    ...Form,\r\n                    [name]: value\r\n                }\r\n            }\r\n\r\n\r\n        setForm(val);\r\n    }\r\n\r\n    const Validation = () => {\r\n\r\n        let pass = true;\r\n        \r\n        // shahzad IF TIME OUT IS GREATER THAN TIME IN\r\n        if ( Form.request_type === 'insert' && RecordFound )\r\n        {\r\n            alert( 'Record of this date is already exist. Select request type [Update]' )\r\n            pass = false;\r\n        }\r\n        \r\n        if ( Form.request_type === 'insert' && !Marking.mark_time_in )\r\n        {\r\n            alert( 'Iime IN must be checked when request type is [Insert]' )\r\n            pass = false;\r\n        } \r\n\r\n        if ( Form.request_type === 'insert' && Marking.mark_time_in && ( NewAttendance.time_in === '' || NewAttendance.time_in === null ) )\r\n        {\r\n            alert( 'Iime IN must be entered when request type is [INSERT]' )\r\n            pass = false;\r\n        } \r\n        \r\n        // IF TIME OUT IS GREATER THAN TIME IN\r\n        if ( Marking.mark_time_in && Marking.mark_time_out && NewAttendance.time_out < NewAttendance.time_in )\r\n        {\r\n            alert( 'time_out should be greater than time_in' )\r\n            pass = false;\r\n        }\r\n\r\n        // IF BREAK OUT IS GREATER THAN BREAK IN\r\n        if ( Marking.mark_break_in && Marking.mark_break_out && NewAttendance.break_out < NewAttendance.break_in )\r\n        {\r\n            alert( 'break_out should be greater than break_in' )\r\n            pass = false;\r\n        }\r\n\r\n        // IF BREAK OUT IS GREATER THAN TIME OUT\r\n        if ( Marking.mark_time_out && Marking.mark_break_out && NewAttendance.break_out > NewAttendance.time_out )\r\n        {\r\n            alert( 'break_out should be less than time_out' )\r\n            pass = false;\r\n        }\r\n\r\n        // IF BREAK IN IS GREATER THAN TIME OUT\r\n        if ( Marking.mark_time_out && Marking.mark_break_in && NewAttendance.break_in > NewAttendance.time_out )\r\n        {\r\n            alert( 'break_in should be less than time_out' )\r\n            pass = false;\r\n        }\r\n\r\n        // IF BREAK IN IS LESS THAN TIME IN\r\n        if ( Marking.mark_time_in && Marking.mark_break_in && NewAttendance.break_in < NewAttendance.time_in )\r\n        {\r\n            alert( 'break_in should be greater than time_in' )\r\n            pass = false;\r\n        }\r\n\r\n        // IF BREAK OUT IS LESS THAN TIME IN\r\n        if ( Marking.mark_time_in && Marking.mark_break_out && NewAttendance.break_out < NewAttendance.time_in )\r\n        {\r\n            alert( 'break_out should be greater than time_in' )\r\n            pass = false;\r\n        }\r\n\r\n        return pass;\r\n\r\n    }\r\n\r\n    const Submit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        let pass = Validation();\r\n\r\n        if ( pass )\r\n        {\r\n            $('button[type=submit]').prop('disabled', true);\r\n            const Data = new FormData();\r\n            Data.append('time_in', NewAttendance.time_in)\r\n            Data.append('time_out', NewAttendance.time_out)\r\n            Data.append('break_in', NewAttendance.break_in)\r\n            Data.append('break_out', NewAttendance.break_out)\r\n            Data.append('date_time', new Date().toString())\r\n            Data.append('request_by', sessionStorage.getItem('EmpID'))\r\n            Data.append('request_to', Form.submit_to)\r\n            Data.append('request_type', Form.request_type)\r\n            Data.append('reason', Form.reason)\r\n            Data.append('record_date', Form.date)\r\n            Data.append('snapshot', SnapShot)\r\n            Data.append('prev_attendance', JSON.stringify( Attendance ))\r\n    \r\n            axios.post(\r\n                '/newattendancerequest',\r\n                Data\r\n            ).then(\r\n                () => {\r\n    \r\n                    ShowNotification(\"Request sent\", 'top-center');\r\n                    setOpenForm(false);\r\n    \r\n                    setForm({\r\n                        date: '',\r\n                        reason: '',\r\n                        submit_to: '',\r\n                        request_type: '',\r\n                        request_for: '',\r\n                        current_time: '',\r\n                        new_time: '',\r\n                    });\r\n    \r\n    \r\n                    setDetailsView(false);\r\n                    setSnapShot(null);\r\n    \r\n                    setAttendance(\r\n                        {\r\n                            time_in: '',\r\n                            time_out: '',\r\n                            break_in: '',\r\n                            break_out: ''\r\n                        }\r\n                    );\r\n    \r\n                    setNewAttendance(\r\n                        {\r\n                            time_in: '',\r\n                            time_out: '',\r\n                            break_in: '',\r\n                            break_out: '',\r\n                            time_in_check: false,\r\n                            time_out_check: false, \r\n                            break_in_check: false, \r\n                            break_out_check: false \r\n                        }\r\n                    );\r\n    \r\n                    $('a[type=reset]').trigger('click');\r\n                    const Data2 = new FormData();\r\n                    Data2.append('eventID', 4);\r\n                    Data2.append('receiverID', Form.submit_to);\r\n                    Data2.append('senderID', sessionStorage.getItem('EmpID'));\r\n                    Data2.append('Title', sessionStorage.getItem('name'));\r\n                    Data2.append('NotificationBody', sessionStorage.getItem('name') + ' sent an attendance request on the portal.');\r\n                    axios.post('/newnotification', Data2).then(() => {\r\n    \r\n                        axios.post('/sendmail', Data2).then(() => {\r\n    \r\n                        })\r\n                    })\r\n    \r\n                    setTimeout(() => {\r\n                        socket.emit('NewNotification', Form.submit_to);\r\n                        socket.emit('newattendancerequest', '');\r\n                        history.replace('/attendance_request');\r\n                    }, 500);\r\n    \r\n                }\r\n            ).catch(\r\n                err => {\r\n    \r\n                    console.log(err)\r\n    \r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const buttonslideSnapeshot = () => {\r\n        if ($('.buttonslideSnapeshot').html() === 'Hide') {\r\n            $('.buttonslideSnapeshot').html('Show');\r\n        } else {\r\n            $('.buttonslideSnapeshot').html('Hide');\r\n        }\r\n        $('.slideSnapeshot').slideToggle();\r\n    }\r\n\r\n    const d = new Date();\r\n\r\n    const OnChangeSelect = (e) => {\r\n        const { value, name } = e.target;\r\n\r\n        let val = {};\r\n        if \r\n        ( \r\n            value === 'mark' ||\r\n            value === 'approve' ||\r\n            value === 'reject '\r\n        )\r\n        {\r\n            val = {\r\n                ...RequestAction,\r\n                request_send_to: '',\r\n                [name]: value\r\n            }\r\n        }else\r\n        {\r\n            val = {\r\n                ...RequestAction,\r\n                [name]: value\r\n            }\r\n        }\r\n\r\n\r\n        setRequestAction(val);\r\n    }\r\n\r\n    const OpenRemarks = ( id, request_id ) => {\r\n\r\n        const content = \r\n        <form className=\"w-100 text-right\" onSubmit={ ( e ) => TakeAction( e, id, request_id ) }>\r\n            <textarea name=\"remarks\" className=\"form-control\" placeholder='remarks' required minLength='10'></textarea>\r\n            <button className=\"btn btn-outline-dark btn-sm mt-2\">\r\n                submit\r\n            </button>\r\n        </form>\r\n\r\n        setContent( content );\r\n        setShowModal( true );\r\n\r\n    }\r\n\r\n    const TakeAction = ( e, id, request_id ) => {\r\n\r\n        e.preventDefault();\r\n        let status = document.getElementById('record_status');\r\n\r\n        axios.post(\r\n            '/performactionforattrequest',\r\n            {\r\n                request_id: request_id,\r\n                id: id,\r\n                emp_id: sessionStorage.getItem('EmpID'),\r\n                date_time: new Date().toString(),\r\n                status: RequestAction.request_action,\r\n                forward_to: RequestAction.request_send_to,\r\n                remarks: e.target['remarks'].value,\r\n                time_in: NewAttendance.time_in,\r\n                time_out: NewAttendance.time_out,\r\n                break_in: NewAttendance.break_in,\r\n                break_out: NewAttendance.break_out,\r\n                time_in_check: NewAttendance.time_in_check,\r\n                time_out_check: NewAttendance.time_out_check,\r\n                break_in_check: NewAttendance.break_in_check,\r\n                break_out_check: NewAttendance.break_out_check,\r\n                request_type: RequestDetails.request_info.request_type,\r\n                request_by: RequestDetails.reviews[0].request_by,\r\n                record_date: new Date( RequestDetails.request_info.date ).toString(),\r\n                record_status: status ? status.value : null\r\n            }\r\n        ).then(\r\n            () => {\r\n\r\n                setRequestDetails(\r\n                    {\r\n                        emp_info: {},\r\n                        request_info: {},\r\n                        reviews: []\r\n                    }\r\n                )\r\n                setRequestAction(\r\n                    {\r\n                        request_action: '',\r\n                        request_send_to: '',\r\n                    }\r\n                );\r\n\r\n                setDetailsView(false);\r\n                setOpenForm(false);\r\n                setShowModal( false );\r\n                // setSubmittion( true );\r\n                \r\n                let forward = false;\r\n                if ( RequestAction.request_send_to === 'null' || RequestAction.request_send_to === '' || RequestAction.request_send_to === null )\r\n                {\r\n                    forward = false;\r\n                }else\r\n                {\r\n                    forward = true;\r\n                }\r\n\r\n                if ( forward )\r\n                {\r\n                    const Data2 = new FormData();\r\n                    Data2.append('eventID', 4);\r\n                    Data2.append('receiverID', RequestAction.request_send_to);\r\n                    Data2.append('senderID', sessionStorage.getItem('EmpID'));\r\n                    Data2.append('Title', sessionStorage.getItem('name'));\r\n                    Data2.append('NotificationBody', sessionStorage.getItem('name') + ' put forward an attendance request on the portal.');\r\n                    axios.post('/newnotification', Data2).then(() => {\r\n    \r\n                        axios.post('/sendmail', Data2).then(() => {\r\n    \r\n                        })\r\n                    })\r\n                }\r\n\r\n                const Data2 = new FormData();\r\n                Data2.append('eventID', 4);\r\n                Data2.append('receiverID', RequestDetails.reviews[0].request_by);\r\n                Data2.append('senderID', sessionStorage.getItem('EmpID'));\r\n                Data2.append('Title', sessionStorage.getItem('name'));\r\n                Data2.append('NotificationBody', 'Your attendance request on the portal is now ' + RequestAction.request_action + '.');\r\n                axios.post('/newnotification', Data2).then(() => {\r\n\r\n                    axios.post('/sendmail', Data2).then(() => {\r\n\r\n                    })\r\n                })\r\n\r\n                history.replace('/attendance_request');\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err)\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const onCLose = () => {\r\n\r\n        setShowModal( !ShowModal );\r\n\r\n    }\r\n\r\n    const EditAttendance = ( data ) => {\r\n\r\n        setNewAttendance(\r\n            {\r\n                ...NewAttendance,\r\n                time_in: data.time_in,\r\n                time_out: data.time_out,\r\n                break_in: data.break_in,\r\n                break_out: data.break_out\r\n            }\r\n        )\r\n\r\n        setTimeout(() => {\r\n            if ( data.time_in === null || data.time_in === 'null' )\r\n            {\r\n                $('#time_in_check').prop('disabled', true);\r\n                $('input[type=checkbox][name=time_in_check]').prop('checked', true);\r\n            }\r\n            if ( data.time_out === null || data.time_out === 'null' )\r\n            {\r\n                $('#time_out_check').prop('disabled', true);\r\n                $('input[type=checkbox][name=time_out_check]').prop('checked', true);\r\n            }\r\n            if ( data.break_in === null || data.break_in === 'null' )\r\n            {\r\n                $('#break_in_check').prop('disabled', true);\r\n                $('input[type=checkbox][name=break_in_check]').prop('checked', true);\r\n            }\r\n            if ( data.break_out === null || data.break_out === 'null' )\r\n            {\r\n                $('#break_out_check').prop('disabled', true);\r\n                $('input[type=checkbox][name=break_out_check]').prop('checked', true);\r\n            }\r\n        }, 150);\r\n\r\n    }\r\n\r\n    const onMarkChange = ( e ) => {\r\n\r\n        const { checked, name } = e.target;\r\n\r\n        let id = name.split('_');\r\n        id.shift();\r\n        const val = {\r\n            ...Marking,\r\n            [name]: checked\r\n        }\r\n        setMarking( val );\r\n        \r\n        // setTimeout(() => {\r\n        //     $('#' + id.join('_')).prop('required', checked);\r\n        // }, 100);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={ ShowModal } Hide={ onCLose } content={ Content } />\r\n            <div className=\"Attandence_Request\">\r\n                <div className=\"Attandence_Request_Top\" >\r\n                    <div className=\"Attandence_Request_Top_left\">\r\n\r\n                        <div className=\"dropdown_filter\">\r\n                            <p className=\"font-weight-bold\">Attandence Requests</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"Attandence_Request_Top_right\">\r\n                        \r\n                        {\r\n                            RequestDetails.emp_info.name\r\n                            ?\r\n                            RequestList.map(\r\n                                ( val ) => {\r\n\r\n                                    if ( parseInt( window.location.href.split('/').pop().split('_').pop() ) === val.id )\r\n                                    {\r\n                                        let options = [];\r\n                                        if ( parseInt( val.request_by ) === parseInt( sessionStorage.getItem('EmpID') ) )\r\n                                        {\r\n                                            if ( CheckCancellation() )\r\n                                            {\r\n                                                options.push(<option value=\"cancel\">Cancel</option>);\r\n                                                Marking( options );\r\n                                            }\r\n                                        }else\r\n                                        {\r\n                                            if ( val.request_status === 'sent' )\r\n                                            {\r\n                                                Marking( options );\r\n                                                \r\n                                                \r\n                                                {/* options.push(<option value=\"approve\">Approve</option>);\r\n                                                options.push(<option value=\"approve_&_forward\">Approve & Forward</option>); */}\r\n                                                options.push(<option value=\"reject\">Reject</option>);\r\n                                                {/* options.push(<option value=\"reject_&_forward\">Reject & Forward</option>); */}\r\n                                            }else\r\n                                            if ( val.request_status === 'approve & forward' )\r\n                                            {\r\n                                                Marking( options );\r\n                                            }else\r\n                                            if ( val.request_status === 'approve' )\r\n                                            {\r\n                                                Marking( options );\r\n                                                // eslint-disable-next-line no-lone-blocks\r\n                                                {/* options.push(<option value=\"approve_&_forward\">Approve & Forward</option>); */}\r\n                                            }else\r\n                                            if ( val.request_status === 'reject' )\r\n                                            {\r\n                                                {/* options.push(<option value=\"reject_&_forward\">Reject & Forward</option>); */}\r\n                                            }\r\n\r\n                                        }\r\n\r\n                                        function Marking( options )\r\n                                        {\r\n\r\n                                            if ( AccessControls.access && CheckCancellation() )\r\n                                            {\r\n                                                if ( JSON.parse(AccessControls.access).includes(101) )\r\n                                                {\r\n                                                    options.push(<option value=\"mark\">Mark</option>);\r\n                                                    {/* options.push(<option value=\"mark_&_forward\">Mark & Forward</option>); */}\r\n                                                }\r\n                                            }\r\n                                            return options;\r\n\r\n                                        }\r\n\r\n                                        function CheckCancellation()\r\n                                        {\r\n                                            let val = true;\r\n                                            for ( let x = 0; x < RequestDetails.reviews.length; x++ )\r\n                                            {\r\n\r\n                                                if ( RequestDetails.reviews[x].request_status === 'cancel' || RequestDetails.reviews[x].request_status === 'mark' || RequestDetails.reviews[x].request_status === 'mark_&_forward' )\r\n                                                {\r\n                                                    val = false;\r\n                                                }\r\n\r\n                                            }\r\n                                            return val;\r\n                                        }\r\n\r\n                                        return (\r\n                                            <>\r\n                                                {\r\n                                                    val.request_status === 'mark_&_forward'\r\n                                                    ?\r\n                                                    null\r\n                                                    :\r\n                                                    <select name=\"request_action\" id=\"\" className='form-control col-sm-3 mr-2 form-control-sm request_action' onChange={OnChangeSelect}>\r\n                                                        <option value=\"\">select</option>\r\n                                                        { options }\r\n                                                    </select>\r\n                                                }\r\n\r\n                                                {\r\n                                                    RequestAction.request_action === \"approve_&_forward\" || RequestAction.request_action === \"reject_&_forward\" || RequestAction.request_action === \"mark_&_forward\"\r\n                                                    ?\r\n                                                    <select name=\"request_send_to\" id=\"\" className='form-control col-sm-3 mr-2 form-control-sm request_send_to' onChange={OnChangeSelect}>\r\n                                                        <option value=\"\">select</option>\r\n                                                        {\r\n                                                            Relations.map(\r\n                                                                (val, index) => {\r\n\r\n                                                                    let option;\r\n                                                                    if ( val.category === 'all' || val.category.includes('attendance_request') )\r\n                                                                    {\r\n                                                                        option = <option value={val.sr} key={index}> {val.name} </option>;\r\n                                                                    }\r\n\r\n                                                                    return option;\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                    </select>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                                {\r\n                                                    RequestAction.request_action === ''\r\n                                                    ?\r\n                                                    null\r\n                                                    :\r\n                                                    RequestAction.request_send_to === 0 && ( RequestAction.request_action === \"approve_&_forward\" || RequestAction.request_action === \"reject_&_forward\" )\r\n                                                    ?\r\n                                                    null\r\n                                                    :\r\n                                                    <div onClick={ () => OpenRemarks( val.id, val.request_id ) } className=\"btn sendbutton\">Send</div>\r\n                                                }\r\n\r\n                                            </>\r\n                                        )\r\n                                    }else\r\n                                    {\r\n                                        return false;\r\n                                    }\r\n\r\n                                }\r\n                            )\r\n                            :\r\n                            null\r\n                        }\r\n\r\n\r\n\r\n\r\n                        <NavLink to='/attendance_request/new' className=\"btn New_button\"> <i class=\"las la-plus\"></i> <p>New</p></NavLink>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    OpenForm\r\n\r\n                        ?\r\n\r\n                        <AttRequestForm\r\n                            OnChangeHandler={OnChangeHandler}\r\n                            OnTimeChange={OnTimeChange}\r\n                            onChangeCheck={onChangeCheck}\r\n                            onUploadSnap={onImageUpload}\r\n                            onMarkChange={ onMarkChange }\r\n                            closebutton={closebutton}\r\n                            Submit={Submit}\r\n                            \r\n                            Dates={ Dates }\r\n                            Form={Form}\r\n                            date={d}\r\n                            Attendance={Attendance}\r\n                            SnapShot={SnapShot}\r\n                            Relations={Relations}\r\n                            Marking={ Marking }\r\n                            NewAttendance={ NewAttendance }\r\n                        />\r\n\r\n                        :\r\n\r\n                        <>\r\n\r\n                            <div className=\"Attandence_Request_breadcrums\">\r\n                                <div className='d-flex'>\r\n                                    <p>\r\n                                        Total Requests :\r\n                                    </p>\r\n                                    <p className='ml-2' style={{color: 'gray'}} >{RequestList.length}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {\r\n                                DetailsView\r\n                                    ?\r\n                                    <View2\r\n                                        RequestList={RequestList}\r\n                                        RequestDetails={RequestDetails}\r\n                                        NewAttendance={ NewAttendance }\r\n                                        AccessControls={ AccessControls }\r\n\r\n                                        buttonslideSnapeshot={buttonslideSnapeshot}\r\n                                        OnTimeChange={ OnTimeChange }\r\n                                    />\r\n                                    :\r\n                                    <View\r\n                                        View={View}\r\n                                        RequestList={RequestList}\r\n                                    />\r\n\r\n                            }\r\n\r\n\r\n                        </>\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Attandence_Request;\r\n\r\nconst View = ({ RequestList }) => {\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                <table className=\"table table-sm table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th>Request By</th>\r\n                            <th className='column-lg'>Date</th>\r\n                            <th>Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            RequestList.map(\r\n                                (val, index) => {\r\n\r\n                                    const d = new Date(val.request_date);\r\n                                    let newBadge = <p className=\"newBadge dontSHow\"></p>;\r\n\r\n                                    if ( d )\r\n                                    {\r\n                                        if ( new Date().getDate() === d.getDate() )\r\n                                        {\r\n                                            newBadge = <p className=\"newBadge\">new</p>;\r\n                                        }\r\n                                    }\r\n\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            { newBadge }\r\n                                            <td> <NavLink to={'/attendance_request/' + val.request_id + '_' + val.id}> <img className=\"d-block mx-auto\" src={ 'images/employees/' + val.emp_image } alt=\"\" /></NavLink>  </td>\r\n                                            <td className='column-sm'> \r\n                                                <NavLink to={'/attendance_request/' + val.request_id + '_' + val.id}> {val.sender_name}</NavLink>\r\n                                                <NavLink to={'/attendance_request/' + val.request_id + '_' + val.id}> {d ? d.toDateString() : null}</NavLink>  \r\n                                            </td>\r\n                                            <td className='column-lg'> <NavLink to={'/attendance_request/' + val.request_id + '_' + val.id}> {val.sender_name}</NavLink>  </td>\r\n                                            <td className='column-lg'> <NavLink to={'/attendance_request/' + val.request_id + '_' + val.id}> {d ? d.toDateString() : null}</NavLink>  </td>\r\n                                            <td> <NavLink style={ { backgroundColor: \"var(--black)\" } } className=\"text-white px-3 rounded-pill\" to={'/attendance_request/' + val.request_id + '_' + val.id}> {val.request_status}</NavLink>  </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst AttRequestForm = (props) => {\r\n\r\n    const [Attendance, setAttendance] = useState(\r\n        {\r\n            time_in: '',\r\n            time_out: '',\r\n            break_in: '',\r\n            break_out: ''\r\n        }\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setAttendance(props.Attendance);\r\n\r\n        }, [props.Attendance]\r\n    )\r\n\r\n    return (\r\n        <form className=\"Attandence_Request_form\" onSubmit={props.Submit}>\r\n\r\n            <h5 className=\"font-weight-bold\">Add New Request</h5>\r\n\r\n            <div className=\"Attandence_Request_form_div\">\r\n\r\n                <div>\r\n                    <p>Request type</p>\r\n                    <select id=\"\" className=\"form-control form-control-sm\" onChange={props.OnChangeHandler} name='request_type' required >\r\n                        <option value=\"\">select</option>\r\n                        <option value='update'>Update</option>\r\n                        <option value='insert'>Insert</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className='my-3'>\r\n                    <p>Date</p>\r\n                    {/* <input type=\"date\" onChange={props.OnChangeHandler} className=\"form-control form-control-sm\" name='date' required /> */}\r\n                    <select id=\"\" className=\"form-control form-control-sm\" onChange={props.OnChangeHandler} name='date' required >\r\n                        <option value={ new Date().toString() }>{ new Date().toDateString() }</option>\r\n                        {\r\n                            props.Dates.map(\r\n                                val => {\r\n\r\n                                    return <option value={ new Date(val.date).toString() }>{ new Date(val.date).toDateString() }</option>\r\n\r\n                                }\r\n                            )\r\n                        }\r\n                    </select>\r\n\r\n                </div>\r\n\r\n                {\r\n                    props.Form.request_type === ''\r\n                    ?\r\n                    null\r\n                    :\r\n                    <>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <input type=\"checkbox\" name='mark_time_in' onChange={props.onMarkChange} /> <span className=\"pl-2\">Mark time in</span>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <input type=\"checkbox\" name='mark_time_out' onChange={props.onMarkChange} /> <span className=\"pl-2\">Mark time out</span>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <input type=\"checkbox\" name='mark_break_in' onChange={props.onMarkChange} /> <span className=\"pl-2\">Mark break in</span>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <input type=\"checkbox\" name='mark_break_out' onChange={props.onMarkChange} /> <span className=\"pl-2\">Mark break out</span>\r\n                        </div>\r\n                    </>\r\n                }\r\n\r\n                {\r\n                    props.Marking.mark_time_in\r\n                    ?\r\n                    <div>\r\n                        <div className='d-flex'>\r\n                            <div className='w-100 mr-1'>\r\n                                <p>Time In</p>\r\n                                <input type=\"time\" disabled className=\"form-control form-control-sm\" name=\"time_in\" value={Attendance.time_in} />\r\n                            </div>\r\n                            <div className='w-100 ml-1'>\r\n                                <p>New Time In</p>\r\n                                <input type=\"time\" className=\"form-control form-control-sm\" onChange={props.OnTimeChange} value={props.NewAttendance.time_in} name=\"time_in\" id=\"time_in\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-end align-items-center mt-1' style={{ marginRight: '212px' }}>\r\n                            <input type=\"checkbox\" name='time_in' onChange={props.onChangeCheck} />\r\n                            <label for=\"time_in\"> Set to Null </label>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n\r\n                {\r\n                    props.Marking.mark_time_out\r\n                    ?\r\n                    <div className='my-2'>\r\n                        <div className='d-flex'>\r\n                            <div className='w-100 mr-1'>\r\n                                <p>Time Out</p>\r\n                                <input type=\"time\" disabled className=\"form-control form-control-sm\" name=\"time_out\" value={Attendance.time_out} />\r\n                            </div>\r\n                            <div className='w-100 ml-1'>\r\n                                <p>New Time Out</p>\r\n                                <input type=\"time\" className=\"form-control form-control-sm\" onChange={props.OnTimeChange} value={props.NewAttendance.time_out} name=\"time_out\" id=\"time_out\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-end align-items-center mt-1' style={{ marginRight: '212px' }}>\r\n                            <input type=\"checkbox\" name='time_out' onChange={props.onChangeCheck} />\r\n                            <label for=\"time_out\"> Set to Null </label>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n\r\n                {\r\n                    props.Marking.mark_break_in\r\n                    ?\r\n                    <div className='mb-2'>\r\n                        <div className='d-flex'>\r\n                            <div className='w-100 mr-1'>\r\n                                <p>Break In</p>\r\n                                <input type=\"time\" disabled className=\"form-control form-control-sm\" name=\"break_in\" value={Attendance.break_in} />\r\n                            </div>\r\n                            <div className='w-100 ml-1'>\r\n                                <p>New Break In</p>\r\n                                <input type=\"time\" className=\"form-control form-control-sm\" onChange={props.OnTimeChange} value={props.NewAttendance.break_in} name=\"break_in\" id='break_in' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-end align-items-center mt-1' style={{ marginRight: '212px' }}>\r\n                            <input type=\"checkbox\" name='break_in' onChange={props.onChangeCheck} />\r\n                            <label for=\"break_in\"> Set to Null </label>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n\r\n                {\r\n                    props.Marking.mark_break_out\r\n                    ?\r\n                    <div>\r\n                        <div className='d-flex'>\r\n                            <div className='w-100 mr-1'>\r\n                                <p>Break Out</p>\r\n                                <input type=\"time\" disabled className=\"form-control form-control-sm\" name=\"break_out\" value={Attendance.break_out} />\r\n                            </div>\r\n                            <div className='w-100 ml-1'>\r\n                                <p>New Break Out</p>\r\n                                <input type=\"time\" className=\"form-control form-control-sm\" onChange={props.OnTimeChange} value={props.NewAttendance.break_out} name=\"break_out\" id='break_out' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-end align-items-center mt-1' style={{ marginRight: '212px' }}>\r\n                            <input type=\"checkbox\" name='break_out' onChange={props.onChangeCheck} />\r\n                            <label for=\"break_out\"> Set to Null </label>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n\r\n                <div className='my-3'>\r\n                    <p>Reason</p>\r\n                    <textarea onChange={props.OnChangeHandler} value={props.reason} className=\"form-control form-control-sm\" name='reason' required />\r\n                </div>\r\n                <div>\r\n\r\n                    {\r\n                        props.SnapShot !== null\r\n                            ?\r\n                            <div className='d-flex justify-content-between'>\r\n                                <p className='mb-2'>Snapshot <sub>(Optional)</sub></p>\r\n                                <i class=\"las la-times-circle\" onClick={props.closebutton} style={{ fontSize: '20px', cursor: 'pointer' }} ></i>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <p className='mb-2'>Snapshot <sub>(Optional)</sub></p>\r\n                            </div>\r\n                    }\r\n                    {\r\n                        props.SnapShot !== null\r\n                            ?\r\n                            <img src={props.SnapShot} width='100%' alt=\"snap\" />\r\n                            :\r\n                            <input type=\"file\" onChange={props.onUploadSnap} />\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Attandence_Request_form_button\" >\r\n\r\n                <div className=''>\r\n                    <span>Submit to :\r\n                        <select name=\"submit_to\" onChange={props.OnChangeHandler} id=\"\" className=\"form-control form-control-sm\" required>\r\n                            <option value=''> select </option>\r\n                            {\r\n                                props.Relations.map(\r\n                                    (val, index) => {\r\n                                        let option;\r\n                                        if ( val.category === 'all' || val.category.includes('attendance_request') )\r\n                                        {\r\n                                            option = <option value={val.sr} key={index}> {val.name} </option>;\r\n                                        }\r\n\r\n                                        return option;\r\n                                    }\r\n                                )\r\n                            }\r\n                        </select>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"d-flex\">\r\n                    <NavLink to=\"/attendance_request\" className=\"btn btn-sm cancle\" type=\"reset\" >Cancle</NavLink>\r\n                    {\r\n                        props.Form.submit_to === ''\r\n                        ?\r\n                        null\r\n                        :\r\n                        <button className=\"btn btn-sm submit\" type=\"submit\">Submit</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nconst View2 = ({ RequestList, RequestDetails, buttonslideSnapeshot, OnTimeChange, NewAttendance, AccessControls }) => {\r\n\r\n    const [ Marked, setMarked ] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let marked = false;\r\n            RequestDetails.reviews.filter(\r\n                val => {\r\n\r\n                    marked = false;\r\n                    if ( val.request_status === 'mark' || val.request_status === 'mark_&_forward' || val.request_status === 'cancel' ) // || val.request_by === parseInt(sessionStorage.getItem('EmpID')) )\r\n                    {\r\n                        marked = true;\r\n                    }\r\n                    return marked;\r\n\r\n                }\r\n            )\r\n            setMarked( marked );\r\n\r\n        }, [ RequestDetails.reviews ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n            $('.responsive_left').hide(0);\r\n        },[]\r\n    )\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='View2'>\r\n\r\n                <div className='View2_left'>\r\n\r\n                    <table className=\"table table-sm table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Request By</th>\r\n                                <th>Request Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                RequestList.map(\r\n                                    (val, index) => {\r\n\r\n                                        const d = new Date(val.request_date);\r\n\r\n                                        return (\r\n                                            <tr key={index} >\r\n                                                <td> <NavLink to={'/attendance_request/' + val.request_id + '_' + val.id}> {val.sender_name}</NavLink>  </td>\r\n                                                <td> <NavLink to={'/attendance_request/' + val.request_id + '_' + val.id}> {d ? d.toDateString() : null}</NavLink>  </td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n                <div className='View2_right'>\r\n                    <div className='top'>\r\n                        <div className='View2_grid' >\r\n                            <div className='View2_image'>\r\n                                <img src={'images/employees/' + RequestDetails.emp_info.emp_image} alt=\"\" />\r\n                            </div>\r\n                            <div>\r\n                                <h4 className='mb-3'>Employee Details</h4>\r\n                                <div className='details'>\r\n                                    <p className='mr-2'>Name :</p>\r\n                                    <p className='ml-2' style={{ color: 'gray' }} >{RequestDetails.emp_info.name}</p>\r\n                                </div>\r\n\r\n                                <div className='details'>\r\n                                    <p className='mr-2'>Designation :</p>\r\n                                    <p className='ml-2' style={{ color: 'gray' }} >{RequestDetails.emp_info.designation_name}</p>\r\n                                </div>\r\n\r\n                                <div className='details'>\r\n                                    <p className='mr-2'>Department :</p>\r\n                                    <p className='ml-2' style={{ color: 'gray' }} >{RequestDetails.emp_info.department_name}</p>\r\n                                </div>\r\n\r\n                                <div className='details'>\r\n                                    <p className='mr-2'>Company :</p>\r\n                                    <p className='ml-2' style={{ color: 'gray' }} >{RequestDetails.emp_info.company_name}</p>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='bottom mb-4'>\r\n\r\n                        <div>\r\n                            <h4>Request Details</h4>\r\n                        </div>\r\n\r\n                        <div className='details'>\r\n                            <p>Reason : </p>\r\n                            <p style={{ color: 'gray' }} >{RequestDetails.request_info.reason}</p>\r\n                        </div>\r\n\r\n                        <div className='details'>\r\n                            <p>Date : </p>\r\n                            <p style={{ color: 'gray' }} >{new Date(RequestDetails.request_info.date).toDateString()}</p>\r\n                        </div>\r\n\r\n                        <div className='details'>\r\n                            <p >Request Type : </p>\r\n                            <p style={{ color: 'gray' }} >{RequestDetails.request_info.request_type}</p>\r\n                        </div>\r\n\r\n                        <div className='details'>\r\n                            <p>Snapshot : </p>\r\n                            <div>\r\n                                {\r\n                                    RequestDetails.request_info.snapshot === null\r\n                                        ?\r\n                                        <p style={{ color: 'gray' }}>No Snapshot</p>\r\n                                        :\r\n                                        <>\r\n                                            <div className='buttonslideSnapeshot' onClick={buttonslideSnapeshot}>show</div>\r\n                                            <div className='slideSnapeshot' >\r\n                                                <img src={RequestDetails.request_info.snapshot} alt=\"\" />\r\n                                            </div>\r\n                                        </>\r\n\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            RequestDetails.reviews.map(\r\n                                ( val, index ) => {\r\n\r\n                                    let sender = [];\r\n                                    sender = val.sender_name.split(' ');\r\n                                    if ( sender.length > 2 )\r\n                                    {\r\n                                        sender.pop();\r\n                                    }\r\n\r\n                                    let content = null;\r\n                                    if ( index < RequestDetails.reviews.length )\r\n                                    {\r\n                                        content = (\r\n                                            <div className='' key={ index }>\r\n                                                <p>{ sender.join(' ') } timings : </p>\r\n                                                <div>\r\n                                                    <table className=\"table table-sm\">\r\n\r\n                                                        <thead>\r\n                                                            <tr>\r\n\r\n                                                                <th> Time in </th>\r\n                                                                <th> Time out </th>\r\n                                                                <th> Break in </th>\r\n                                                                <th> Break out </th>\r\n\r\n                                                            </tr>\r\n                                                        </thead>\r\n\r\n                                                        <tbody>\r\n                                                            <tr>\r\n\r\n                                                                <td> { val.time_in } </td>\r\n                                                                <td> { val.time_out } </td>\r\n                                                                <td> { val.break_in } </td>\r\n                                                                <td> { val.break_out } </td>\r\n\r\n                                                            </tr>\r\n                                                        </tbody>\r\n\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) \r\n                                    }\r\n\r\n                                    return content;\r\n\r\n                                }\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            Marked\r\n                            ?\r\n                            null\r\n                            :\r\n                            AccessControls.access && RequestDetails.reviews.length > 0 //&& RequestDetails.reviews[0].request_by !== parseInt( sessionStorage.getItem('EmpID') )\r\n                            ?\r\n                            JSON.parse(AccessControls.access).includes(101) || JSON.parse(AccessControls.access).includes(1)\r\n                            ?\r\n                            <div className='details'>\r\n                                <p>Your timings : </p>\r\n                                <div>\r\n                                    <table className=\"table table-sm\">\r\n\r\n                                        <tbody>\r\n                                            <tr>\r\n\r\n                                                <td className=\"text-left\">\r\n                                                    <input type='time' name=\"time_in\" id=\"time_in_check\" value={ NewAttendance.time_in } style={ { width: '100% !important' } } onChange={ OnTimeChange } /> \r\n                                                    <div className='w-100 text-left d-flex align-items-center'>\r\n                                                        <input onChange={ OnTimeChange } type='checkbox' name=\"time_in_check\" /> <span> Set to null </span>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"text-left\">\r\n                                                    <input type='time' name=\"time_out\" id=\"time_out_check\" value={ NewAttendance.time_out } style={ { width: '100% !important' } } onChange={ OnTimeChange } /> \r\n                                                    <div className='w-100 text-left d-flex align-items-center'>\r\n                                                        <input onChange={ OnTimeChange } type='checkbox' name=\"time_out_check\" /> <span> Set to null </span>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"text-left\">\r\n                                                    <input type='time' name=\"break_in\" id=\"break_in_check\" value={ NewAttendance.break_in } style={ { width: '100% !important' } } onChange={ OnTimeChange } /> \r\n                                                    <div className='w-100 text-left d-flex align-items-center'>\r\n                                                        <input onChange={ OnTimeChange } type='checkbox' name=\"break_in_check\" /> <span> Set to null </span>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"text-left\">\r\n                                                    <input type='time' name=\"break_out\" id=\"break_out_check\" value={ NewAttendance.break_out } style={ { width: '100% !important' } } onChange={ OnTimeChange } /> \r\n                                                    <div className='w-100 text-left d-flex align-items-center'>\r\n                                                        <input onChange={ OnTimeChange } type='checkbox' name=\"break_out_check\" /> <span> Set to null </span>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"text-left\">\r\n                                                    <select name=\"\" id=\"record_status\" defaultValue='Present'>\r\n                                                        <option value=\"Present\">Present</option>\r\n                                                        <option value=\"Late\">Late</option>\r\n                                                        <option value=\"Absent\">Absent</option>\r\n                                                        <option value=\"Holiday\">Holiday</option>\r\n                                                        <option value=\"OFF\">OFF</option>\r\n                                                    </select>\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                        </tbody>\r\n\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            null\r\n                            :\r\n                            null\r\n                        }\r\n\r\n                        {\r\n                            RequestDetails.request_info.marked_time_in === null &&\r\n                            RequestDetails.request_info.marked_time_out === null &&\r\n                            RequestDetails.request_info.marked_break_in === null &&\r\n                            RequestDetails.request_info.marked_break_out === null\r\n                            ?\r\n                            null\r\n                            :\r\n                            <div className='details'>\r\n                                <p>Marked timings : </p>\r\n                                <div>\r\n                                    <table className=\"table table-sm\">\r\n\r\n                                        <thead>\r\n                                            <tr>\r\n\r\n                                                <th> Time in </th>\r\n                                                <th> Time out </th>\r\n                                                <th> Break in </th>\r\n                                                <th> Break out </th>\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody>\r\n                                            <tr>\r\n\r\n                                                <td> { RequestDetails.request_info.marked_time_in } </td>\r\n                                                <td> { RequestDetails.request_info.marked_time_out } </td>\r\n                                                <td> { RequestDetails.request_info.marked_break_in } </td>\r\n                                                <td> { RequestDetails.request_info.marked_break_out } </td>\r\n\r\n                                            </tr>\r\n                                        </tbody>\r\n\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className='bottom'>\r\n\r\n                        <div>\r\n                            <h4>Review / Comments</h4>\r\n                        </div>\r\n\r\n\r\n                        <div className='ReviewsGrid'>\r\n\r\n                            {\r\n                                RequestDetails.reviews.map(\r\n                                    (val, index) => {\r\n\r\n                                        let receiver = [];\r\n                                        if ( val.receiver_name !== null )\r\n                                        {\r\n                                            receiver = val.receiver_name.split(' ');\r\n                                            if ( receiver.length > 1 )\r\n                                            {\r\n                                                receiver.pop();\r\n                                            }\r\n                                        }else\r\n                                        {\r\n                                            receiver = [val.sender_name];\r\n                                            if ( receiver.length > 1 )\r\n                                            {\r\n                                                receiver.pop();\r\n                                            }\r\n                                        }\r\n\r\n                                        return (\r\n                                            <>\r\n                                                <div>\r\n\r\n                                                    <div className='details' key={index}>\r\n                                                        <small className='mr-2 d-block'>From : </small>\r\n                                                        <small className='ml-2 d-block' style={{ color: 'gray' }} >{val.sender_name}</small>\r\n                                                    </div>\r\n\r\n                                                    <div className='details' key={index}>\r\n                                                        <small className='mr-2 d-block'>To : </small>\r\n                                                        <small className='ml-2 d-block' style={{ color: 'gray' }} >{val.receiver_name}</small>\r\n                                                    </div>\r\n\r\n                                                    <div className='details'>\r\n                                                        <small className='mr-2 d-block'> { receiver.join(' ') } remarks : </small>\r\n                                                        <small className='ml-2 d-block' style={{ color: 'gray' }} >{val.remarks === null ? 'No remrks yet' : val.remarks}</small>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div>\r\n\r\n                                                    <div>\r\n                                                        <p>{new Date(val.request_date).toDateString()}</p>\r\n                                                    </div>\r\n\r\n                                                    <div className='statusbox'>\r\n                                                        <p>{val.request_status}</p>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </>\r\n\r\n                                        )\r\n\r\n                                    }\r\n                                )\r\n                            }\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <NavLink to='/attendance_request' className='View2_right_cancle'>\r\n                        <i class=\"las la-times\"></i>\r\n                    </NavLink>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <ToastContainer />\r\n\r\n        </>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport './Modal.css';\r\n\r\nconst Modal = ( props ) =>{\r\n    return (\r\n        <>\r\n            <div className=\"Attandence_Request_Div\" style={ { display: props.show ? 'flex' : 'none'  } }>\r\n                <div className=\"dark\" onClick={ props.Hide }>\r\n                </div>\r\n                <div style={ { animationDelay: ( 0 + '.' + 1 ).toString() + 's' } } className={ props.show ? \"Attandence_Request_Div_Content Attandence_Request_Div_Content2\" : \"Attandence_Request_Div_Content\" }>\r\n                    {\r\n                        props.content\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Modal;"],"sourceRoot":""}