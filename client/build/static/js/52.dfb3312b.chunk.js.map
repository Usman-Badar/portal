{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseRequisition/Discussions/Drive/Drive.jsx","Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseRequisition/Discussions/Discussions.jsx"],"names":["Drive","props","useState","Data","setData","useEffect","data","className","map","val","index","style","backgroundImage","name","onClick","AttachDrive","Discussions","Show","setShow","ReplyTo","setReplyTo","EmpData","setEmpData","DriveContent","setDriveContent","Tweets","setTweets","SubTweets","setSubTweets","Employees","setEmployees","arr","added","x","length","includes","emp_id","push","designation","designation_name","department","department_name","company","company_name","socket","on","id","OpenReplyBox","condition","axios","post","chat_id","then","res","undefined","$","not","hide","toggle","catch","err","console","log","AttachDriveDocs","ShowHide","Modal","show","Hide","content","txt","body","onSubmit","onTweet","onChange","onTweetboxChange","placeholder","fontSize","required","type","d","Date","date","emp_image","src","split","alt","width","toDateString","time","e","preventDefault","setTimeout","value"],"mappings":"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","file":"static/js/52.dfb3312b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport './Drive.css';\r\n\r\nconst Drive = ( props ) => {\r\n\r\n    const [ Data, setData ] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setData( props.data );\r\n\r\n        }, [ props.data ]\r\n    )\r\n\r\n    return (\r\n        <div className=\"DicussionDrive\">\r\n            {\r\n                Data.map(\r\n                    ( val, index ) => {\r\n\r\n                        return (\r\n                            <div \r\n                                key={ index } \r\n                                className=\"DriveItem\"\r\n                                style={\r\n                                    {\r\n                                        backgroundImage: \"url('images/drive/\" + val.name + \"')\"\r\n                                    }\r\n                                }\r\n                                onClick={ () => props.AttachDrive( val.name ) }\r\n                            ></div>\r\n                        )\r\n\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Drive;","import React, { useEffect, useState } from 'react';\r\n\r\n// IMPORT CSS\r\nimport './Discussions.css';\r\nimport $ from 'jquery';\r\nimport axios from '../../../../../../../axios';\r\nimport socket from '../../../../../../../io';\r\n\r\nimport Modal from '../../../../../../UI/Modal/Modal';\r\nimport Drive from './Drive/Drive';\r\n\r\nconst Discussions = ( props ) => {\r\n\r\n    const [ Show, setShow ] = useState( false );\r\n    const [ ReplyTo, setReplyTo ] = useState(0);\r\n\r\n    const [ EmpData, setEmpData ] = useState({});\r\n    const [ DriveContent, setDriveContent ] = useState([]);\r\n\r\n    const [ Tweets, setTweets ] = useState([]);\r\n    const [ SubTweets, setSubTweets ] = useState([]);\r\n    const [ Employees, setEmployees ] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let arr = [];\r\n            let added = [];\r\n            for ( let x = 0; x < props.Tweets.length; x++ )\r\n            {\r\n                if ( !added.includes( props.Tweets[x].emp_id ) )\r\n                {\r\n                    arr.push(\r\n                        {\r\n                            name: props.Tweets[x].name,\r\n                            designation: props.Tweets[x].designation_name,\r\n                            department: props.Tweets[x].department_name,\r\n                            company: props.Tweets[x].company_name\r\n                        }\r\n                    )\r\n                    added.push( props.Tweets[x].emp_id );\r\n                }\r\n            }\r\n            setTweets( props.Tweets );\r\n            setEmployees( arr );\r\n            setEmpData( props.EmpData );\r\n\r\n            socket.on('prsubdiscussions', ( id ) => {\r\n                OpenReplyBox( id, '' );\r\n            });\r\n\r\n        }, [ props.Tweets ]\r\n    )\r\n\r\n    const OpenReplyBox = ( index, condition ) => {\r\n\r\n        axios.post(\r\n            '/getsubdiscussions',\r\n            {\r\n                chat_id: index\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setSubTweets( res.data );\r\n\r\n                if ( condition === undefined )\r\n                {\r\n                    $('.Reply').not('.Reply' + index).hide(300);\r\n                    $('.Reply' + index).toggle(300);\r\n                    $(\"textarea[name='\" + index + \"']\").val('');\r\n                }\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const onTweet = ( e, id ) => {\r\n\r\n        e.preventDefault();\r\n        props.onTweet( e );\r\n        setTimeout(() => {\r\n            OpenReplyBox( id, '' );\r\n        }, 300);\r\n\r\n    }\r\n\r\n    const AttachDriveDocs = ( id ) => {\r\n\r\n        axios.post(\r\n            '/getalldrive',\r\n            {\r\n                emp_id: EmpData.emp_id\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setDriveContent(\r\n                    res.data\r\n                );\r\n                setReplyTo( typeof( id ) === 'number' ? id : undefined );\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n        ShowHide();\r\n\r\n    }\r\n\r\n    const ShowHide = () => {\r\n\r\n        setShow( !Show );\r\n\r\n    }\r\n\r\n    const AttachDrive = ( txt ) => {\r\n\r\n        let body = '/***' + txt + '***/';\r\n        props.AttachDrive( body, ReplyTo );\r\n        ShowHide();\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"PRDiscussions\">\r\n            <Modal show={ Show } Hide={ ShowHide } content={ <Drive AttachDrive={ AttachDrive } data={ DriveContent } /> } />\r\n            \r\n            <div className=\"Left\">\r\n\r\n                {/* USER CAN TWEET */}\r\n                <form className=\"TweetBox\" onSubmit={ props.onTweet }>\r\n                    <textarea \r\n                        onChange={ props.onTweetboxChange }\r\n                        placeholder=\"Enter your message\" \r\n                        className=\"form-control\"\r\n                        name=\"tweet\"\r\n                        style={\r\n                            {\r\n                                fontSize: '13px'\r\n                            }\r\n                        }\r\n                        required\r\n                     />\r\n                    <div>\r\n                        <button type='submit' className=\"btn btn-block border-light\">Send</button>\r\n                        <button \r\n                            type='button' \r\n                            className=\"btn btn-block border-light\"\r\n                            onClick={ AttachDriveDocs }\r\n                        >\r\n                            <i className=\"las la-thumbtack\" style={ { fontSize: '17px' } }></i>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"TweetContainer\" id=\"TweetContainer\">\r\n                    {\r\n                        Tweets.map(\r\n                            ( val, index ) => {\r\n\r\n                                const d = new Date( val.date );\r\n\r\n                                return (\r\n                                    <div className=\"Tweet\" key={ index }>\r\n\r\n                                        <div className=\"upper\">\r\n                                            <div className=\"emp_img\" style={ { backgroundImage: \"url('images/employees/\" + val.emp_image + \"')\" } }></div>\r\n                                            <div>\r\n                                                <p className=\"font-weight-bold\">{ val.name }</p>\r\n                                                <p> { val.designation_name } in { val.department_name } Department, { val.company_name } </p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"body\">\r\n                                            <p>\r\n                                                {\r\n                                                    val.body.includes('/***')\r\n                                                    ?\r\n                                                    <img \r\n                                                        src={ 'images/drive/' + val.body.split('/***')[1].split('***')[0] } \r\n                                                        alt=\"discussion attachment\"\r\n                                                        width=\"100%\"\r\n                                                     />\r\n                                                    :\r\n                                                    val.body\r\n                                                }\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className='footer'>\r\n                                            <div>\r\n                                                <p className=\"font-weight-bold\">{ d.toDateString() } at { val.time }</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p onClick={ () => OpenReplyBox( val.chat_id ) } className=\"font-weight-bold\">Reply</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n\r\n                                        <form onSubmit={ ( e ) => onTweet( e, val.chat_id ) } className={ \"Reply Reply\" + val.chat_id }>\r\n                                            {\r\n                                                SubTweets.map(\r\n                                                    ( value, index ) => {\r\n\r\n                                                        const d = new Date( val.date );\r\n\r\n                                                        return (\r\n                                                            <div key={ index } className=\"SubTweet\">\r\n                                                                <div>\r\n                                                                    <div className=\"branch\"></div>\r\n                                                                </div>\r\n                                                                <div>\r\n                                                                    <div className=\"upper\">\r\n                                                                        <div className=\"emp_img\" style={{ backgroundImage: \"url('images/employees/\" + value.emp_image + \"')\" }}></div>\r\n                                                                        <div>\r\n                                                                            <p className=\"font-weight-bold\">{value.name}</p>\r\n                                                                            <p> {value.designation_name} in {value.department_name} Department, {value.company_name} </p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className=\"body\">\r\n                                                                        {\r\n                                                                            value.body.includes('/***')\r\n                                                                                ?\r\n                                                                                <img\r\n                                                                                    src={'images/drive/' + value.body.split('/***')[1].split('***')[0]}\r\n                                                                                    alt=\"discussion attachment\"\r\n                                                                                    width=\"100%\"\r\n                                                                                />\r\n                                                                                :\r\n                                                                                <p>\r\n                                                                                    { value.body }\r\n                                                                                </p>\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                    <div className='footer'>\r\n                                                                        <div>\r\n                                                                            <p className=\"font-weight-bold\">{d.toDateString()}</p>\r\n                                                                        </div>\r\n                                                                        <div>\r\n                                                                            <p className=\"font-weight-bold\">{val.time}</p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n\r\n                                                    }\r\n                                                )\r\n                                            }\r\n                                            <textarea\r\n                                                onChange={ props.onTweetboxChange }\r\n                                                placeholder=\"Enter your message\" \r\n                                                className=\"form-control mt-2\"\r\n                                                name={ val.chat_id }\r\n                                                style={\r\n                                                    {\r\n                                                        fontSize: '12px'\r\n                                                    }\r\n                                                }\r\n                                             />\r\n                                            <div className=\"d-flex justify-content-end\">\r\n                                                <button\r\n                                                    type='button'\r\n                                                    className=\"btn btn-sm btn-light mt-1 px-3\"\r\n                                                    onClick={ () => AttachDriveDocs( val.chat_id ) }\r\n                                                >\r\n                                                    <i className=\"las la-thumbtack\" style={{ fontSize: '15px' }}></i>\r\n                                                </button>\r\n                                                <button type=\"submit\" className=\"btn btn-sm btn-light mt-1\">Send</button>\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                    </div>\r\n                                )\r\n\r\n                            }\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"Right\">\r\n\r\n                <h5 className=\"font-weight-bolder\">Members</h5>\r\n                <hr />\r\n                {\r\n                    Employees.map(\r\n                        ( val, index ) => {\r\n\r\n                            return (\r\n                                <div className=\"Emp\" key={ index }>\r\n                                    <p className=\"font-weight-bold\"> { val.name } </p>\r\n                                    <p>{ val.designation } in { val.department } Department, {val.company }</p>\r\n                                </div>\r\n                            )\r\n\r\n                        }\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;"],"sourceRoot":""}